{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../components/tunes/effects';\nimport * as parts from '../components/tunes/parts';\nimport * as synths from '../components/tunes/synths';\nimport * as seqs from '../components/tunes/sequences';\nimport Speed from '../components/utilities/Speed';\nimport Volume from '../components/utilities/Volume';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport AutoFilter from '../components/effects/AutoFilter';\nimport Tremolo from '../components/effects/Tremolo';\nimport PolySynth from '../components/synths/PolySynth';\nimport TSynth from '../components/synths/TSynth'; // import MetalSynth from '../components/synths/MetalSynth'\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var ambientSynth = synths.tSynth();\n    var ambientPingPongDelay = effects.pingPongDelay();\n    var ambientChebyshev = effects.chebyshev();\n    var ambientPhaser = effects.phaser();\n    var ambientBitCrusher = effects.bitCrusher();\n    var ambientAutoPanner = effects.autoPanner();\n    var ambientDistortion = effects.distortion();\n    var ambientAutoFilter = effects.autoFilter();\n    var ambientTremolo = effects.tremolo();\n    var leadSynth = synths.polySynth();\n    var leadDistortion = effects.distortion();\n    var amSynth = synths.amSynth();\n    var metalSynth = synths.metalSynth();\n    var noiseSynth = synths.noiseSynth();\n    var membraneSynth = synths.membraneSynth();\n    var membraneSynthEffects = synths.membraneSynthEffects();\n    var membraneSynthEffects2 = synths.membraneSynthEffects2(); // let loop1 = new Tone.Pattern(function(time, note) {\n    //   leadSynth.triggerAttackRelease(\n    //     ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n    //     '32n',\n    //     time\n    //   )\n    // }, '16n')\n\n    var loop1 = new Tone.Loop(function (time, note) {\n      ambientSynth.triggerAttackRelease('A3');\n    }, '16n');\n    var loop2 = new Tone.Loop(function (time) {\n      amSynth.triggerAttackRelease('C3', '16n');\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      ambientSynth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      leadSynth.triggerAttackRelease('F3', '4n', time);\n    }, '2n');\n    ambientSynth.chain(ambientPingPongDelay, ambientChebyshev, ambientPhaser, ambientBitCrusher, ambientAutoPanner, ambientDistortion, ambientAutoFilter, ambientTremolo, Tone.Master);\n    leadSynth.chain(leadDistortion, Tone.Master);\n    amSynth.chain(Tone.Master);\n    membraneSynth.chain(Tone.Master);\n    metalSynth.chain(Tone.Master);\n    noiseSynth.chain(Tone.Master);\n    membraneSynthEffects.chain(Tone.Master);\n    membraneSynthEffects2.chain(Tone.Master); // metalSynth.chain(Tone.Master)\n\n    _this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth: ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoFilter: {\n        name: 'ambientAutoFilter',\n        effect: ambientAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientTremolo: {\n        name: 'ambientTremolo',\n        effect: ambientTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadSynth: leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      amSynth: amSynth,\n      membraneSynth: membraneSynth,\n      metalSynth: metalSynth,\n      noiseSynth: noiseSynth,\n      membraneSynthEffects: membraneSynthEffects,\n      membraneSynthEffects2: membraneSynthEffects2,\n      part1: {\n        part: parts.part1(amSynth),\n        on: false\n      },\n      part2: {\n        part: parts.part2(amSynth),\n        on: false\n      },\n      seq1: {\n        seq: seqs.seq1(leadSynth),\n        on: false\n      },\n      seq2: {\n        seq: seqs.seq2(amSynth),\n        on: false\n      },\n      seqdrum: {\n        seq: seqs.seqdrum(membraneSynth),\n        on: false\n      },\n      seqdrum2: {\n        seq: seqs.seqdrum2(membraneSynthEffects),\n        on: false\n      },\n      seqSnare: {\n        seq: seqs.seqSnare(noiseSynth, metalSynth, membraneSynth),\n        on: false\n      },\n      seqPerc: {\n        seq: seqs.seqPerc(membraneSynthEffects),\n        on: false\n      },\n      seqPerc2: {\n        seq: seqs.seqPerc2(membraneSynthEffects2),\n        on: false\n      },\n      seqSnare2: {\n        seq: seqs.seqSnare2(noiseSynth, metalSynth, membraneSynth),\n        on: false\n      },\n      bpm: 90,\n      volume: 90\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'getRandomArbitrary',\n    // 'generateRandom',\n    'toggleLoop', 'togglePart', 'toggleSeq', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue', 'changeSynthValue', 'changeBPMValue', 'changeVolumeValue'); // Tone.Transport.bpm.value = 180\n\n\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"changeBPMValue\",\n    value: function changeBPMValue(synthName, effectName, value) {\n      Tone.Transport.bpm.value = Math.round(value);\n      this.setState({\n        bpm: Math.round(value)\n      });\n    }\n  }, {\n    key: \"changeVolumeValue\",\n    value: function changeVolumeValue(synthName, effectName, value) {\n      Tone.Master.volume.value = Math.round(value);\n      this.setState({\n        volume: Math.round(value)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.generateRandom()\n      var _this$state$ambientDi = this.state.ambientDistortion,\n          name = _this$state$ambientDi.name,\n          effect = _this$state$ambientDi.effect,\n          wet = _this$state$ambientDi.wet,\n          on = _this$state$ambientDi.on;\n      effect.wet.value = on == true ? this.props.wet : 0;\n      effect.distortion = this.props.distortion;\n      effect.oversample = this.props.oversample;\n      this.setState({\n        ambientDistortion: {\n          name: name,\n          effect: effect,\n          wet: this.props.wet,\n          on: on\n        }\n      });\n    } ///RANDOM\n    // getRandomArbitrary(min, max) {\n    //   return Math.floor(Math.random() * (max - min)) + min\n    // }\n    //\n    // generateRandom() {\n    //   const { lastChange, timeout } = this.state\n    //\n    //   if (Date.now() - lastChange >= timeout) {\n    //     const random = this.getRandomArbitrary(100, 3000)\n    //     this.setState({\n    //       lastChange: Date.now(),\n    //       timeout: random\n    //     })\n    //\n    //     this.changeDistortionValue('distortion', random / 30)\n    //   }\n    //\n    //   setTimeout(() => this.generateRandom(), timeout)\n    // }\n\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    } //ПАРТЫ\n\n  }, {\n    key: \"togglePart\",\n    value: function togglePart(partName) {\n      var _this$state$partName = this.state[partName],\n          part = _this$state$partName.part,\n          on = _this$state$partName.on;\n\n      if (on == true) {\n        part.mute = true;\n      } else {\n        // console.log('yo')\n        part.mute = false;\n        part.at('0m');\n        part.start(0);\n        part.loop = true;\n        part.loopEnd = '1m';\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(partName), {\n        part: part,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleSeq\",\n    value: function toggleSeq(seqName) {\n      var _this$state$seqName = this.state[seqName],\n          seq = _this$state$seqName.seq,\n          on = _this$state$seqName.on;\n      console.log(name, on); // on == true ? seq.stop() : seq.start('0m')\n\n      if (on == true) {\n        seq.mute = true;\n      } else {\n        // console.log('yo')\n        seq.mute = false;\n        seq.start('0m');\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(seqName), {\n        seq: seq,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName]; // console.log(synthName, effectName, value)\n      // //ambientSynth attack 0.45555555555555555\n      // console.log(synth)\n\n      var envelope = synth.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on; // console.log(this.state.autoPanner)\n\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on; // console.log(effectName, effectProperty, value)\n\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    } // Специфичность чебушев\n    // changeChebyshevValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.chebyshev\n    //\n    //   effect.order = Math.round(value)\n    //\n    //   this.setState({\n    //     chebyshev: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          ambientSynth = _this$state.ambientSynth,\n          ambientPingPongDelay = _this$state.ambientPingPongDelay,\n          ambientChebyshev = _this$state.ambientChebyshev,\n          ambientPhaser = _this$state.ambientPhaser,\n          ambientBitCrusher = _this$state.ambientBitCrusher,\n          ambientAutoPanner = _this$state.ambientAutoPanner,\n          ambientDistortion = _this$state.ambientDistortion,\n          ambientAutoFilter = _this$state.ambientAutoFilter,\n          ambientTremolo = _this$state.ambientTremolo,\n          leadSynth = _this$state.leadSynth,\n          leadDistortion = _this$state.leadDistortion,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          part1 = _this$state.part1,\n          part2 = _this$state.part2,\n          seq1 = _this$state.seq1,\n          seq2 = _this$state.seq2,\n          seqdrum = _this$state.seqdrum,\n          seqdrum2 = _this$state.seqdrum2,\n          seqPerc = _this$state.seqPerc,\n          seqPerc2 = _this$state.seqPerc2,\n          seqSnare = _this$state.seqSnare,\n          seqSnare2 = _this$state.seqSnare2,\n          amSynth = _this$state.amSynth,\n          membraneSynth = _this$state.membraneSynth,\n          metalSynth = _this$state.metalSynth,\n          noiseSynth = _this$state.noiseSynth,\n          membraneSynthEffects = _this$state.membraneSynthEffects,\n          membraneSynthEffects2 = _this$state.membraneSynthEffects2,\n          bpm = _this$state.bpm,\n          volume = _this$state.volume;\n      var _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          togglePart = this.togglePart,\n          toggleSeq = this.toggleSeq,\n          changeSynthValue = this.changeSynthValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue,\n          changeBPMValue = this.changeBPMValue,\n          changeVolumeValue = this.changeVolumeValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(Speed, {\n        bpm: bpm,\n        changeBPMValue: changeBPMValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(Volume, {\n        volume: volume,\n        changeVolumeValue: changeVolumeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonContainerGroup1\",\n        id: \"seq\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"PERC NOISE LOOP1\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }), \"PART1\", React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: part1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.togglePart('part1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }), \"SNARE\", React.createElement(PlaySwitch, {\n        synth: \"metalSynth ,  noiseSynth, membraneSynth\",\n        instrument: (metalSynth, noiseSynth, membraneSynth),\n        name: \"play\",\n        value: seqSnare.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqSnare');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }), \"DRUMS\", React.createElement(PlaySwitch, {\n        synth: \"membraneSynth\",\n        instrument: membraneSynth,\n        name: \"play\",\n        value: seqdrum.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqdrum');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonContainerGroup2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"SEC2\", React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: seq2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seq2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }), \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }), \"PERC\", React.createElement(PlaySwitch, {\n        synth: \"membraneSynthEffects\",\n        instrument: membraneSynthEffects,\n        name: \"play\",\n        value: seqPerc.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqPerc');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonContainerGroup2\",\n        id: \"seq\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        synth: \"leadSynth\",\n        instrument: leadSynth,\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }), \"SNARE2\", React.createElement(PlaySwitch, {\n        synth: \"metalSynth ,  noiseSynth, membraneSynth\",\n        instrument: (metalSynth, noiseSynth, membraneSynth),\n        name: \"play\",\n        value: seqSnare2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqSnare2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }), \"SEQ\", React.createElement(PlaySwitch, {\n        synth: \"leadSynth\",\n        instrument: leadSynth,\n        name: \"play\",\n        value: seq1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seq1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }), \"DRUM2\", React.createElement(PlaySwitch, {\n        synth: \"membraneSynthEffects\",\n        instrument: membraneSynthEffects,\n        name: \"play\",\n        value: seqdrum2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqdrum2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonContainerGroup4\",\n        id: \"seq\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"PERC2\", React.createElement(PlaySwitch, {\n        synth: \"membraneSynthEffects2\",\n        instrument: membraneSynthEffects2,\n        name: \"play\",\n        value: seqPerc2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqPerc2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }))), \"part2\", React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: part2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.togglePart('part2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }), \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, ambientDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, ambientPingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPingPongDelay');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, ambientChebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientChebyshev');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, ambientPhaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPhaser');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, ambientBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, ambientAutoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoPanner');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      })), React.createElement(AutoFilter, Object.assign({}, ambientAutoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoFilter');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      })), React.createElement(Tremolo, Object.assign({}, ambientTremolo, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientTremolo');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","parts","synths","seqs","Speed","Volume","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","AutoFilter","Tremolo","PolySynth","TSynth","Synth","props","defaultWetValue","ambientSynth","tSynth","ambientPingPongDelay","pingPongDelay","ambientChebyshev","chebyshev","ambientPhaser","phaser","ambientBitCrusher","bitCrusher","ambientAutoPanner","autoPanner","ambientDistortion","distortion","ambientAutoFilter","autoFilter","ambientTremolo","tremolo","leadSynth","polySynth","leadDistortion","amSynth","metalSynth","noiseSynth","membraneSynth","membraneSynthEffects","membraneSynthEffects2","loop1","Loop","time","note","triggerAttackRelease","loop2","loop3","loop4","chain","Master","state","name","effect","wet","on","loop","part1","part","part2","seq1","seq","seq2","seqdrum","seqdrum2","seqSnare","seqPerc","seqPerc2","seqSnare2","bpm","volume","bindAll","Transport","start","synthName","effectName","value","Math","round","setState","oversample","loopName","stop","partName","mute","at","loopEnd","seqName","console","log","synth","envelope","oscillator","effectProperty","toggleEffect","toggleLoop","togglePart","toggleSeq","changeSynthValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","changeBPMValue","changeVolumeValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../components/tunes/effects'\nimport * as parts from '../components/tunes/parts'\nimport * as synths from '../components/tunes/synths'\nimport * as seqs from '../components/tunes/sequences'\n\nimport Speed from '../components/utilities/Speed'\nimport Volume from '../components/utilities/Volume'\n\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport AutoFilter from '../components/effects/AutoFilter'\nimport Tremolo from '../components/effects/Tremolo'\n\nimport PolySynth from '../components/synths/PolySynth'\nimport TSynth from '../components/synths/TSynth'\n// import MetalSynth from '../components/synths/MetalSynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let ambientSynth = synths.tSynth()\n    let ambientPingPongDelay = effects.pingPongDelay()\n    let ambientChebyshev = effects.chebyshev()\n    let ambientPhaser = effects.phaser()\n    let ambientBitCrusher = effects.bitCrusher()\n    let ambientAutoPanner = effects.autoPanner()\n    let ambientDistortion = effects.distortion()\n    let ambientAutoFilter = effects.autoFilter()\n    let ambientTremolo = effects.tremolo()\n\n    let leadSynth = synths.polySynth()\n    let leadDistortion = effects.distortion()\n\n    let amSynth = synths.amSynth()\n    let metalSynth = synths.metalSynth()\n    let noiseSynth = synths.noiseSynth()\n    let membraneSynth = synths.membraneSynth()\n    let membraneSynthEffects = synths.membraneSynthEffects()\n    let membraneSynthEffects2 = synths.membraneSynthEffects2()\n\n    // let loop1 = new Tone.Pattern(function(time, note) {\n    //   leadSynth.triggerAttackRelease(\n    //     ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n    //     '32n',\n    //     time\n    //   )\n    // }, '16n')\n    let loop1 = new Tone.Loop(function(time, note) {\n      ambientSynth.triggerAttackRelease('A3')\n    }, '16n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      amSynth.triggerAttackRelease('C3', '16n')\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      ambientSynth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      leadSynth.triggerAttackRelease('F3', '4n', time)\n    }, '2n')\n\n    ambientSynth.chain(\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      ambientAutoFilter,\n      ambientTremolo,\n      Tone.Master\n    )\n\n    leadSynth.chain(leadDistortion, Tone.Master)\n    amSynth.chain(Tone.Master)\n    membraneSynth.chain(Tone.Master)\n    metalSynth.chain(Tone.Master)\n    noiseSynth.chain(Tone.Master)\n    membraneSynthEffects.chain(Tone.Master)\n    membraneSynthEffects2.chain(Tone.Master)\n\n    // metalSynth.chain(Tone.Master)\n\n    this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoFilter: {\n        name: 'ambientAutoFilter',\n        effect: ambientAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientTremolo: {\n        name: 'ambientTremolo',\n        effect: ambientTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false },\n\n      amSynth,\n      membraneSynth,\n      metalSynth,\n      noiseSynth,\n      membraneSynthEffects,\n      membraneSynthEffects2,\n\n      part1: {\n        part: parts.part1(amSynth),\n        on: false\n      },\n      part2: {\n        part: parts.part2(amSynth),\n        on: false\n      },\n\n      seq1: {\n        seq: seqs.seq1(leadSynth),\n        on: false\n      },\n      seq2: {\n        seq: seqs.seq2(amSynth),\n        on: false\n      },\n      seqdrum: {\n        seq: seqs.seqdrum(membraneSynth),\n        on: false\n      },\n      seqdrum2: {\n        seq: seqs.seqdrum2(membraneSynthEffects),\n        on: false\n      },\n      seqSnare: {\n        seq: seqs.seqSnare(noiseSynth, metalSynth, membraneSynth),\n\n        on: false\n      },\n      seqPerc: {\n        seq: seqs.seqPerc(membraneSynthEffects),\n        on: false\n      },\n      seqPerc2: {\n        seq: seqs.seqPerc2(membraneSynthEffects2),\n        on: false\n      },\n      seqSnare2: {\n        seq: seqs.seqSnare2(noiseSynth, metalSynth, membraneSynth),\n\n        on: false\n      },\n      bpm: 90,\n      volume: 90\n    }\n\n    _.bindAll(\n      this,\n      // 'getRandomArbitrary',\n      // 'generateRandom',\n      'toggleLoop',\n      'togglePart',\n      'toggleSeq',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue',\n      'changeSynthValue',\n      'changeBPMValue',\n      'changeVolumeValue'\n    )\n\n    // Tone.Transport.bpm.value = 180\n    Tone.Transport.start()\n  }\n\n  changeBPMValue(synthName, effectName, value) {\n    Tone.Transport.bpm.value = Math.round(value)\n\n    this.setState({\n      bpm: Math.round(value)\n    })\n  }\n\n  changeVolumeValue(synthName, effectName, value) {\n    Tone.Master.volume.value = Math.round(value)\n\n    this.setState({\n      volume: Math.round(value)\n    })\n  }\n\n  componentDidMount() {\n    //this.generateRandom()\n\n    let { name, effect, wet, on } = this.state.ambientDistortion\n\n    effect.wet.value = on == true ? this.props.wet : 0\n    effect.distortion = this.props.distortion\n    effect.oversample = this.props.oversample\n\n    this.setState({\n      ambientDistortion: {\n        name,\n        effect,\n        wet: this.props.wet,\n        on\n      }\n    })\n  }\n\n  ///RANDOM\n\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 30)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  //ПАРТЫ\n  togglePart(partName) {\n    let { part, on } = this.state[partName]\n\n    if (on == true) {\n      part.mute = true\n    } else {\n      // console.log('yo')\n      part.mute = false\n      part.at('0m')\n      part.start(0)\n      part.loop = true\n      part.loopEnd = '1m'\n    }\n\n    this.setState({\n      [`${partName}`]: {\n        part: part,\n        on: !on\n      }\n    })\n  }\n\n  toggleSeq(seqName) {\n    let { seq, on } = this.state[seqName]\n    console.log(name, on)\n\n    // on == true ? seq.stop() : seq.start('0m')\n\n    if (on == true) {\n      seq.mute = true\n    } else {\n      // console.log('yo')\n      seq.mute = false\n      seq.start('0m')\n    }\n\n    this.setState({\n      [`${seqName}`]: {\n        seq: seq,\n        on: !on\n      }\n    })\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    // console.log(synthName, effectName, value)\n    // //ambientSynth attack 0.45555555555555555\n    // console.log(synth)\n    let envelope = synth.envelope\n\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(effectName, effectProperty, value)\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // Специфичность чебушев\n  // changeChebyshevValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.chebyshev\n  //\n  //   effect.order = Math.round(value)\n  //\n  //   this.setState({\n  //     chebyshev: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  render() {\n    let {\n      ambientSynth,\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      ambientAutoFilter,\n      ambientTremolo,\n      leadSynth,\n      leadDistortion,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      part1,\n      part2,\n      seq1,\n      seq2,\n      seqdrum,\n      seqdrum2,\n\n      seqPerc,\n      seqPerc2,\n      seqSnare,\n      seqSnare2,\n\n      amSynth,\n      membraneSynth,\n      metalSynth,\n      noiseSynth,\n      membraneSynthEffects,\n      membraneSynthEffects2,\n      bpm,\n      volume\n    } = this.state\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      togglePart,\n      toggleSeq,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue,\n      changeBPMValue,\n      changeVolumeValue\n    } = this\n\n    return (\n      <div>\n        <div className=\"PlaysSwitchCover\">\n          <div>\n            <Speed bpm={bpm} changeBPMValue={changeBPMValue} />\n          </div>\n          <div>\n            <Volume volume={volume} changeVolumeValue={changeVolumeValue} />\n          </div>\n          <div className=\"PlaySwitchContainer\">\n            <div className=\"ButtonContainerGroup1\" id=\"seq\">\n              PERC NOISE LOOP1\n              <PlaySwitch\n                synth=\"ambientSynth\"\n                instrument={ambientSynth}\n                name=\"play\"\n                value={loop1.on}\n                handleToggleClick={() => {\n                  this.toggleLoop('loop1')\n                }}\n              />\n              PART1\n              <PlaySwitch\n                synth=\"amSynth\"\n                instrument={amSynth}\n                name=\"play\"\n                value={part1.on}\n                handleToggleClick={() => {\n                  this.togglePart('part1')\n                }}\n              />\n              SNARE\n              <PlaySwitch\n                synth=\"metalSynth ,  noiseSynth, membraneSynth\"\n                instrument={(metalSynth, noiseSynth, membraneSynth)}\n                name=\"play\"\n                value={seqSnare.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seqSnare')\n                }}\n              />\n              DRUMS\n              <PlaySwitch\n                synth=\"membraneSynth\"\n                instrument={membraneSynth}\n                name=\"play\"\n                value={seqdrum.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seqdrum')\n                }}\n              />\n            </div>\n            <div className=\"ButtonContainerGroup2\">\n              SEC2\n              <PlaySwitch\n                synth=\"amSynth\"\n                instrument={amSynth}\n                name=\"play\"\n                value={seq2.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seq2')\n                }}\n              />\n              ToggleLoop2\n              <PlaySwitch\n                synth=\"amSynth\"\n                instrument={amSynth}\n                name=\"play\"\n                value={loop2.on}\n                handleToggleClick={() => {\n                  this.toggleLoop('loop2')\n                }}\n              />\n              PERC\n              <PlaySwitch\n                synth=\"membraneSynthEffects\"\n                instrument={membraneSynthEffects}\n                name=\"play\"\n                value={seqPerc.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seqPerc')\n                }}\n              />\n            </div>\n            <div className=\"ButtonContainerGroup2\" id=\"seq\">\n              ToggleLoop4\n              <PlaySwitch\n                synth=\"leadSynth\"\n                instrument={leadSynth}\n                name=\"play\"\n                value={loop4.on}\n                handleToggleClick={() => {\n                  this.toggleLoop('loop4')\n                }}\n              />\n              SNARE2\n              <PlaySwitch\n                synth=\"metalSynth ,  noiseSynth, membraneSynth\"\n                instrument={(metalSynth, noiseSynth, membraneSynth)}\n                name=\"play\"\n                value={seqSnare2.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seqSnare2')\n                }}\n              />\n              SEQ\n              <PlaySwitch\n                synth=\"leadSynth\"\n                instrument={leadSynth}\n                name=\"play\"\n                value={seq1.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seq1')\n                }}\n              />\n              DRUM2\n              <PlaySwitch\n                synth=\"membraneSynthEffects\"\n                instrument={membraneSynthEffects}\n                name=\"play\"\n                value={seqdrum2.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seqdrum2')\n                }}\n              />\n            </div>\n            <div className=\"ButtonContainerGroup4\" id=\"seq\">\n              PERC2\n              <PlaySwitch\n                synth=\"membraneSynthEffects2\"\n                instrument={membraneSynthEffects2}\n                name=\"play\"\n                value={seqPerc2.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seqPerc2')\n                }}\n              />\n            </div>\n          </div>\n          part2\n          <PlaySwitch\n            synth=\"amSynth\"\n            instrument={amSynth}\n            name=\"play\"\n            value={part2.on}\n            handleToggleClick={() => {\n              this.togglePart('part2')\n            }}\n          />\n          ToggleLoop3\n          <PlaySwitch\n            synth=\"ambientSynth\"\n            instrument={ambientSynth}\n            name=\"play\"\n            value={loop3.on}\n            handleToggleClick={() => {\n              this.toggleLoop('loop3')\n            }}\n          />\n          <div className=\"PannelsCover\">\n            <Distortion\n              {...ambientDistortion}\n              toggleEffect={() => toggleEffect('ambientDistortion')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n\n            <PingPongDelay\n              {...ambientPingPongDelay}\n              toggleEffect={() => toggleEffect('ambientPingPongDelay')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n            <Chebyshev\n              {...ambientChebyshev}\n              toggleEffect={() => toggleEffect('ambientChebyshev')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n            <Phaser\n              {...ambientPhaser}\n              toggleEffect={() => toggleEffect('ambientPhaser')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n\n            <BitCrusher\n              {...ambientBitCrusher}\n              toggleEffect={() => toggleEffect('ambientBitCrusher')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n            <AutoPanner\n              {...ambientAutoPanner}\n              toggleEffect={() => toggleEffect('ambientAutoPanner')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n            <AutoFilter\n              {...ambientAutoFilter}\n              toggleEffect={() => toggleEffect('ambientAutoFilter')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n            <Tremolo\n              {...ambientTremolo}\n              toggleEffect={() => toggleEffect('ambientTremolo')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}