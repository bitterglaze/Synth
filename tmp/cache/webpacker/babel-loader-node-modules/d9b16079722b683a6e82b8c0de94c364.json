{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// import _ from 'lodash'\n// import React from 'react'\n// import Tone from 'tone'\n//\n// export default class Synth extends React.Component {\n//   constructor(props) {\n//     super(props)\n//\n//     let distortion = new Tone.Distortion({\n//       distortion: 1,\n//       oversample: '4x'\n//     })\n//\n//     let tremolo = new Tone.Tremolo({\n//       frequency: 10,\n//       type: 'sine',\n//       depth: 100,\n//       spread: 180\n//     })\n//\n//     let feedbackDelay = new Tone.FeedbackDelay({\n//       delayTime: '8n',\n//       maxDelay: 10\n//     })\n//\n//     let autoFilter = new Tone.AutoFilter({\n//       frequency: 1,\n//       type: 'sine',\n//       depth: 1,\n//       baseFrequency: 20,\n//       octaves: 4.6,\n//       filter: {\n//         type: 'lowpass',\n//         rolloff: -12,\n//         Q: 1\n//       }\n//     })\n//\n//     let distortion100 = new Tone.Distortion({\n//       distortion: 100,\n//       oversample: '4x'\n//     })\n//\n//     let autoPanner = new Tone.AutoPanner({\n//       frequency: 1,\n//       type: 'sine',\n//       depth: 1\n//     })\n//\n//     let autoWah = new Tone.AutoWah({\n//       baseFrequency: 100,\n//       octaves: 6,\n//       sensitivity: 0,\n//       Q: 2,\n//       gain: 2,\n//       follower: {\n//         attack: 0.3,\n//         release: 0.5\n//       }\n//     })\n//\n//     let bitCrusher = new Tone.BitCrusher({\n//       bits: 4\n//     })\n//\n//     let chebyshev = new Tone.Chebyshev({\n//       order: 50,\n//       oversample: 'none'\n//     })\n//\n//     let chorus = new Tone.Chorus({\n//       frequency: 1.5,\n//       delayTime: 3.5,\n//       depth: 0.7,\n//       type: 'sine',\n//       spread: 180\n//     })\n//\n//     let convolver = new Tone.Convolver({\n//       onload: Tone.noOp,\n//       normalize: true\n//     })\n//\n//     let effect = new Tone.Effect({\n//       wet: 1\n//     })\n//\n//     var feedbackEffect = new Tone.FeedbackEffect({\n//       feedback: 0.125\n//     })\n//\n//     var freeverb = new Tone.Freeverb({\n//       roomSize: 0.7,\n//       dampening: 3000\n//     })\n//\n//     var jcReverb = new Tone.JCReverb({\n//       roomSize: 0.5\n//     })\n//\n//     let phaser = new Tone.Phaser({\n//       frequency: 0.5,\n//       octaves: 3,\n//       stages: 10,\n//       Q: 10,\n//       baseFrequency: 350\n//     })\n//\n//     let pingPongDelay = new Tone.PingPongDelay({\n//       delayTime: 0.25,\n//       maxDelayTime: 1\n//     })\n//\n//     let pitchShift = new Tone.PitchShift({\n//       pitch: 0,\n//       windowSize: 0.1,\n//       delayTime: 0,\n//       feedback: 0\n//     })\n//\n//     let reverb = new Tone.Reverb({\n//       decay: 1.5,\n//       preDelay: 0.01\n//     })\n//\n//     let stereoWidener = new Tone.StereoWidener({\n//       width: 0.5\n//     })\n//\n//     let vibrato = new Tone.Vibrato({\n//       maxDelay: 0.005,\n//       frequency: 5,\n//       depth: 0.1,\n//       type: 'sine'\n//     })\n//\n//     this.state = {\n//       distortion: distortion,\n//       distortionIsOn: false,\n//       tremolo: tremolo,\n//       tremoloIsOn: false,\n//       feedbackDelay: feedbackDelay,\n//       feedbackDelayIsOn: false,\n//       autoFilter: autoFilter,\n//       autoFilterIsOn: false,\n//       distortion100: distortion100,\n//       distortion100IsOn: false,\n//       autoPanner: autoPanner,\n//       autoPannerIsOn: false,\n//\n//       autoWah: autoWah,\n//       autoWahIsOn: false,\n//       bitCrusher: bitCrusher,\n//       bitCrusherIsOn: false,\n//       chebyshev: chebyshev,\n//       chebyshevIsOn: false,\n//       chorus: chorus,\n//       chorusIsOn: false,\n//       convolver: convolver,\n//       convolverIsOn: false,\n//       effect: effect,\n//       effectIsOn: false,\n//       feedbackEffect: feedbackEffect,\n//       feedbackEffectIsOn: false,\n//       freeverb: freeverb,\n//       freeverbIsOn: false,\n//       jcReverb: jcReverb,\n//       jcReverbIsOn: false,\n//       phaser: phaser,\n//       phaserIsOn: false,\n//       pingPongDelay: pingPongDelay,\n//       pingPongDelayIsOn: false,\n//       pitchShift: pitchShift,\n//       pitchShiftIsOn: false,\n//       reverb: reverb,\n//       reverbIsOn: false,\n//       stereoWidener: stereoWidener,\n//       stereoWidenerIsOn: false,\n//       vibrato: vibrato,\n//       vibratoIsOn: false\n//     }\n//\n//     this.startSynth = this.startSynth.bind(this)\n//     this.toggleFilter = this.toggleFilter.bind(this)\n//     this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n//     this.toggleTremolo = this.toggleTremolo.bind(this)\n//     this.toggleDistortion = this.toggleDistortion.bind(this)\n//     this.toggleDistortion100 = this.toggleDistortion100.bind(this)\n//     this.toggleAutoPanner = this.toggleAutoPanner.bind(this)\n//     this.toggleAutoWah = this.toggleAutoWah.bind(this)\n//\n//     this.toggleAutoWah = this.toggleAutoWah.bind(this)\n//     this.toggleBitCrusher = this.toggleBitCrusher.bind(this)\n//     this.toggleChebyshev = this.toggleChebyshev.bind(this)\n//     this.toggleChorus = this.toggleChorus.bind(this)\n//     this.toggleConvolver = this.toggleConvolver.bind(this)\n//     this.toggleEffect = this.toggleEffect.bind(this)\n//     this.toggleFeedbackEffect = this.toggleFeedbackEffect.bind(this)\n//     this.toggleFreeverb = this.toggleFreeverb.bind(this)\n//     this.toggleBitCrusher = this.toggleBitCrusher.bind(this)\n//     this.toggleJCReverb = this.toggleJCReverb.bind(this)\n//     this.togglePhaser = this.togglePhaser.bind(this)\n//     this.togglePingPongDelay = this.togglePingPongDelay.bind(this)\n//     this.togglePitchShift = this.togglePitchShift.bind(this)\n//     this.toggleReverb = this.toggleReverb.bind(this)\n//     this.toggleStereoWidener = this.toggleStereoWidener.bind(this)\n//     this.toggleVibrato = this.toggleVibrato.bind(this)\n//\n//     _.bindAll(this, 'startSynth', 'toggleDistortion100')\n//     //перебиндить все таким образом\n//   }\n//\n//   startSynth() {\n//     let synth = new Tone.Synth()\n//     synth.chain(\n//       this.state.autoFilter,\n//       this.state.feedbackDelay,\n//       this.state.tremolo,\n//       this.state.distortion,\n//       this.state.distortion100,\n//       this.state.autoPanner,\n//       this.state.autoWah,\n//       this.state.bitCrusher,\n//       this.state.chebyshev,\n//       this.state.chorus,\n//       this.state.convolver,\n//       this.state.effect,\n//       this.state.feedbackEffect,\n//       this.state.freeverb,\n//       this.state.jcReverb,\n//       this.state.phaser,\n//       this.state.pingPongDelay,\n//       this.state.pitchShift,\n//       this.state.reverb,\n//       this.state.stereoWidener,\n//       this.state.vibrato,\n//\n//       Tone.Master\n//     )\n//\n//     this.setState({\n//       synth: synth\n//     })\n//\n//     let loop = new Tone.Loop(function(time) {\n//       synth.triggerAttackRelease('C2', '8n', time)\n//     }, '4n')\n//\n//     loop.start('0m').stop('16m')\n//\n//     Tone.Transport.bpm.value = 115\n//     Tone.Transport.start()\n//   }\n//\n//   toggleFilter() {\n//     if (this.state.autoFilterIsOn == true) {\n//       this.state.autoFilter.wet.value = 0\n//\n//       this.setState({\n//         autoFilterIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.autoFilter, Tone.Master)\n//       this.state.autoFilter.wet.value = 1\n//\n//       this.setState({\n//         autoFilterIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleFeedbackDelay() {\n//     // let feedbackDelay1 = new Tone.FeedbackDelay({\n//     //   delayTime: '32n',\n//     //   maxDelay: 10\n//     // })\n//     //\n//     // let feedbackDelay2 = new Tone.FeedbackDelay({\n//     //   delayTime: '8n',\n//     //   maxDelay: 10\n//     // })\n//     //\n//     // this.state.synth.connect(feedbackDelay1)\n//     // this.state.synth.connect(feedbackDelay2)\n//     if (this.state.feedbackDelayIsOn == true) {\n//       this.state.feedbackDelay.wet.value = 0\n//\n//       this.setState({\n//         feedbackDelayIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.feedbackDelay, Tone.Master)\n//       this.state.feedbackDelay.wet.value = 1\n//\n//       this.setState({\n//         feedbackDelayIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleTremolo() {\n//     if (this.state.tremoloIsOn == true) {\n//       this.state.tremolo.wet.value = 0\n//\n//       this.setState({\n//         tremoloIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.tremolo, Tone.Master)\n//       this.state.tremolo.wet.value = 1\n//\n//       this.setState({\n//         tremoloIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleDistortion() {\n//     if (this.state.distortionIsOn == true) {\n//       // this.state.synth.disconnect()\n//       // this.state.synth.chain(Tone.Master) строчка ниже заменяет\n//\n//       this.state.distortion.wet.value = 0\n//\n//       this.setState({\n//         distortionIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.distortion, Tone.Master)\n//       this.state.distortion.wet.value = 1\n//\n//       this.setState({\n//         distortionIsOn: true\n//       })\n//     }\n//     //this.state.synth.connect(distortion)\n//   }\n//\n//   toggleDistortion100() {\n//     // let { distortion } = this.state\n//     // distortion.distortion = 100\n//     //\n//     // this.setState({\n//     //   distortion: distortion\n//     // })\n//     if (this.state.distortion100IsOn == true) {\n//       this.state.distortion100.wet.value = 0\n//\n//       this.setState({\n//         distortion100IsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.distortion100, Tone.Master)\n//       this.state.distortion100.wet.value = 1\n//\n//       this.setState({\n//         distortion100IsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleAutoPanner() {\n//     if (this.state.autoPannerIsOn == true) {\n//       this.state.autoPanner.wet.value = 0\n//\n//       this.setState({\n//         autoPannerIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.autoPanner, Tone.Master)\n//       this.state.autoPanner.wet.value = 1\n//\n//       this.setState({\n//         autoPannerIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleAutoWah() {\n//     if (this.state.autoWahIsOn == true) {\n//       this.state.autoWah.wet.value = 0\n//\n//       this.setState({\n//         autoWahIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.autoWah, Tone.Master)\n//       this.state.autoWah.wet.value = 1\n//\n//       this.setState({\n//         autoWahIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleBitCrusher() {\n//     if (this.state.bitCrusherIsOn == true) {\n//       this.state.bitCrusher.wet.value = 0\n//\n//       this.setState({\n//         bitCrusherIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.bitCrusher, Tone.Master)\n//       this.state.bitCrusher.wet.value = 1\n//\n//       this.setState({\n//         bitCrusherIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleChebyshev() {\n//     if (this.state.chebyshevIsOn == true) {\n//       this.state.chebyshev.wet.value = 0\n//\n//       this.setState({\n//         chebyshevIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.chebyshev, Tone.Master)\n//       this.state.chebyshev.wet.value = 1\n//\n//       this.setState({\n//         chebyshevIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleChorus() {\n//     if (this.state.chorusIsOn == true) {\n//       this.state.chorus.wet.value = 0\n//\n//       this.setState({\n//         chorusIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.chorus, Tone.Master)\n//       this.state.chorus.wet.value = 1\n//\n//       this.setState({\n//         chorusIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleConvolver() {\n//     if (this.state.convolverIsOn == true) {\n//       this.state.convolver.wet.value = 0\n//\n//       this.setState({\n//         convolverIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.convolver, Tone.Master)\n//       this.state.convolver.wet.value = 1\n//\n//       this.setState({\n//         convolverIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleEffect() {\n//     if (this.state.effectIsOn == true) {\n//       this.state.effect.wet.value = 0\n//\n//       this.setState({\n//         effectIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.effect, Tone.Master)\n//       this.state.effect.wet.value = 1\n//\n//       this.setState({\n//         effectIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleFeedbackEffect() {\n//     if (this.state.feedbackEffectIsOn == true) {\n//       this.state.feedbackEffect.wet.value = 0\n//\n//       this.setState({\n//         feedbackEffectIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.feedbackEffect, Tone.Master)\n//       this.state.feedbackEffect.wet.value = 1\n//\n//       this.setState({\n//         feedbackEffectIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleFreeverb() {\n//     if (this.state.freeverbIsOn == true) {\n//       this.state.freeverb.wet.value = 0\n//\n//       this.setState({\n//         freeverbIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.freeverb, Tone.Master)\n//       this.state.freeverb.wet.value = 1\n//\n//       this.setState({\n//         freeverbIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleJCReverb() {\n//     if (this.state.jcReverbIsOn == true) {\n//       this.state.jcReverb.wet.value = 0\n//\n//       this.setState({\n//         jcReverbIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.jcReverb, Tone.Master)\n//       this.state.jcReverb.wet.value = 1\n//\n//       this.setState({\n//         jcReverbIsOn: true\n//       })\n//     }\n//   }\n//\n//   togglePhaser() {\n//     if (this.state.phaserIsOn == true) {\n//       this.state.phaser.wet.value = 0\n//\n//       this.setState({\n//         phaserIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.phaser, Tone.Master)\n//       this.state.phaser.wet.value = 1\n//\n//       this.setState({\n//         phaserIsOn: true\n//       })\n//     }\n//   }\n//\n//   togglePingPongDelay() {\n//     if (this.state.pingPongDelayIsOn == true) {\n//       this.state.pingPongDelay.wet.value = 0\n//\n//       this.setState({\n//         pingPongDelayIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.pingPongDelay, Tone.Master)\n//       this.state.pingPongDelay.wet.value = 1\n//\n//       this.setState({\n//         pingPongDelayIsOn: true\n//       })\n//     }\n//   }\n//\n//   togglePitchShift() {\n//     if (this.state.pitchShiftIsOn == true) {\n//       this.state.pitchShift.wet.value = 0\n//\n//       this.setState({\n//         pitchShiftIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.pitchShift, Tone.Master)\n//       this.state.pitchShift.wet.value = 1\n//\n//       this.setState({\n//         pitchShiftIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleReverb() {\n//     if (this.state.reverbIsOn == true) {\n//       this.state.reverb.wet.value = 0\n//\n//       this.setState({\n//         reverbIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.reverb, Tone.Master)\n//       this.state.reverb.wet.value = 1\n//\n//       this.setState({\n//         reverbIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleStereoWidener() {\n//     if (this.state.stereoWidenerIsOn == true) {\n//       this.state.stereoWidener.wet.value = 0\n//\n//       this.setState({\n//         stereoWidenerIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.stereoWidener, Tone.Master)\n//       this.state.stereoWidener.wet.value = 1\n//\n//       this.setState({\n//         stereoWidenerIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleVibrato() {\n//     if (this.state.vibratoIsOn == true) {\n//       this.state.vibrato.wet.value = 0\n//\n//       this.setState({\n//         vibratoIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.vibrato, Tone.Master)\n//       this.state.vibrato.wet.value = 1\n//\n//       this.setState({\n//         vibratoIsOn: true\n//       })\n//     }\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <div onClick={this.startSynth}>Start</div>\n//         <div onClick={this.toggleFilter}>\n//           toggle Filter {this.state.autoFilterIsOn}\n//         </div>\n//         <div onClick={this.toggleFeedbackDelay}>\n//           toggle FeedbackDelay {this.state.feedbackDelayIsOn}\n//         </div>\n//         <div onClick={this.toggleTremolo}>\n//           toggle Tremolo {this.state.tremoloIsOn}\n//         </div>\n//         <div onClick={this.toggleDistortion}>\n//           toggle Distortion {this.state.distortionIsOn}\n//         </div>\n//         <div onClick={this.toggleDistortion100}>\n//           toggle Distortion100 {this.state.distortion100IsOn}\n//         </div>\n//         <div onClick={this.toggleAutoPanner}>\n//           toggle AutoPanner {this.state.autoPannerIsOn}\n//         </div>\n//\n//         <div onClick={this.toggleAutoWah}>\n//           toggle AutoWah {this.state.autoWahIsOn}\n//         </div>\n//         <div onClick={this.toggleBitCrusher}>\n//           toggle BitCrusher {this.state.bitCrusherIsOn}\n//         </div>\n//         <div onClick={this.toggleChebyshev}>\n//           toggle Chebyshev {this.state.chebyshevIsOn}\n//         </div>\n//         <div onClick={this.toggleChorus}>\n//           toggle Chorus {this.state.chorusIsOn}\n//         </div>\n//         <div onClick={this.toggleConvolver}>\n//           toggle Convolver {this.state.convolverIsOn}\n//         </div>\n//         <div onClick={this.toggleEffect}>\n//           toggle Effect {this.state.effectIsOn}\n//         </div>\n//         <div onClick={this.toggleFeedbackEffect}>\n//           toggle FeedbackEffect {this.state.feedbackEffectIsOn}\n//         </div>\n//         <div onClick={this.toggleFreeverb}>\n//           toggle Freeverb {this.state.freeverbIsOn}\n//         </div>\n//         <div onClick={this.toggleJCReverb}>\n//           toggle JCReverb {this.state.jcReverbIsOn}\n//         </div>\n//         <div onClick={this.togglePhaser}>\n//           toggle Phaser {this.state.phaserIsOn}\n//         </div>\n//         <div onClick={this.togglePingPongDelay}>\n//           toggle PingPongDelay {this.state.pingPongDelayIsOn}\n//         </div>\n//         <div onClick={this.togglePitchShift}>\n//           toggle PitchShift {this.state.pitchShiftIsOn}\n//         </div>\n//         <div onClick={this.toggleReverb}>\n//           toggle Reverb {this.state.reverbIsOn}\n//         </div>\n//         <div onClick={this.toggleStereoWidener}>\n//           toggle StereoWidener {this.state.stereoWidenerIsOn}\n//         </div>\n//         <div onClick={this.toggleVibrato}>\n//           toggle Vibrato {this.state.vibratoIsOn}\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n////список все эффектов\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 1,\n      oversample: '4x'\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    _this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      feedbackDelay: feedbackDelay,\n      feedbackDelayIsOn: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      effect: effect,\n      effectIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false,\n      pitchShift: pitchShift,\n      pitchShiftIsOn: false,\n      reverb: reverb,\n      reverbIsOn: false,\n      stereoWidener: stereoWidener,\n      stereoWidenerIsOn: false,\n      vibrato: vibrato,\n      vibratoIsOn: false\n    };\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleFilter = _this.toggleFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleAutoPanner = _this.toggleAutoPanner.bind(_assertThisInitialized(_this));\n    _this.toggleAutoWah = _this.toggleAutoWah.bind(_assertThisInitialized(_this));\n    _this.toggleAutoWah = _this.toggleAutoWah.bind(_assertThisInitialized(_this));\n    _this.toggleBitCrusher = _this.toggleBitCrusher.bind(_assertThisInitialized(_this));\n    _this.toggleChebyshev = _this.toggleChebyshev.bind(_assertThisInitialized(_this));\n    _this.toggleChorus = _this.toggleChorus.bind(_assertThisInitialized(_this));\n    _this.toggleConvolver = _this.toggleConvolver.bind(_assertThisInitialized(_this));\n    _this.toggleEffect = _this.toggleEffect.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackEffect = _this.toggleFeedbackEffect.bind(_assertThisInitialized(_this));\n    _this.toggleFreeverb = _this.toggleFreeverb.bind(_assertThisInitialized(_this));\n    _this.toggleBitCrusher = _this.toggleBitCrusher.bind(_assertThisInitialized(_this));\n    _this.toggleJCReverb = _this.toggleJCReverb.bind(_assertThisInitialized(_this));\n    _this.togglePhaser = _this.togglePhaser.bind(_assertThisInitialized(_this));\n    _this.togglePingPongDelay = _this.togglePingPongDelay.bind(_assertThisInitialized(_this));\n    _this.togglePitchShift = _this.togglePitchShift.bind(_assertThisInitialized(_this));\n    _this.toggleReverb = _this.toggleReverb.bind(_assertThisInitialized(_this));\n    _this.toggleStereoWidener = _this.toggleStereoWidener.bind(_assertThisInitialized(_this));\n    _this.toggleVibrato = _this.toggleVibrato.bind(_assertThisInitialized(_this)); //перебиндить все таким образом\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth();\n      synth.chain(this.state.autoFilter, this.state.feedbackDelay, this.state.tremolo, this.state.distortion, this.state.autoPanner, this.state.autoWah, this.state.bitCrusher, this.state.chebyshev, this.state.chorus, this.state.convolver, this.state.effect, this.state.feedbackEffect, this.state.freeverb, this.state.jcReverb, this.state.phaser, this.state.pingPongDelay, this.state.pitchShift, this.state.reverb, this.state.stereoWidener, this.state.vibrato, Tone.Master);\n      this.setState({\n        synth: synth\n      });\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease('C2', '8n', time);\n      }, '4n');\n      loop.start('0m').stop('16m');\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      if (this.state.autoFilterIsOn == true) {\n        this.state.autoFilter.wet.value = 0;\n        this.setState({\n          autoFilterIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.autoFilter, Tone.Master);\n        this.state.autoFilter.wet.value = 1;\n        this.setState({\n          autoFilterIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      // let feedbackDelay1 = new Tone.FeedbackDelay({\n      //   delayTime: '32n',\n      //   maxDelay: 10\n      // })\n      //\n      // let feedbackDelay2 = new Tone.FeedbackDelay({\n      //   delayTime: '8n',\n      //   maxDelay: 10\n      // })\n      //\n      // this.state.synth.connect(feedbackDelay1)\n      // this.state.synth.connect(feedbackDelay2)\n      if (this.state.feedbackDelayIsOn == true) {\n        this.state.feedbackDelay.wet.value = 0;\n        this.setState({\n          feedbackDelayIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.feedbackDelay, Tone.Master);\n        this.state.feedbackDelay.wet.value = 1;\n        this.setState({\n          feedbackDelayIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      if (this.state.tremoloIsOn == true) {\n        this.state.tremolo.wet.value = 0;\n        this.setState({\n          tremoloIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.tremolo, Tone.Master);\n        this.state.tremolo.wet.value = 1;\n        this.setState({\n          tremoloIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      if (this.state.autoPannerIsOn == true) {\n        this.state.autoPanner.wet.value = 0;\n        this.setState({\n          autoPannerIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.autoPanner, Tone.Master);\n        this.state.autoPanner.wet.value = 1;\n        this.setState({\n          autoPannerIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      if (this.state.autoWahIsOn == true) {\n        this.state.autoWah.wet.value = 0;\n        this.setState({\n          autoWahIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.autoWah, Tone.Master);\n        this.state.autoWah.wet.value = 1;\n        this.setState({\n          autoWahIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      if (this.state.bitCrusherIsOn == true) {\n        this.state.bitCrusher.wet.value = 0;\n        this.setState({\n          bitCrusherIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.bitCrusher, Tone.Master);\n        this.state.bitCrusher.wet.value = 1;\n        this.setState({\n          bitCrusherIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleChebyshev\",\n    value: function toggleChebyshev() {\n      if (this.state.chebyshevIsOn == true) {\n        this.state.chebyshev.wet.value = 0;\n        this.setState({\n          chebyshevIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.chebyshev, Tone.Master);\n        this.state.chebyshev.wet.value = 1;\n        this.setState({\n          chebyshevIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      if (this.state.chorusIsOn == true) {\n        this.state.chorus.wet.value = 0;\n        this.setState({\n          chorusIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.chorus, Tone.Master);\n        this.state.chorus.wet.value = 1;\n        this.setState({\n          chorusIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleConvolver\",\n    value: function toggleConvolver() {\n      if (this.state.convolverIsOn == true) {\n        this.state.convolver.wet.value = 0;\n        this.setState({\n          convolverIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.convolver, Tone.Master);\n        this.state.convolver.wet.value = 1;\n        this.setState({\n          convolverIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect() {\n      if (this.state.effectIsOn == true) {\n        this.state.effect.wet.value = 0;\n        this.setState({\n          effectIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.effect, Tone.Master);\n        this.state.effect.wet.value = 1;\n        this.setState({\n          effectIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleFeedbackEffect\",\n    value: function toggleFeedbackEffect() {\n      if (this.state.feedbackEffectIsOn == true) {\n        this.state.feedbackEffect.wet.value = 0;\n        this.setState({\n          feedbackEffectIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.feedbackEffect, Tone.Master);\n        this.state.feedbackEffect.wet.value = 1;\n        this.setState({\n          feedbackEffectIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleFreeverb\",\n    value: function toggleFreeverb() {\n      if (this.state.freeverbIsOn == true) {\n        this.state.freeverb.wet.value = 0;\n        this.setState({\n          freeverbIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.freeverb, Tone.Master);\n        this.state.freeverb.wet.value = 1;\n        this.setState({\n          freeverbIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleJCReverb\",\n    value: function toggleJCReverb() {\n      if (this.state.jcReverbIsOn == true) {\n        this.state.jcReverb.wet.value = 0;\n        this.setState({\n          jcReverbIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.jcReverb, Tone.Master);\n        this.state.jcReverb.wet.value = 1;\n        this.setState({\n          jcReverbIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"togglePhaser\",\n    value: function togglePhaser() {\n      if (this.state.phaserIsOn == true) {\n        this.state.phaser.wet.value = 0;\n        this.setState({\n          phaserIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.phaser, Tone.Master);\n        this.state.phaser.wet.value = 1;\n        this.setState({\n          phaserIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"togglePingPongDelay\",\n    value: function togglePingPongDelay() {\n      if (this.state.pingPongDelayIsOn == true) {\n        this.state.pingPongDelay.wet.value = 0;\n        this.setState({\n          pingPongDelayIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.pingPongDelay, Tone.Master);\n        this.state.pingPongDelay.wet.value = 1;\n        this.setState({\n          pingPongDelayIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"togglePitchShift\",\n    value: function togglePitchShift() {\n      if (this.state.pitchShiftIsOn == true) {\n        this.state.pitchShift.wet.value = 0;\n        this.setState({\n          pitchShiftIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.pitchShift, Tone.Master);\n        this.state.pitchShift.wet.value = 1;\n        this.setState({\n          pitchShiftIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleReverb\",\n    value: function toggleReverb() {\n      if (this.state.reverbIsOn == true) {\n        this.state.reverb.wet.value = 0;\n        this.setState({\n          reverbIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.reverb, Tone.Master);\n        this.state.reverb.wet.value = 1;\n        this.setState({\n          reverbIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleStereoWidener\",\n    value: function toggleStereoWidener() {\n      if (this.state.stereoWidenerIsOn == true) {\n        this.state.stereoWidener.wet.value = 0;\n        this.setState({\n          stereoWidenerIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.stereoWidener, Tone.Master);\n        this.state.stereoWidener.wet.value = 1;\n        this.setState({\n          stereoWidenerIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleVibrato\",\n    value: function toggleVibrato() {\n      if (this.state.vibratoIsOn == true) {\n        this.state.vibrato.wet.value = 0;\n        this.setState({\n          vibratoIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.vibrato, Tone.Master);\n        this.state.vibrato.wet.value = 1;\n        this.setState({\n          vibratoIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294\n        },\n        __self: this\n      }, \"toggle Filter \", this.state.autoFilterIsOn), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1297\n        },\n        __self: this\n      }, \"toggle FeedbackDelay \", this.state.feedbackDelayIsOn), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1300\n        },\n        __self: this\n      }, \"toggle Tremolo \", this.state.tremoloIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303\n        },\n        __self: this\n      }, \"toggle Distortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307\n        },\n        __self: this\n      }, \"toggle AutoPanner \", this.state.autoPannerIsOn), React.createElement(\"div\", {\n        onClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311\n        },\n        __self: this\n      }, \"toggle AutoWah \", this.state.autoWahIsOn), React.createElement(\"div\", {\n        onClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314\n        },\n        __self: this\n      }, \"toggle BitCrusher \", this.state.bitCrusherIsOn), React.createElement(\"div\", {\n        onClick: this.toggleChebyshev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317\n        },\n        __self: this\n      }, \"toggle Chebyshev \", this.state.chebyshevIsOn), React.createElement(\"div\", {\n        onClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1320\n        },\n        __self: this\n      }, \"toggle Chorus \", this.state.chorusIsOn), React.createElement(\"div\", {\n        onClick: this.toggleConvolver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323\n        },\n        __self: this\n      }, \"toggle Convolver \", this.state.convolverIsOn), React.createElement(\"div\", {\n        onClick: this.toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326\n        },\n        __self: this\n      }, \"toggle Effect \", this.state.effectIsOn), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1329\n        },\n        __self: this\n      }, \"toggle FeedbackEffect \", this.state.feedbackEffectIsOn), React.createElement(\"div\", {\n        onClick: this.toggleFreeverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332\n        },\n        __self: this\n      }, \"toggle Freeverb \", this.state.freeverbIsOn), React.createElement(\"div\", {\n        onClick: this.toggleJCReverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1335\n        },\n        __self: this\n      }, \"toggle JCReverb \", this.state.jcReverbIsOn), React.createElement(\"div\", {\n        onClick: this.togglePhaser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1338\n        },\n        __self: this\n      }, \"toggle Phaser \", this.state.phaserIsOn), React.createElement(\"div\", {\n        onClick: this.togglePingPongDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1341\n        },\n        __self: this\n      }, \"toggle PingPongDelay \", this.state.pingPongDelayIsOn), React.createElement(\"div\", {\n        onClick: this.togglePitchShift,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344\n        },\n        __self: this\n      }, \"toggle PitchShift \", this.state.pitchShiftIsOn), React.createElement(\"div\", {\n        onClick: this.toggleReverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347\n        },\n        __self: this\n      }, \"toggle Reverb \", this.state.reverbIsOn), React.createElement(\"div\", {\n        onClick: this.toggleStereoWidener,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350\n        },\n        __self: this\n      }, \"toggle StereoWidener \", this.state.stereoWidenerIsOn), React.createElement(\"div\", {\n        onClick: this.toggleVibrato,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1353\n        },\n        __self: this\n      }, \"toggle Vibrato \", this.state.vibratoIsOn));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","Synth","props","distortion","Distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","feedbackDelay","FeedbackDelay","delayTime","maxDelay","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","state","distortionIsOn","tremoloIsOn","feedbackDelayIsOn","autoFilterIsOn","autoPannerIsOn","autoWahIsOn","bitCrusherIsOn","chebyshevIsOn","chorusIsOn","convolverIsOn","effectIsOn","feedbackEffectIsOn","freeverbIsOn","jcReverbIsOn","phaserIsOn","pingPongDelayIsOn","pitchShiftIsOn","reverbIsOn","stereoWidenerIsOn","vibratoIsOn","startSynth","bind","toggleFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleAutoPanner","toggleAutoWah","toggleBitCrusher","toggleChebyshev","toggleChorus","toggleConvolver","toggleEffect","toggleFeedbackEffect","toggleFreeverb","toggleJCReverb","togglePhaser","togglePingPongDelay","togglePitchShift","toggleReverb","toggleStereoWidener","toggleVibrato","synth","chain","Master","setState","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","Component"],"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","sourcesContent":["// import _ from 'lodash'\n// import React from 'react'\n// import Tone from 'tone'\n//\n// export default class Synth extends React.Component {\n//   constructor(props) {\n//     super(props)\n//\n//     let distortion = new Tone.Distortion({\n//       distortion: 1,\n//       oversample: '4x'\n//     })\n//\n//     let tremolo = new Tone.Tremolo({\n//       frequency: 10,\n//       type: 'sine',\n//       depth: 100,\n//       spread: 180\n//     })\n//\n//     let feedbackDelay = new Tone.FeedbackDelay({\n//       delayTime: '8n',\n//       maxDelay: 10\n//     })\n//\n//     let autoFilter = new Tone.AutoFilter({\n//       frequency: 1,\n//       type: 'sine',\n//       depth: 1,\n//       baseFrequency: 20,\n//       octaves: 4.6,\n//       filter: {\n//         type: 'lowpass',\n//         rolloff: -12,\n//         Q: 1\n//       }\n//     })\n//\n//     let distortion100 = new Tone.Distortion({\n//       distortion: 100,\n//       oversample: '4x'\n//     })\n//\n//     let autoPanner = new Tone.AutoPanner({\n//       frequency: 1,\n//       type: 'sine',\n//       depth: 1\n//     })\n//\n//     let autoWah = new Tone.AutoWah({\n//       baseFrequency: 100,\n//       octaves: 6,\n//       sensitivity: 0,\n//       Q: 2,\n//       gain: 2,\n//       follower: {\n//         attack: 0.3,\n//         release: 0.5\n//       }\n//     })\n//\n//     let bitCrusher = new Tone.BitCrusher({\n//       bits: 4\n//     })\n//\n//     let chebyshev = new Tone.Chebyshev({\n//       order: 50,\n//       oversample: 'none'\n//     })\n//\n//     let chorus = new Tone.Chorus({\n//       frequency: 1.5,\n//       delayTime: 3.5,\n//       depth: 0.7,\n//       type: 'sine',\n//       spread: 180\n//     })\n//\n//     let convolver = new Tone.Convolver({\n//       onload: Tone.noOp,\n//       normalize: true\n//     })\n//\n//     let effect = new Tone.Effect({\n//       wet: 1\n//     })\n//\n//     var feedbackEffect = new Tone.FeedbackEffect({\n//       feedback: 0.125\n//     })\n//\n//     var freeverb = new Tone.Freeverb({\n//       roomSize: 0.7,\n//       dampening: 3000\n//     })\n//\n//     var jcReverb = new Tone.JCReverb({\n//       roomSize: 0.5\n//     })\n//\n//     let phaser = new Tone.Phaser({\n//       frequency: 0.5,\n//       octaves: 3,\n//       stages: 10,\n//       Q: 10,\n//       baseFrequency: 350\n//     })\n//\n//     let pingPongDelay = new Tone.PingPongDelay({\n//       delayTime: 0.25,\n//       maxDelayTime: 1\n//     })\n//\n//     let pitchShift = new Tone.PitchShift({\n//       pitch: 0,\n//       windowSize: 0.1,\n//       delayTime: 0,\n//       feedback: 0\n//     })\n//\n//     let reverb = new Tone.Reverb({\n//       decay: 1.5,\n//       preDelay: 0.01\n//     })\n//\n//     let stereoWidener = new Tone.StereoWidener({\n//       width: 0.5\n//     })\n//\n//     let vibrato = new Tone.Vibrato({\n//       maxDelay: 0.005,\n//       frequency: 5,\n//       depth: 0.1,\n//       type: 'sine'\n//     })\n//\n//     this.state = {\n//       distortion: distortion,\n//       distortionIsOn: false,\n//       tremolo: tremolo,\n//       tremoloIsOn: false,\n//       feedbackDelay: feedbackDelay,\n//       feedbackDelayIsOn: false,\n//       autoFilter: autoFilter,\n//       autoFilterIsOn: false,\n//       distortion100: distortion100,\n//       distortion100IsOn: false,\n//       autoPanner: autoPanner,\n//       autoPannerIsOn: false,\n//\n//       autoWah: autoWah,\n//       autoWahIsOn: false,\n//       bitCrusher: bitCrusher,\n//       bitCrusherIsOn: false,\n//       chebyshev: chebyshev,\n//       chebyshevIsOn: false,\n//       chorus: chorus,\n//       chorusIsOn: false,\n//       convolver: convolver,\n//       convolverIsOn: false,\n//       effect: effect,\n//       effectIsOn: false,\n//       feedbackEffect: feedbackEffect,\n//       feedbackEffectIsOn: false,\n//       freeverb: freeverb,\n//       freeverbIsOn: false,\n//       jcReverb: jcReverb,\n//       jcReverbIsOn: false,\n//       phaser: phaser,\n//       phaserIsOn: false,\n//       pingPongDelay: pingPongDelay,\n//       pingPongDelayIsOn: false,\n//       pitchShift: pitchShift,\n//       pitchShiftIsOn: false,\n//       reverb: reverb,\n//       reverbIsOn: false,\n//       stereoWidener: stereoWidener,\n//       stereoWidenerIsOn: false,\n//       vibrato: vibrato,\n//       vibratoIsOn: false\n//     }\n//\n//     this.startSynth = this.startSynth.bind(this)\n//     this.toggleFilter = this.toggleFilter.bind(this)\n//     this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n//     this.toggleTremolo = this.toggleTremolo.bind(this)\n//     this.toggleDistortion = this.toggleDistortion.bind(this)\n//     this.toggleDistortion100 = this.toggleDistortion100.bind(this)\n//     this.toggleAutoPanner = this.toggleAutoPanner.bind(this)\n//     this.toggleAutoWah = this.toggleAutoWah.bind(this)\n//\n//     this.toggleAutoWah = this.toggleAutoWah.bind(this)\n//     this.toggleBitCrusher = this.toggleBitCrusher.bind(this)\n//     this.toggleChebyshev = this.toggleChebyshev.bind(this)\n//     this.toggleChorus = this.toggleChorus.bind(this)\n//     this.toggleConvolver = this.toggleConvolver.bind(this)\n//     this.toggleEffect = this.toggleEffect.bind(this)\n//     this.toggleFeedbackEffect = this.toggleFeedbackEffect.bind(this)\n//     this.toggleFreeverb = this.toggleFreeverb.bind(this)\n//     this.toggleBitCrusher = this.toggleBitCrusher.bind(this)\n//     this.toggleJCReverb = this.toggleJCReverb.bind(this)\n//     this.togglePhaser = this.togglePhaser.bind(this)\n//     this.togglePingPongDelay = this.togglePingPongDelay.bind(this)\n//     this.togglePitchShift = this.togglePitchShift.bind(this)\n//     this.toggleReverb = this.toggleReverb.bind(this)\n//     this.toggleStereoWidener = this.toggleStereoWidener.bind(this)\n//     this.toggleVibrato = this.toggleVibrato.bind(this)\n//\n//     _.bindAll(this, 'startSynth', 'toggleDistortion100')\n//     //перебиндить все таким образом\n//   }\n//\n//   startSynth() {\n//     let synth = new Tone.Synth()\n//     synth.chain(\n//       this.state.autoFilter,\n//       this.state.feedbackDelay,\n//       this.state.tremolo,\n//       this.state.distortion,\n//       this.state.distortion100,\n//       this.state.autoPanner,\n//       this.state.autoWah,\n//       this.state.bitCrusher,\n//       this.state.chebyshev,\n//       this.state.chorus,\n//       this.state.convolver,\n//       this.state.effect,\n//       this.state.feedbackEffect,\n//       this.state.freeverb,\n//       this.state.jcReverb,\n//       this.state.phaser,\n//       this.state.pingPongDelay,\n//       this.state.pitchShift,\n//       this.state.reverb,\n//       this.state.stereoWidener,\n//       this.state.vibrato,\n//\n//       Tone.Master\n//     )\n//\n//     this.setState({\n//       synth: synth\n//     })\n//\n//     let loop = new Tone.Loop(function(time) {\n//       synth.triggerAttackRelease('C2', '8n', time)\n//     }, '4n')\n//\n//     loop.start('0m').stop('16m')\n//\n//     Tone.Transport.bpm.value = 115\n//     Tone.Transport.start()\n//   }\n//\n//   toggleFilter() {\n//     if (this.state.autoFilterIsOn == true) {\n//       this.state.autoFilter.wet.value = 0\n//\n//       this.setState({\n//         autoFilterIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.autoFilter, Tone.Master)\n//       this.state.autoFilter.wet.value = 1\n//\n//       this.setState({\n//         autoFilterIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleFeedbackDelay() {\n//     // let feedbackDelay1 = new Tone.FeedbackDelay({\n//     //   delayTime: '32n',\n//     //   maxDelay: 10\n//     // })\n//     //\n//     // let feedbackDelay2 = new Tone.FeedbackDelay({\n//     //   delayTime: '8n',\n//     //   maxDelay: 10\n//     // })\n//     //\n//     // this.state.synth.connect(feedbackDelay1)\n//     // this.state.synth.connect(feedbackDelay2)\n//     if (this.state.feedbackDelayIsOn == true) {\n//       this.state.feedbackDelay.wet.value = 0\n//\n//       this.setState({\n//         feedbackDelayIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.feedbackDelay, Tone.Master)\n//       this.state.feedbackDelay.wet.value = 1\n//\n//       this.setState({\n//         feedbackDelayIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleTremolo() {\n//     if (this.state.tremoloIsOn == true) {\n//       this.state.tremolo.wet.value = 0\n//\n//       this.setState({\n//         tremoloIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.tremolo, Tone.Master)\n//       this.state.tremolo.wet.value = 1\n//\n//       this.setState({\n//         tremoloIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleDistortion() {\n//     if (this.state.distortionIsOn == true) {\n//       // this.state.synth.disconnect()\n//       // this.state.synth.chain(Tone.Master) строчка ниже заменяет\n//\n//       this.state.distortion.wet.value = 0\n//\n//       this.setState({\n//         distortionIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.distortion, Tone.Master)\n//       this.state.distortion.wet.value = 1\n//\n//       this.setState({\n//         distortionIsOn: true\n//       })\n//     }\n//     //this.state.synth.connect(distortion)\n//   }\n//\n//   toggleDistortion100() {\n//     // let { distortion } = this.state\n//     // distortion.distortion = 100\n//     //\n//     // this.setState({\n//     //   distortion: distortion\n//     // })\n//     if (this.state.distortion100IsOn == true) {\n//       this.state.distortion100.wet.value = 0\n//\n//       this.setState({\n//         distortion100IsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.distortion100, Tone.Master)\n//       this.state.distortion100.wet.value = 1\n//\n//       this.setState({\n//         distortion100IsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleAutoPanner() {\n//     if (this.state.autoPannerIsOn == true) {\n//       this.state.autoPanner.wet.value = 0\n//\n//       this.setState({\n//         autoPannerIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.autoPanner, Tone.Master)\n//       this.state.autoPanner.wet.value = 1\n//\n//       this.setState({\n//         autoPannerIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleAutoWah() {\n//     if (this.state.autoWahIsOn == true) {\n//       this.state.autoWah.wet.value = 0\n//\n//       this.setState({\n//         autoWahIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.autoWah, Tone.Master)\n//       this.state.autoWah.wet.value = 1\n//\n//       this.setState({\n//         autoWahIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleBitCrusher() {\n//     if (this.state.bitCrusherIsOn == true) {\n//       this.state.bitCrusher.wet.value = 0\n//\n//       this.setState({\n//         bitCrusherIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.bitCrusher, Tone.Master)\n//       this.state.bitCrusher.wet.value = 1\n//\n//       this.setState({\n//         bitCrusherIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleChebyshev() {\n//     if (this.state.chebyshevIsOn == true) {\n//       this.state.chebyshev.wet.value = 0\n//\n//       this.setState({\n//         chebyshevIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.chebyshev, Tone.Master)\n//       this.state.chebyshev.wet.value = 1\n//\n//       this.setState({\n//         chebyshevIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleChorus() {\n//     if (this.state.chorusIsOn == true) {\n//       this.state.chorus.wet.value = 0\n//\n//       this.setState({\n//         chorusIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.chorus, Tone.Master)\n//       this.state.chorus.wet.value = 1\n//\n//       this.setState({\n//         chorusIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleConvolver() {\n//     if (this.state.convolverIsOn == true) {\n//       this.state.convolver.wet.value = 0\n//\n//       this.setState({\n//         convolverIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.convolver, Tone.Master)\n//       this.state.convolver.wet.value = 1\n//\n//       this.setState({\n//         convolverIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleEffect() {\n//     if (this.state.effectIsOn == true) {\n//       this.state.effect.wet.value = 0\n//\n//       this.setState({\n//         effectIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.effect, Tone.Master)\n//       this.state.effect.wet.value = 1\n//\n//       this.setState({\n//         effectIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleFeedbackEffect() {\n//     if (this.state.feedbackEffectIsOn == true) {\n//       this.state.feedbackEffect.wet.value = 0\n//\n//       this.setState({\n//         feedbackEffectIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.feedbackEffect, Tone.Master)\n//       this.state.feedbackEffect.wet.value = 1\n//\n//       this.setState({\n//         feedbackEffectIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleFreeverb() {\n//     if (this.state.freeverbIsOn == true) {\n//       this.state.freeverb.wet.value = 0\n//\n//       this.setState({\n//         freeverbIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.freeverb, Tone.Master)\n//       this.state.freeverb.wet.value = 1\n//\n//       this.setState({\n//         freeverbIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleJCReverb() {\n//     if (this.state.jcReverbIsOn == true) {\n//       this.state.jcReverb.wet.value = 0\n//\n//       this.setState({\n//         jcReverbIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.jcReverb, Tone.Master)\n//       this.state.jcReverb.wet.value = 1\n//\n//       this.setState({\n//         jcReverbIsOn: true\n//       })\n//     }\n//   }\n//\n//   togglePhaser() {\n//     if (this.state.phaserIsOn == true) {\n//       this.state.phaser.wet.value = 0\n//\n//       this.setState({\n//         phaserIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.phaser, Tone.Master)\n//       this.state.phaser.wet.value = 1\n//\n//       this.setState({\n//         phaserIsOn: true\n//       })\n//     }\n//   }\n//\n//   togglePingPongDelay() {\n//     if (this.state.pingPongDelayIsOn == true) {\n//       this.state.pingPongDelay.wet.value = 0\n//\n//       this.setState({\n//         pingPongDelayIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.pingPongDelay, Tone.Master)\n//       this.state.pingPongDelay.wet.value = 1\n//\n//       this.setState({\n//         pingPongDelayIsOn: true\n//       })\n//     }\n//   }\n//\n//   togglePitchShift() {\n//     if (this.state.pitchShiftIsOn == true) {\n//       this.state.pitchShift.wet.value = 0\n//\n//       this.setState({\n//         pitchShiftIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.pitchShift, Tone.Master)\n//       this.state.pitchShift.wet.value = 1\n//\n//       this.setState({\n//         pitchShiftIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleReverb() {\n//     if (this.state.reverbIsOn == true) {\n//       this.state.reverb.wet.value = 0\n//\n//       this.setState({\n//         reverbIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.reverb, Tone.Master)\n//       this.state.reverb.wet.value = 1\n//\n//       this.setState({\n//         reverbIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleStereoWidener() {\n//     if (this.state.stereoWidenerIsOn == true) {\n//       this.state.stereoWidener.wet.value = 0\n//\n//       this.setState({\n//         stereoWidenerIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.stereoWidener, Tone.Master)\n//       this.state.stereoWidener.wet.value = 1\n//\n//       this.setState({\n//         stereoWidenerIsOn: true\n//       })\n//     }\n//   }\n//\n//   toggleVibrato() {\n//     if (this.state.vibratoIsOn == true) {\n//       this.state.vibrato.wet.value = 0\n//\n//       this.setState({\n//         vibratoIsOn: false\n//       })\n//     } else {\n//       this.state.synth.chain(this.state.vibrato, Tone.Master)\n//       this.state.vibrato.wet.value = 1\n//\n//       this.setState({\n//         vibratoIsOn: true\n//       })\n//     }\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <div onClick={this.startSynth}>Start</div>\n//         <div onClick={this.toggleFilter}>\n//           toggle Filter {this.state.autoFilterIsOn}\n//         </div>\n//         <div onClick={this.toggleFeedbackDelay}>\n//           toggle FeedbackDelay {this.state.feedbackDelayIsOn}\n//         </div>\n//         <div onClick={this.toggleTremolo}>\n//           toggle Tremolo {this.state.tremoloIsOn}\n//         </div>\n//         <div onClick={this.toggleDistortion}>\n//           toggle Distortion {this.state.distortionIsOn}\n//         </div>\n//         <div onClick={this.toggleDistortion100}>\n//           toggle Distortion100 {this.state.distortion100IsOn}\n//         </div>\n//         <div onClick={this.toggleAutoPanner}>\n//           toggle AutoPanner {this.state.autoPannerIsOn}\n//         </div>\n//\n//         <div onClick={this.toggleAutoWah}>\n//           toggle AutoWah {this.state.autoWahIsOn}\n//         </div>\n//         <div onClick={this.toggleBitCrusher}>\n//           toggle BitCrusher {this.state.bitCrusherIsOn}\n//         </div>\n//         <div onClick={this.toggleChebyshev}>\n//           toggle Chebyshev {this.state.chebyshevIsOn}\n//         </div>\n//         <div onClick={this.toggleChorus}>\n//           toggle Chorus {this.state.chorusIsOn}\n//         </div>\n//         <div onClick={this.toggleConvolver}>\n//           toggle Convolver {this.state.convolverIsOn}\n//         </div>\n//         <div onClick={this.toggleEffect}>\n//           toggle Effect {this.state.effectIsOn}\n//         </div>\n//         <div onClick={this.toggleFeedbackEffect}>\n//           toggle FeedbackEffect {this.state.feedbackEffectIsOn}\n//         </div>\n//         <div onClick={this.toggleFreeverb}>\n//           toggle Freeverb {this.state.freeverbIsOn}\n//         </div>\n//         <div onClick={this.toggleJCReverb}>\n//           toggle JCReverb {this.state.jcReverbIsOn}\n//         </div>\n//         <div onClick={this.togglePhaser}>\n//           toggle Phaser {this.state.phaserIsOn}\n//         </div>\n//         <div onClick={this.togglePingPongDelay}>\n//           toggle PingPongDelay {this.state.pingPongDelayIsOn}\n//         </div>\n//         <div onClick={this.togglePitchShift}>\n//           toggle PitchShift {this.state.pitchShiftIsOn}\n//         </div>\n//         <div onClick={this.toggleReverb}>\n//           toggle Reverb {this.state.reverbIsOn}\n//         </div>\n//         <div onClick={this.toggleStereoWidener}>\n//           toggle StereoWidener {this.state.stereoWidenerIsOn}\n//         </div>\n//         <div onClick={this.toggleVibrato}>\n//           toggle Vibrato {this.state.vibratoIsOn}\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n////список все эффектов\n\nimport _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 1,\n      oversample: '4x'\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    })\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let effect = new Tone.Effect({\n      wet: 1\n    })\n\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      feedbackDelay: feedbackDelay,\n      feedbackDelayIsOn: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      effect: effect,\n      effectIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false,\n      pitchShift: pitchShift,\n      pitchShiftIsOn: false,\n      reverb: reverb,\n      reverbIsOn: false,\n      stereoWidener: stereoWidener,\n      stereoWidenerIsOn: false,\n      vibrato: vibrato,\n      vibratoIsOn: false\n    }\n\n    this.startSynth = this.startSynth.bind(this)\n    this.toggleFilter = this.toggleFilter.bind(this)\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n    this.toggleTremolo = this.toggleTremolo.bind(this)\n    this.toggleDistortion = this.toggleDistortion.bind(this)\n\n    this.toggleAutoPanner = this.toggleAutoPanner.bind(this)\n    this.toggleAutoWah = this.toggleAutoWah.bind(this)\n\n    this.toggleAutoWah = this.toggleAutoWah.bind(this)\n    this.toggleBitCrusher = this.toggleBitCrusher.bind(this)\n    this.toggleChebyshev = this.toggleChebyshev.bind(this)\n    this.toggleChorus = this.toggleChorus.bind(this)\n    this.toggleConvolver = this.toggleConvolver.bind(this)\n    this.toggleEffect = this.toggleEffect.bind(this)\n    this.toggleFeedbackEffect = this.toggleFeedbackEffect.bind(this)\n    this.toggleFreeverb = this.toggleFreeverb.bind(this)\n    this.toggleBitCrusher = this.toggleBitCrusher.bind(this)\n    this.toggleJCReverb = this.toggleJCReverb.bind(this)\n    this.togglePhaser = this.togglePhaser.bind(this)\n    this.togglePingPongDelay = this.togglePingPongDelay.bind(this)\n    this.togglePitchShift = this.togglePitchShift.bind(this)\n    this.toggleReverb = this.toggleReverb.bind(this)\n    this.toggleStereoWidener = this.toggleStereoWidener.bind(this)\n    this.toggleVibrato = this.toggleVibrato.bind(this)\n\n    //перебиндить все таким образом\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth()\n    synth.chain(\n      this.state.autoFilter,\n      this.state.feedbackDelay,\n      this.state.tremolo,\n      this.state.distortion,\n      this.state.autoPanner,\n      this.state.autoWah,\n      this.state.bitCrusher,\n      this.state.chebyshev,\n      this.state.chorus,\n      this.state.convolver,\n      this.state.effect,\n      this.state.feedbackEffect,\n      this.state.freeverb,\n      this.state.jcReverb,\n      this.state.phaser,\n      this.state.pingPongDelay,\n      this.state.pitchShift,\n      this.state.reverb,\n      this.state.stereoWidener,\n      this.state.vibrato,\n\n      Tone.Master\n    )\n\n    this.setState({\n      synth: synth\n    })\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    loop.start('0m').stop('16m')\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleFilter() {\n    if (this.state.autoFilterIsOn == true) {\n      this.state.autoFilter.wet.value = 0\n\n      this.setState({\n        autoFilterIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.autoFilter, Tone.Master)\n      this.state.autoFilter.wet.value = 1\n\n      this.setState({\n        autoFilterIsOn: true\n      })\n    }\n  }\n\n  toggleFeedbackDelay() {\n    // let feedbackDelay1 = new Tone.FeedbackDelay({\n    //   delayTime: '32n',\n    //   maxDelay: 10\n    // })\n    //\n    // let feedbackDelay2 = new Tone.FeedbackDelay({\n    //   delayTime: '8n',\n    //   maxDelay: 10\n    // })\n    //\n    // this.state.synth.connect(feedbackDelay1)\n    // this.state.synth.connect(feedbackDelay2)\n    if (this.state.feedbackDelayIsOn == true) {\n      this.state.feedbackDelay.wet.value = 0\n\n      this.setState({\n        feedbackDelayIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.feedbackDelay, Tone.Master)\n      this.state.feedbackDelay.wet.value = 1\n\n      this.setState({\n        feedbackDelayIsOn: true\n      })\n    }\n  }\n\n  toggleTremolo() {\n    if (this.state.tremoloIsOn == true) {\n      this.state.tremolo.wet.value = 0\n\n      this.setState({\n        tremoloIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.tremolo, Tone.Master)\n      this.state.tremolo.wet.value = 1\n\n      this.setState({\n        tremoloIsOn: true\n      })\n    }\n  }\n\n  toggleAutoPanner() {\n    if (this.state.autoPannerIsOn == true) {\n      this.state.autoPanner.wet.value = 0\n\n      this.setState({\n        autoPannerIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.autoPanner, Tone.Master)\n      this.state.autoPanner.wet.value = 1\n\n      this.setState({\n        autoPannerIsOn: true\n      })\n    }\n  }\n\n  toggleAutoWah() {\n    if (this.state.autoWahIsOn == true) {\n      this.state.autoWah.wet.value = 0\n\n      this.setState({\n        autoWahIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.autoWah, Tone.Master)\n      this.state.autoWah.wet.value = 1\n\n      this.setState({\n        autoWahIsOn: true\n      })\n    }\n  }\n\n  toggleBitCrusher() {\n    if (this.state.bitCrusherIsOn == true) {\n      this.state.bitCrusher.wet.value = 0\n\n      this.setState({\n        bitCrusherIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.bitCrusher, Tone.Master)\n      this.state.bitCrusher.wet.value = 1\n\n      this.setState({\n        bitCrusherIsOn: true\n      })\n    }\n  }\n\n  toggleChebyshev() {\n    if (this.state.chebyshevIsOn == true) {\n      this.state.chebyshev.wet.value = 0\n\n      this.setState({\n        chebyshevIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.chebyshev, Tone.Master)\n      this.state.chebyshev.wet.value = 1\n\n      this.setState({\n        chebyshevIsOn: true\n      })\n    }\n  }\n\n  toggleChorus() {\n    if (this.state.chorusIsOn == true) {\n      this.state.chorus.wet.value = 0\n\n      this.setState({\n        chorusIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.chorus, Tone.Master)\n      this.state.chorus.wet.value = 1\n\n      this.setState({\n        chorusIsOn: true\n      })\n    }\n  }\n\n  toggleConvolver() {\n    if (this.state.convolverIsOn == true) {\n      this.state.convolver.wet.value = 0\n\n      this.setState({\n        convolverIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.convolver, Tone.Master)\n      this.state.convolver.wet.value = 1\n\n      this.setState({\n        convolverIsOn: true\n      })\n    }\n  }\n\n  toggleEffect() {\n    if (this.state.effectIsOn == true) {\n      this.state.effect.wet.value = 0\n\n      this.setState({\n        effectIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.effect, Tone.Master)\n      this.state.effect.wet.value = 1\n\n      this.setState({\n        effectIsOn: true\n      })\n    }\n  }\n\n  toggleFeedbackEffect() {\n    if (this.state.feedbackEffectIsOn == true) {\n      this.state.feedbackEffect.wet.value = 0\n\n      this.setState({\n        feedbackEffectIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.feedbackEffect, Tone.Master)\n      this.state.feedbackEffect.wet.value = 1\n\n      this.setState({\n        feedbackEffectIsOn: true\n      })\n    }\n  }\n\n  toggleFreeverb() {\n    if (this.state.freeverbIsOn == true) {\n      this.state.freeverb.wet.value = 0\n\n      this.setState({\n        freeverbIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.freeverb, Tone.Master)\n      this.state.freeverb.wet.value = 1\n\n      this.setState({\n        freeverbIsOn: true\n      })\n    }\n  }\n\n  toggleJCReverb() {\n    if (this.state.jcReverbIsOn == true) {\n      this.state.jcReverb.wet.value = 0\n\n      this.setState({\n        jcReverbIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.jcReverb, Tone.Master)\n      this.state.jcReverb.wet.value = 1\n\n      this.setState({\n        jcReverbIsOn: true\n      })\n    }\n  }\n\n  togglePhaser() {\n    if (this.state.phaserIsOn == true) {\n      this.state.phaser.wet.value = 0\n\n      this.setState({\n        phaserIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.phaser, Tone.Master)\n      this.state.phaser.wet.value = 1\n\n      this.setState({\n        phaserIsOn: true\n      })\n    }\n  }\n\n  togglePingPongDelay() {\n    if (this.state.pingPongDelayIsOn == true) {\n      this.state.pingPongDelay.wet.value = 0\n\n      this.setState({\n        pingPongDelayIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.pingPongDelay, Tone.Master)\n      this.state.pingPongDelay.wet.value = 1\n\n      this.setState({\n        pingPongDelayIsOn: true\n      })\n    }\n  }\n\n  togglePitchShift() {\n    if (this.state.pitchShiftIsOn == true) {\n      this.state.pitchShift.wet.value = 0\n\n      this.setState({\n        pitchShiftIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.pitchShift, Tone.Master)\n      this.state.pitchShift.wet.value = 1\n\n      this.setState({\n        pitchShiftIsOn: true\n      })\n    }\n  }\n\n  toggleReverb() {\n    if (this.state.reverbIsOn == true) {\n      this.state.reverb.wet.value = 0\n\n      this.setState({\n        reverbIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.reverb, Tone.Master)\n      this.state.reverb.wet.value = 1\n\n      this.setState({\n        reverbIsOn: true\n      })\n    }\n  }\n\n  toggleStereoWidener() {\n    if (this.state.stereoWidenerIsOn == true) {\n      this.state.stereoWidener.wet.value = 0\n\n      this.setState({\n        stereoWidenerIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.stereoWidener, Tone.Master)\n      this.state.stereoWidener.wet.value = 1\n\n      this.setState({\n        stereoWidenerIsOn: true\n      })\n    }\n  }\n\n  toggleVibrato() {\n    if (this.state.vibratoIsOn == true) {\n      this.state.vibrato.wet.value = 0\n\n      this.setState({\n        vibratoIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.vibrato, Tone.Master)\n      this.state.vibrato.wet.value = 1\n\n      this.setState({\n        vibratoIsOn: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleFilter}>\n          toggle Filter {this.state.autoFilterIsOn}\n        </div>\n        <div onClick={this.toggleFeedbackDelay}>\n          toggle FeedbackDelay {this.state.feedbackDelayIsOn}\n        </div>\n        <div onClick={this.toggleTremolo}>\n          toggle Tremolo {this.state.tremoloIsOn}\n        </div>\n        <div onClick={this.toggleDistortion}>\n          toggle Distortion {this.state.distortionIsOn}\n        </div>\n\n        <div onClick={this.toggleAutoPanner}>\n          toggle AutoPanner {this.state.autoPannerIsOn}\n        </div>\n\n        <div onClick={this.toggleAutoWah}>\n          toggle AutoWah {this.state.autoWahIsOn}\n        </div>\n        <div onClick={this.toggleBitCrusher}>\n          toggle BitCrusher {this.state.bitCrusherIsOn}\n        </div>\n        <div onClick={this.toggleChebyshev}>\n          toggle Chebyshev {this.state.chebyshevIsOn}\n        </div>\n        <div onClick={this.toggleChorus}>\n          toggle Chorus {this.state.chorusIsOn}\n        </div>\n        <div onClick={this.toggleConvolver}>\n          toggle Convolver {this.state.convolverIsOn}\n        </div>\n        <div onClick={this.toggleEffect}>\n          toggle Effect {this.state.effectIsOn}\n        </div>\n        <div onClick={this.toggleFeedbackEffect}>\n          toggle FeedbackEffect {this.state.feedbackEffectIsOn}\n        </div>\n        <div onClick={this.toggleFreeverb}>\n          toggle Freeverb {this.state.freeverbIsOn}\n        </div>\n        <div onClick={this.toggleJCReverb}>\n          toggle JCReverb {this.state.jcReverbIsOn}\n        </div>\n        <div onClick={this.togglePhaser}>\n          toggle Phaser {this.state.phaserIsOn}\n        </div>\n        <div onClick={this.togglePingPongDelay}>\n          toggle PingPongDelay {this.state.pingPongDelayIsOn}\n        </div>\n        <div onClick={this.togglePitchShift}>\n          toggle PitchShift {this.state.pitchShiftIsOn}\n        </div>\n        <div onClick={this.toggleReverb}>\n          toggle Reverb {this.state.reverbIsOn}\n        </div>\n        <div onClick={this.toggleStereoWidener}>\n          toggle StereoWidener {this.state.stereoWidenerIsOn}\n        </div>\n        <div onClick={this.toggleVibrato}>\n          toggle Vibrato {this.state.vibratoIsOn}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}