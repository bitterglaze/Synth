{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../components/tunes/effects';\nimport * as parts from '../components/tunes/parts';\nimport * as synths from '../components/tunes/synths';\nimport * as seqs from '../components/tunes/sequences';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport AutoFilter from '../components/effects/AutoFilter';\nimport Tremolo from '../components/effects/Tremolo';\nimport PolySynth from '../components/synths/PolySynth';\nimport TSynth from '../components/synths/TSynth';\nimport MetalSynth from '../components/synths/MetalSynth';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var ambientSynth = synths.tSynth();\n    var ambientPingPongDelay = effects.pingPongDelay();\n    var ambientChebyshev = effects.chebyshev();\n    var ambientPhaser = effects.phaser();\n    var ambientBitCrusher = effects.bitCrusher();\n    var ambientAutoPanner = effects.autoPanner();\n    var ambientDistortion = effects.distortion();\n    var ambientAutoFilter = effects.autoFilter();\n    var ambientTremolo = effects.tremolo();\n    var leadSynth = synths.polySynth();\n    var leadDistortion = effects.distortion();\n    var amSynth = synths.amSynth();\n    var metalSynth = synths.metalSynth();\n    var loop1 = new Tone.Pattern(function (time, note) {\n      leadSynth.triggerAttackRelease(['C6', 'C3', 'F4', 'A2', 'C1', 'F1'], '4n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      ambientSynth.triggerAttackRelease('E1', '4n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      leadSynth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      ambientSynth.triggerAttackRelease('F1', '16n', time);\n    }, '16n');\n    ambientSynth.chain(ambientPingPongDelay, ambientChebyshev, ambientPhaser, ambientBitCrusher, ambientAutoPanner, ambientDistortion, ambientAutoFilter, ambientTremolo, Tone.Master);\n    leadSynth.chain(leadDistortion, Tone.Master);\n    seq.toMaster(); // metalSynth.chain(Tone.Master)\n\n    _this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth: ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoFilter: {\n        name: 'ambientAutoFilter',\n        effect: ambientAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientTremolo: {\n        name: 'ambientTremolo',\n        effect: ambientTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      part2: {\n        part: parts.part2(ambientSynth),\n        on: false\n      },\n      seq1: {\n        seq: seqs.seq1(ambientSynth),\n        on: false\n      },\n      leadSynth: leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      part1: {\n        part: parts.part1(leadSynth),\n        on: false\n      },\n      amSynth: amSynth,\n      metalSynth: metalSynth\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'getRandomArbitrary',\n    // 'generateRandom',\n    'toggleLoop', 'togglePart', 'toggleSeq', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue', 'changeSynthValue' // 'changeBPMValue'\n    );\n\n    Tone.Transport.bpm.value = 180;\n    Tone.Transport.start();\n    return _this;\n  } // changeBPMValue(effectName, effectProperty, value) {\n  //   let { value } = this.state[effectName]\n  //\n  //   bpm[transport] = value\n  //\n  //   this.setState({\n  //     [`${effectName}`]: {\n  //       bpm,\n  //       value\n  //     }\n  //   })\n  // }\n  //\n\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.generateRandom()\n      var _this$state$ambientDi = this.state.ambientDistortion,\n          name = _this$state$ambientDi.name,\n          effect = _this$state$ambientDi.effect,\n          wet = _this$state$ambientDi.wet,\n          on = _this$state$ambientDi.on;\n      effect.wet.value = on == true ? this.props.wet : 0;\n      effect.distortion = this.props.distortion;\n      effect.oversample = this.props.oversample;\n      this.setState({\n        ambientDistortion: {\n          name: name,\n          effect: effect,\n          wet: this.props.wet,\n          on: on\n        }\n      });\n    } ///RANDOM\n    // getRandomArbitrary(min, max) {\n    //   return Math.floor(Math.random() * (max - min)) + min\n    // }\n    //\n    // generateRandom() {\n    //   const { lastChange, timeout } = this.state\n    //\n    //   if (Date.now() - lastChange >= timeout) {\n    //     const random = this.getRandomArbitrary(100, 3000)\n    //     this.setState({\n    //       lastChange: Date.now(),\n    //       timeout: random\n    //     })\n    //\n    //     this.changeDistortionValue('distortion', random / 30)\n    //   }\n    //\n    //   setTimeout(() => this.generateRandom(), timeout)\n    // }\n\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    } //ПАРТЫ\n\n  }, {\n    key: \"togglePart\",\n    value: function togglePart(partName) {\n      var _this$state$partName = this.state[partName],\n          part = _this$state$partName.part,\n          on = _this$state$partName.on;\n\n      if (on == true) {\n        part.stop();\n      } else {\n        // console.log('yo')\n        part.at('0m');\n        part.start(0);\n        part.loop = true;\n        part.loopEnd = '1m';\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(partName), {\n        part: part,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleSeq\",\n    value: function toggleSeq(seqName) {\n      var _this$state$seqName = this.state[seqName],\n          seq = _this$state$seqName.seq,\n          on = _this$state$seqName.on;\n      on == true ? seq.stop() : seq.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(seqName), {\n        seq: seq,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName]; // console.log(synthName, effectName, value)\n      // //ambientSynth attack 0.45555555555555555\n      // console.log(synth)\n\n      var envelope = synth.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on; // console.log(this.state.autoPanner)\n\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on; // console.log(effectName, effectProperty, value)\n\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    } // Специфичность чебушев\n    // changeChebyshevValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.chebyshev\n    //\n    //   effect.order = Math.round(value)\n    //\n    //   this.setState({\n    //     chebyshev: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          ambientSynth = _this$state.ambientSynth,\n          ambientPingPongDelay = _this$state.ambientPingPongDelay,\n          ambientChebyshev = _this$state.ambientChebyshev,\n          ambientPhaser = _this$state.ambientPhaser,\n          ambientBitCrusher = _this$state.ambientBitCrusher,\n          ambientAutoPanner = _this$state.ambientAutoPanner,\n          ambientDistortion = _this$state.ambientDistortion,\n          ambientAutoFilter = _this$state.ambientAutoFilter,\n          ambientTremolo = _this$state.ambientTremolo,\n          leadSynth = _this$state.leadSynth,\n          leadDistortion = _this$state.leadDistortion,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          part1 = _this$state.part1,\n          part2 = _this$state.part2,\n          seq1 = _this$state.seq1,\n          amSynth = _this$state.amSynth,\n          metalSynth = _this$state.metalSynth;\n      var _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          togglePart = this.togglePart,\n          toggleSeq = this.toggleSeq,\n          changeSynthValue = this.changeSynthValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SeqButtonContainer\",\n        id: \"seq\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"SEQ\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: seq1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seq1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PartButtonContainer\",\n        id: \"part\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"PART1\", React.createElement(PlaySwitch, {\n        synth: \"leadSynth\",\n        instrument: leadSynth,\n        name: \"play\",\n        value: part1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.togglePart('part1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), \"part2\", React.createElement(TSynth, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        on: part2.on,\n        togglePlay: function togglePlay() {\n          return togglePart('part2');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      })), \"A\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, ambientDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, ambientPingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPingPongDelay');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, ambientChebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientChebyshev');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, ambientPhaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPhaser');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, ambientBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, ambientAutoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoPanner');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      })), React.createElement(AutoFilter, Object.assign({}, ambientAutoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoFilter');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      })), React.createElement(Tremolo, Object.assign({}, ambientTremolo, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientTremolo');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","parts","synths","seqs","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","AutoFilter","Tremolo","PolySynth","TSynth","MetalSynth","Synth","props","defaultWetValue","ambientSynth","tSynth","ambientPingPongDelay","pingPongDelay","ambientChebyshev","chebyshev","ambientPhaser","phaser","ambientBitCrusher","bitCrusher","ambientAutoPanner","autoPanner","ambientDistortion","distortion","ambientAutoFilter","autoFilter","ambientTremolo","tremolo","leadSynth","polySynth","leadDistortion","amSynth","metalSynth","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","chain","Master","seq","toMaster","state","name","effect","wet","on","part2","part","seq1","loop","part1","bindAll","Transport","bpm","value","start","oversample","setState","loopName","stop","partName","at","loopEnd","seqName","synthName","effectName","synth","envelope","oscillator","effectProperty","Math","round","toggleEffect","toggleLoop","togglePart","toggleSeq","changeSynthValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../components/tunes/effects'\nimport * as parts from '../components/tunes/parts'\nimport * as synths from '../components/tunes/synths'\nimport * as seqs from '../components/tunes/sequences'\n\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport AutoFilter from '../components/effects/AutoFilter'\nimport Tremolo from '../components/effects/Tremolo'\n\nimport PolySynth from '../components/synths/PolySynth'\nimport TSynth from '../components/synths/TSynth'\nimport MetalSynth from '../components/synths/MetalSynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let ambientSynth = synths.tSynth()\n    let ambientPingPongDelay = effects.pingPongDelay()\n    let ambientChebyshev = effects.chebyshev()\n    let ambientPhaser = effects.phaser()\n    let ambientBitCrusher = effects.bitCrusher()\n    let ambientAutoPanner = effects.autoPanner()\n    let ambientDistortion = effects.distortion()\n    let ambientAutoFilter = effects.autoFilter()\n    let ambientTremolo = effects.tremolo()\n\n    let leadSynth = synths.polySynth()\n    let leadDistortion = effects.distortion()\n\n    let amSynth = synths.amSynth()\n    let metalSynth = synths.metalSynth()\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      leadSynth.triggerAttackRelease(\n        ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '4n',\n        time\n      )\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      ambientSynth.triggerAttackRelease('E1', '4n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      leadSynth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      ambientSynth.triggerAttackRelease('F1', '16n', time)\n    }, '16n')\n\n    ambientSynth.chain(\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      ambientAutoFilter,\n      ambientTremolo,\n      Tone.Master\n    )\n\n    leadSynth.chain(leadDistortion, Tone.Master)\n    seq.toMaster()\n\n    // metalSynth.chain(Tone.Master)\n\n    this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoFilter: {\n        name: 'ambientAutoFilter',\n        effect: ambientAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientTremolo: {\n        name: 'ambientTremolo',\n        effect: ambientTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      part2: {\n        part: parts.part2(ambientSynth),\n        on: false\n      },\n\n      seq1: {\n        seq: seqs.seq1(ambientSynth),\n        on: false\n      },\n\n      leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false },\n\n      part1: {\n        part: parts.part1(leadSynth),\n        on: false\n      },\n      amSynth,\n      metalSynth\n    }\n\n    _.bindAll(\n      this,\n      // 'getRandomArbitrary',\n      // 'generateRandom',\n      'toggleLoop',\n      'togglePart',\n      'toggleSeq',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue',\n      'changeSynthValue'\n      // 'changeBPMValue'\n    )\n\n    Tone.Transport.bpm.value = 180\n    Tone.Transport.start()\n  }\n  // changeBPMValue(effectName, effectProperty, value) {\n  //   let { value } = this.state[effectName]\n  //\n  //   bpm[transport] = value\n  //\n  //   this.setState({\n  //     [`${effectName}`]: {\n  //       bpm,\n  //       value\n  //     }\n  //   })\n  // }\n  //\n  componentDidMount() {\n    //this.generateRandom()\n\n    let { name, effect, wet, on } = this.state.ambientDistortion\n\n    effect.wet.value = on == true ? this.props.wet : 0\n    effect.distortion = this.props.distortion\n    effect.oversample = this.props.oversample\n\n    this.setState({\n      ambientDistortion: {\n        name,\n        effect,\n        wet: this.props.wet,\n        on\n      }\n    })\n  }\n\n  ///RANDOM\n\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 30)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  //ПАРТЫ\n  togglePart(partName) {\n    let { part, on } = this.state[partName]\n\n    if (on == true) {\n      part.stop()\n    } else {\n      // console.log('yo')\n      part.at('0m')\n      part.start(0)\n      part.loop = true\n      part.loopEnd = '1m'\n    }\n\n    this.setState({\n      [`${partName}`]: {\n        part: part,\n        on: !on\n      }\n    })\n  }\n\n  toggleSeq(seqName) {\n    let { seq, on } = this.state[seqName]\n\n    on == true ? seq.stop() : seq.start('0m')\n\n    this.setState({\n      [`${seqName}`]: {\n        seq: seq,\n        on: !on\n      }\n    })\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    // console.log(synthName, effectName, value)\n    // //ambientSynth attack 0.45555555555555555\n    // console.log(synth)\n    let envelope = synth.envelope\n\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(effectName, effectProperty, value)\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // Специфичность чебушев\n  // changeChebyshevValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.chebyshev\n  //\n  //   effect.order = Math.round(value)\n  //\n  //   this.setState({\n  //     chebyshev: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  render() {\n    let {\n      ambientSynth,\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      ambientAutoFilter,\n      ambientTremolo,\n      leadSynth,\n      leadDistortion,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      part1,\n      part2,\n      seq1,\n      amSynth,\n      metalSynth\n    } = this.state\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      togglePart,\n      toggleSeq,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue\n    } = this\n\n    return (\n      <div>\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\">\n            <div className=\"SeqButtonContainer\" id=\"seq\">\n              SEQ\n              <PlaySwitch\n                synth=\"ambientSynth\"\n                instrument={ambientSynth}\n                name=\"play\"\n                value={seq1.on}\n                handleToggleClick={() => {\n                  this.toggleSeq('seq1')\n                }}\n              />\n            </div>\n            <div className=\"PartButtonContainer\" id=\"part\">\n              PART1\n              <PlaySwitch\n                synth=\"leadSynth\"\n                instrument={leadSynth}\n                name=\"play\"\n                value={part1.on}\n                handleToggleClick={() => {\n                  this.togglePart('part1')\n                }}\n              />\n              part2\n              <TSynth\n                synth=\"ambientSynth\"\n                instrument={ambientSynth}\n                on={part2.on}\n                togglePlay={() => togglePart('part2')}\n                changeSynthValue={this.changeSynthValue}\n              />\n            </div>\n            A\n            <PlaySwitch\n              synth=\"ambientSynth\"\n              instrument={ambientSynth}\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop2\">\n            ToggleLoop2\n            <PlaySwitch\n              synth=\"amSynth\"\n              instrument={amSynth}\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop2')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop3\">\n            ToggleLoop3\n            <PlaySwitch\n              synth=\"ambientSynth\"\n              instrument={ambientSynth}\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop3')\n              }}\n            />\n          </div>\n\n          <div className=\"PlaySwitchContainer\" id=\"loop4\">\n            ToggleLoop4\n            <PlaySwitch\n              synth=\"ambientSynth\"\n              instrument={ambientSynth}\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...ambientDistortion}\n            toggleEffect={() => toggleEffect('ambientDistortion')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n\n          <PingPongDelay\n            {...ambientPingPongDelay}\n            toggleEffect={() => toggleEffect('ambientPingPongDelay')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Chebyshev\n            {...ambientChebyshev}\n            toggleEffect={() => toggleEffect('ambientChebyshev')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Phaser\n            {...ambientPhaser}\n            toggleEffect={() => toggleEffect('ambientPhaser')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n\n          <BitCrusher\n            {...ambientBitCrusher}\n            toggleEffect={() => toggleEffect('ambientBitCrusher')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <AutoPanner\n            {...ambientAutoPanner}\n            toggleEffect={() => toggleEffect('ambientAutoPanner')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <AutoFilter\n            {...ambientAutoFilter}\n            toggleEffect={() => toggleEffect('ambientAutoFilter')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Tremolo\n            {...ambientTremolo}\n            toggleEffect={() => toggleEffect('ambientTremolo')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}