{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser'; // import PingPongDelay from '../components/effects/PingPongDelay'\n\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'square',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 0\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // })\n\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0,\n      octaves: 1,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.01,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0; // SYNTH\n\n    var synth = new Tone.PolySynth();\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.MetalSynth();\n    var synth3 = new Tone.MetalSynth();\n    var synth4 = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master); // Loops\n\n    var loop1 = new Tone.Pattern(function (time) {\n      synth.triggerAttackRelease(['F1', 'C3', 'F4', 'A2', 'C1', 'F1'], '1n', time);\n    }, '16n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth2.triggerAttackRelease('E1', '4n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('F1', '16n', time);\n    }, '16n'); //\n    //play the loop between 0-2m on the transport\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'getRandomArbitrary', 'generateRandom', 'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeDistortionValue', 'changeFeedbackDelayValue', 'changeChebyshevValue', 'changePhaserValue', // 'changePingPongDelayValue',\n    'changeBitCrusherValue', 'changeAutoPannerValue');\n\n    Tone.Transport.bpm.value = 100;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      console.log(this.state.autoPanner);\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChebyshevValue\",\n    value: function changeChebyshevValue(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.order = value;\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserValue\",\n    value: function changePhaserValue(effectName, value) {\n      var _this$state$phaser = this.state.phaser,\n          effect = _this$state$phaser.effect,\n          wet = _this$state$phaser.wet,\n          on = _this$state$phaser.on;\n      effect.order = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    } // changePingPongDelayValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.pingPongDelay\n    //\n    //   effect.order = value\n    //\n    //   this.setState({\n    //     pingPongDelay: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.order = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerValue\",\n    value: function changeAutoPannerValue(effectName, value) {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.order = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth,\n          feedbackDelay = _this$state2.feedbackDelay,\n          chebyshev = _this$state2.chebyshev,\n          phaser = _this$state2.phaser,\n          autoPanner = _this$state2.autoPanner,\n          bitCrusher = _this$state2.bitCrusher,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, \"A\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chebyshev');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, this.state.phaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('phaser');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePhaserValue: this.changePhaserValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, this.state.autoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('autoPanner');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerValue: this.changeAutoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","Chebyshev","Phaser","BitCrusher","AutoPanner","Synth","props","distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","feedbackDelay","delayTime","maxDelay","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","autoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","bits","chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","wet","value","synth","PolySynth","synth1","synth2","MetalSynth","synth3","synth4","chain","Master","loop1","Pattern","time","triggerAttackRelease","loop2","Loop","loop3","loop4","state","lastChange","Date","now","timeout","effect","on","instrument","loop","bindAll","Transport","bpm","start","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","setTimeout","loopName","stop","effectName","console","log","toggleEffect","toggleLoop","changeEffectWetValue","changeFeedbackDelayValue","changeChebyshevValue","changePhaserValue","changeBitCrusherValue","changeAutoPannerValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    })\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'square',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 0\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0,\n      octaves: 1,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.01,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    // SYNTH\n    let synth = new Tone.PolySynth()\n\n    let synth1 = new Tone.Synth()\n    let synth2 = new Tone.MetalSynth()\n    let synth3 = new Tone.MetalSynth()\n    let synth4 = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    // Loops\n    let loop1 = new Tone.Pattern(function(time) {\n      synth.triggerAttackRelease(\n        ['F1', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '1n',\n        time\n      )\n    }, '16n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth2.triggerAttackRelease('E1', '4n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('F1', '16n', time)\n    }, '16n')\n    //\n\n    //play the loop between 0-2m on the transport\n\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false }\n    }\n\n    _.bindAll(\n      this,\n      'getRandomArbitrary',\n      'generateRandom',\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'changeFeedbackDelayValue',\n      'changeChebyshevValue',\n      'changePhaserValue',\n      // 'changePingPongDelayValue',\n      'changeBitCrusherValue',\n      'changeAutoPannerValue'\n    )\n\n    Tone.Transport.bpm.value = 100\n    Tone.Transport.start()\n  }\n\n  componentDidMount() {\n    this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n    console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChebyshevValue(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev\n\n    effect.order = value\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    effect.order = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // changePingPongDelayValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.pingPongDelay\n  //\n  //   effect.order = value\n  //\n  //   this.setState({\n  //     pingPongDelay: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.order = value\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.order = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      feedbackDelay,\n      chebyshev,\n      phaser,\n      autoPanner,\n      bitCrusher,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { toggleEffect } = this\n\n    return (\n      <div>\n        <h2>PLAY</h2>\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\" id=\"loop1\">\n            A\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop2\">\n            ToggleLoop2\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop2')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop3\">\n            ToggleLoop3\n            <PlaySwitch\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop3')\n              }}\n            />\n          </div>\n\n          <div className=\"PlaySwitchContainer\" id=\"loop4\">\n            ToggleLoop4\n            <PlaySwitch\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...this.state.distortion}\n            toggleEffect={() => toggleEffect('distortion')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <FeedbackDelay\n            {...this.state.feedbackDelay}\n            toggleEffect={() => toggleEffect('feedbackDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n          />\n          <Chebyshev\n            {...this.state.chebyshev}\n            toggleEffect={() => toggleEffect('chebyshev')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevValue={this.changeChebyshevValue}\n          />\n          <Phaser\n            {...this.state.phaser}\n            toggleEffect={() => toggleEffect('phaser')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePhaserValue={this.changePhaserValue}\n          />\n\n          <BitCrusher\n            {...this.state.bitCrusher}\n            toggleEffect={() => toggleEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n          <AutoPanner\n            {...this.state.autoPanner}\n            toggleEffect={() => toggleEffect('autoPanner')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoPannerValue={this.changeAutoPannerValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}