{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../components/tunes/effects';\nimport * as parts from '../components/tunes/parts';\nimport * as synths from '../components/tunes/synths';\nimport * as seqs from '../components/tunes/sequences';\nimport Speed from '../components/utilities/Speed';\nimport Volume from '../components/utilities/Volume';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport AutoFilter from '../components/effects/AutoFilter';\nimport Tremolo from '../components/effects/Tremolo';\nimport PolySynth from '../components/synths/PolySynth';\nimport TSynth from '../components/synths/TSynth'; // import MetalSynth from '../components/synths/MetalSynth'\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var ambientSynth = synths.tSynth();\n    var ambientPingPongDelay = effects.pingPongDelay();\n    var ambientChebyshev = effects.chebyshev();\n    var ambientPhaser = effects.phaser();\n    var ambientBitCrusher = effects.bitCrusher();\n    var ambientAutoPanner = effects.autoPanner();\n    var ambientDistortion = effects.distortion();\n    var ambientAutoFilter = effects.autoFilter();\n    var ambientTremolo = effects.tremolo();\n    var leadSynth = synths.polySynth();\n    var leadChebyshev = effects.chebyshev();\n    var leadBitCrusher = effects.bitCrusher();\n    var leadAutoPanner = effects.autoPanner();\n    var leadDistortion = effects.distortion();\n    var leadAutoFilter = effects.autoFilter();\n    var amSynth = synths.amSynth();\n    var amPingPongDelay = effects.pingPongDelay();\n    var amChebyshev = effects.chebyshev();\n    var amPhaser = effects.phaser();\n    var amBitCrusher = effects.bitCrusher();\n    var amAutoPanner = effects.autoPanner();\n    var amDistortion = effects.distortion();\n    var amAutoFilter = effects.autoFilter();\n    var amTremolo = effects.tremolo();\n    var metalSynth = synths.metalSynth();\n    var noiseSynth = synths.noiseSynth();\n    var membraneSynth = synths.membraneSynth();\n    var membranePingPongDelay = effects.pingPongDelay();\n    var membraneChebyshev = effects.chebyshev();\n    var membranePhaser = effects.phaser();\n    var membraneBitCrusher = effects.bitCrusher();\n    var membraneAutoPanner = effects.autoPanner();\n    var membraneDistortion = effects.distortion();\n    var membraneAutoFilter = effects.autoFilter();\n    var membraneTremolo = effects.tremolo();\n    var membraneSynthEffects = synths.membraneSynthEffects();\n    var membraneeffectPingPongDelay = effects.pingPongDelay();\n    var membraneeffectChebyshev = effects.chebyshev();\n    var membraneeffectPhaser = effects.phaser();\n    var membraneeffectBitCrusher = effects.bitCrusher();\n    var membraneeffectAutoPanner = effects.autoPanner();\n    var membraneeffectDistortion = effects.distortion();\n    var membraneeffectAutoFilter = effects.autoFilter();\n    var membraneeffectTremolo = effects.tremolo();\n    var membraneSynthEffects2 = synths.membraneSynthEffects2(); // let loop1 = new Tone.Pattern(function(time, note) {\n    //   leadSynth.triggerAttackRelease(\n    //     ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n    //     '32n',\n    //     time\n    //   )\n    // }, '16n')\n\n    var loop1 = new Tone.Loop(function (time, note) {\n      ambientSynth.triggerAttackRelease('A3');\n    }, '16n');\n    var loop2 = new Tone.Loop(function (time) {\n      amSynth.triggerAttackRelease('C3', '16n');\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      ambientSynth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      leadSynth.triggerAttackRelease('F3', '4n', time);\n    }, '2n');\n    ambientSynth.chain(ambientPingPongDelay, ambientChebyshev, ambientPhaser, ambientBitCrusher, ambientAutoPanner, ambientDistortion, ambientAutoFilter, ambientTremolo, Tone.Master);\n    leadSynth.chain(leadChebyshev, leadBitCrusher, leadAutoPanner, leadDistortion, leadAutoFilter, Tone.Master);\n    amSynth.chain(amPingPongDelay, amChebyshev, amPhaser, amBitCrusher, amAutoPanner, amDistortion, amAutoFilter, amTremolo, Tone.Master);\n    membraneSynth.chain(membranePingPongDelay, membraneChebyshev, membranePhaser, membraneBitCrusher, membraneAutoPanner, membraneDistortion, membraneAutoFilter, membraneTremolo, Tone.Master);\n    metalSynth.chain(Tone.Master);\n    noiseSynth.chain(Tone.Master);\n    membraneSynthEffects.chain(membraneeffectPingPongDelay, membraneeffectChebyshev, membraneeffectPhaser, membraneeffectBitCrusher, membraneeffectAutoPanner, membraneeffectDistortion, membraneeffectAutoFilter, membraneeffectTremolo, Tone.Master);\n    membraneSynthEffects2.chain(Tone.Master); // metalSynth.chain(Tone.Master)\n\n    _this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth: ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoFilter: {\n        name: 'ambientAutoFilter',\n        effect: ambientAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientTremolo: {\n        name: 'ambientTremolo',\n        effect: ambientTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadSynth: leadSynth,\n      leadChebyshev: {\n        name: 'leadChebyshev',\n        effect: leadChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadBitCrusher: {\n        name: 'leadBitCrusher',\n        effect: leadBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadAutoPanner: {\n        name: 'leadAutoPanner',\n        effect: leadAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadAutoFilter: {\n        name: 'leadAutoFilter',\n        effect: leadAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      amSynth: amSynth,\n      amPingPongDelay: {\n        name: 'amPingPongDelay',\n        effect: amPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      amChebyshev: {\n        name: 'amChebyshev',\n        effect: amChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      amPhaser: {\n        name: 'amPhaser',\n        effect: amPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      amBitCrusher: {\n        name: 'amBitCrusher',\n        effect: amBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      amAutoPanner: {\n        name: 'amAutoPanner',\n        effect: amAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      amDistortion: {\n        name: 'amDistortion',\n        effect: amDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      amAutoFilter: {\n        name: 'amAutoFilter',\n        effect: amAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      amTremolo: {\n        name: 'amTremolo',\n        effect: amTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneSynth: membraneSynth,\n      membranePingPongDelay: {\n        name: 'membranePingPongDelay',\n        effect: membranePingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneChebyshev: {\n        name: 'membraneChebyshev',\n        effect: membraneChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      membranePhaser: {\n        name: 'membranePhaser',\n        effect: membranePhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneBitCrusher: {\n        name: 'membraneBitCrusher',\n        effect: membraneBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneAutoPanner: {\n        name: 'membraneAutoPanner',\n        effect: membraneAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneDistortion: {\n        name: 'membraneDistortion',\n        effect: membraneDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneAutoFilter: {\n        name: 'membraneAutoFilter',\n        effect: membraneAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneTremolo: {\n        name: 'membraneTremolo',\n        effect: membraneTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalSynth: metalSynth,\n      noiseSynth: noiseSynth,\n      membraneSynthEffects: membraneSynthEffects,\n      membraneeffectPingPongDelay: {\n        name: 'membraneeffectPingPongDelay',\n        effect: membraneeffectPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectChebyshev: {\n        name: 'membraneeffectChebyshev',\n        effect: membraneeffectChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectPhaser: {\n        name: 'membraneeffectPhaser',\n        effect: membraneeffectPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectBitCrusher: {\n        name: 'membraneeffectBitCrusher',\n        effect: membraneeffectBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectAutoPanner: {\n        name: 'membraneeffectAutoPanner',\n        effect: membraneeffectAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectDistortion: {\n        name: 'membraneeffectDistortion',\n        effect: membraneeffectDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectAutoFilter: {\n        name: 'membraneeffectAutoFilter',\n        effect: membraneeffectAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectTremolo: {\n        name: 'membraneeffectTremolo',\n        effect: membraneeffectTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneSynthEffects2: membraneSynthEffects2,\n      part1: {\n        part: parts.part1(amSynth),\n        on: false\n      },\n      part2: {\n        part: parts.part2(amSynth),\n        on: false\n      },\n      seq1: {\n        seq: seqs.seq1(leadSynth),\n        on: false\n      },\n      seq2: {\n        seq: seqs.seq2(amSynth),\n        on: false\n      },\n      seqdrum: {\n        seq: seqs.seqdrum(membraneSynth),\n        on: false\n      },\n      seqdrum2: {\n        seq: seqs.seqdrum2(membraneSynthEffects),\n        on: false\n      },\n      seqSnare: {\n        seq: seqs.seqSnare(noiseSynth, metalSynth, membraneSynth),\n        on: false\n      },\n      seqPerc: {\n        seq: seqs.seqPerc(membraneSynthEffects),\n        on: false\n      },\n      seqPerc2: {\n        seq: seqs.seqPerc2(membraneSynthEffects2),\n        on: false\n      },\n      seqSnare2: {\n        seq: seqs.seqSnare2(noiseSynth, metalSynth, membraneSynth),\n        on: false\n      },\n      bpm: 90,\n      volume: 90\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'getRandomArbitrary',\n    // 'generateRandom',\n    'toggleLoop', 'togglePart', 'toggleSeq', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue', 'changeSynthValue', 'changeBPMValue', 'changeVolumeValue'); // Tone.Transport.bpm.value = 180\n\n\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"changeBPMValue\",\n    value: function changeBPMValue(synthName, effectName, value) {\n      Tone.Transport.bpm.value = Math.round(value);\n      this.setState({\n        bpm: Math.round(value)\n      });\n    }\n  }, {\n    key: \"changeVolumeValue\",\n    value: function changeVolumeValue(synthName, effectName, value) {\n      Tone.Master.volume.value = Math.round(value);\n      this.setState({\n        volume: Math.round(value)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.generateRandom()\n      var _this$state$ambientDi = this.state.ambientDistortion,\n          name = _this$state$ambientDi.name,\n          effect = _this$state$ambientDi.effect,\n          wet = _this$state$ambientDi.wet,\n          on = _this$state$ambientDi.on;\n      effect.wet.value = on == true ? this.props.wet : 0;\n      effect.distortion = this.props.distortion;\n      effect.oversample = this.props.oversample;\n      this.setState({\n        ambientDistortion: {\n          name: name,\n          effect: effect,\n          wet: this.props.wet,\n          on: on\n        }\n      });\n    } ///RANDOM\n    // getRandomArbitrary(min, max) {\n    //   return Math.floor(Math.random() * (max - min)) + min\n    // }\n    //\n    // generateRandom() {\n    //   const { lastChange, timeout } = this.state\n    //\n    //   if (Date.now() - lastChange >= timeout) {\n    //     const random = this.getRandomArbitrary(100, 3000)\n    //     this.setState({\n    //       lastChange: Date.now(),\n    //       timeout: random\n    //     })\n    //\n    //     this.changeDistortionValue('distortion', random / 30)\n    //   }\n    //\n    //   setTimeout(() => this.generateRandom(), timeout)\n    // }\n\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    } //ПАРТЫ\n\n  }, {\n    key: \"togglePart\",\n    value: function togglePart(partName) {\n      var _this$state$partName = this.state[partName],\n          part = _this$state$partName.part,\n          on = _this$state$partName.on;\n\n      if (on == true) {\n        part.mute = true;\n      } else {\n        // console.log('yo')\n        part.mute = false;\n        part.at('0m');\n        part.start(0);\n        part.loop = true;\n        part.loopEnd = '1m';\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(partName), {\n        part: part,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleSeq\",\n    value: function toggleSeq(seqName) {\n      var _this$state$seqName = this.state[seqName],\n          seq = _this$state$seqName.seq,\n          on = _this$state$seqName.on; // on == true ? seq.stop() : seq.start('0m')\n\n      if (on == true) {\n        seq.mute = true;\n      } else {\n        // console.log('yo')\n        seq.mute = false;\n        seq.start('0m');\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(seqName), {\n        seq: seq,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName]; // console.log(synthName, effectName, value)\n      // //ambientSynth attack 0.45555555555555555\n      // console.log(synth)\n\n      var envelope = synth.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on; // console.log(this.state.autoPanner)\n\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on; // console.log(effectName, effectProperty, value)\n\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    } // Специфичность чебушев\n    // changeChebyshevValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.chebyshev\n    //\n    //   effect.order = Math.round(value)\n    //\n    //   this.setState({\n    //     chebyshev: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          ambientSynth = _this$state.ambientSynth,\n          ambientPingPongDelay = _this$state.ambientPingPongDelay,\n          ambientChebyshev = _this$state.ambientChebyshev,\n          ambientPhaser = _this$state.ambientPhaser,\n          ambientBitCrusher = _this$state.ambientBitCrusher,\n          ambientAutoPanner = _this$state.ambientAutoPanner,\n          ambientDistortion = _this$state.ambientDistortion,\n          ambientAutoFilter = _this$state.ambientAutoFilter,\n          ambientTremolo = _this$state.ambientTremolo,\n          leadSynth = _this$state.leadSynth,\n          leadChebyshev = _this$state.leadChebyshev,\n          leadBitCrusher = _this$state.leadBitCrusher,\n          leadAutoPanner = _this$state.leadAutoPanner,\n          leadDistortion = _this$state.leadDistortion,\n          leadAutoFilter = _this$state.leadAutoFilter,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          part1 = _this$state.part1,\n          part2 = _this$state.part2,\n          seq1 = _this$state.seq1,\n          seq2 = _this$state.seq2,\n          seqdrum = _this$state.seqdrum,\n          seqdrum2 = _this$state.seqdrum2,\n          seqPerc = _this$state.seqPerc,\n          seqPerc2 = _this$state.seqPerc2,\n          seqSnare = _this$state.seqSnare,\n          seqSnare2 = _this$state.seqSnare2,\n          amSynth = _this$state.amSynth,\n          amPingPongDelay = _this$state.amPingPongDelay,\n          amChebyshev = _this$state.amChebyshev,\n          amPhaser = _this$state.amPhaser,\n          amBitCrusher = _this$state.amBitCrusher,\n          amAutoPanner = _this$state.amAutoPanner,\n          amDistortion = _this$state.amDistortion,\n          amAutoFilter = _this$state.amAutoFilter,\n          amTremolo = _this$state.amTremolo,\n          membraneSynth = _this$state.membraneSynth,\n          membranePingPongDelay = _this$state.membranePingPongDelay,\n          membraneChebyshev = _this$state.membraneChebyshev,\n          membranePhaser = _this$state.membranePhaser,\n          membraneBitCrusher = _this$state.membraneBitCrusher,\n          membraneAutoPanner = _this$state.membraneAutoPanner,\n          membraneDistortion = _this$state.membraneDistortion,\n          membraneAutoFilter = _this$state.membraneAutoFilter,\n          membraneTremolo = _this$state.membraneTremolo,\n          metalSynth = _this$state.metalSynth,\n          noiseSynth = _this$state.noiseSynth,\n          membraneSynthEffects = _this$state.membraneSynthEffects,\n          membraneeffectPingPongDelay = _this$state.membraneeffectPingPongDelay,\n          membraneeffectChebyshev = _this$state.membraneeffectChebyshev,\n          membraneeffectPhaser = _this$state.membraneeffectPhaser,\n          membraneeffectBitCrusher = _this$state.membraneeffectBitCrusher,\n          membraneeffectAutoPanner = _this$state.membraneeffectAutoPanner,\n          membraneeffectDistortion = _this$state.membraneeffectDistortion,\n          membraneeffectAutoFilter = _this$state.membraneeffectAutoFilter,\n          membraneeffectTremolo = _this$state.membraneeffectTremolo,\n          membraneSynthEffects2 = _this$state.membraneSynthEffects2,\n          bpm = _this$state.bpm,\n          volume = _this$state.volume;\n      var _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          togglePart = this.togglePart,\n          toggleSeq = this.toggleSeq,\n          changeSynthValue = this.changeSynthValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue,\n          changeBPMValue = this.changeBPMValue,\n          changeVolumeValue = this.changeVolumeValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"TopArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controlsArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"minusplusCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"minus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(Volume, {\n        volume: volume,\n        changeVolumeValue: changeVolumeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"logoArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"controlsArea2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"minusplusCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"minus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      }, React.createElement(Speed, {\n        bpm: bpm,\n        changeBPMValue: changeBPMValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonContainerGroup1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DrumButton\",\n        id: \"drum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, \"kick DRUM 1\", React.createElement(PlaySwitch, {\n        synth: \"membraneSynth\",\n        instrument: membraneSynth,\n        name: \"play\",\n        value: seqdrum.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqdrum');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DrumButton\",\n        id: \"drum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, \"kick\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }, \"DRUM 2\"), React.createElement(PlaySwitch, {\n        synth: \"membraneSynthEffects\",\n        instrument: membraneSynthEffects,\n        name: \"play\",\n        value: seqdrum2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqdrum2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"ButtonContainerGroup2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, \"*PAD*\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848\n        },\n        __self: this\n      }, \"Part 1\"), React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: part1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.togglePart('part1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, \"*PAD*\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, \"loop 4\"), React.createElement(PlaySwitch, {\n        synth: \"leadSynth\",\n        instrument: leadSynth,\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, \"*PAD*\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, \"Seq 1\"), React.createElement(PlaySwitch // name={name}\n      , {\n        synth: \"leadSynth\",\n        instrument: leadSynth,\n        name: \"play\",\n        value: seq1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seq1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889\n        },\n        __self: this\n      }, \"*PAD*\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891\n        },\n        __self: this\n      }, \"Seq 2\"), React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: seq2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seq2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, \"*PAD*\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }, \"Loop 2\"), React.createElement(PlaySwitch, {\n        synth: \"amSynth\",\n        instrument: amSynth,\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ButtonContainerGroup3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DrumButton\",\n        id: \"drum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920\n        },\n        __self: this\n      }, \"SNARE 1 + Hi-hat\", React.createElement(PlaySwitch, {\n        synth: \"metalSynth ,  noiseSynth, membraneSynth\",\n        instrument: (metalSynth, noiseSynth, membraneSynth),\n        name: \"play\",\n        value: seqSnare.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqSnare');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DrumButton\",\n        id: \"drum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935\n        },\n        __self: this\n      }, \"SNARE + Hi-hat 2\", React.createElement(PlaySwitch, {\n        synth: \"metalSynth ,  noiseSynth, membraneSynth\",\n        instrument: (metalSynth, noiseSynth, membraneSynth),\n        name: \"play\",\n        value: seqSnare2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqSnare2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"ButtonContainerGroup4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"ambient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951\n        },\n        __self: this\n      }, \"*RERC*\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953\n        },\n        __self: this\n      }, \"Noise\"), React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"ambient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965\n        },\n        __self: this\n      }, \"PERC 1\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966\n        },\n        __self: this\n      }, \"*\"), React.createElement(PlaySwitch, {\n        synth: \"membraneSynthEffects\",\n        instrument: membraneSynthEffects,\n        name: \"play\",\n        value: seqPerc.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqPerc');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ButtonNameContainer\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }, \"PERC 2\", React.createElement(\"div\", {\n        className: \"ButtonExplain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }, \"*\"), React.createElement(PlaySwitch, {\n        synth: \"membraneSynthEffects2\",\n        instrument: membraneSynthEffects2,\n        name: \"play\",\n        value: seqPerc2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleSeq('seqPerc2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AmEffectsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, amDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('amDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, amBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('amBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, amPhaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('amPhaser');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }, \" \"), React.createElement(\"div\", {\n        className: \"LeadEffectCover\",\n        id: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lable\",\n        id: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, leadDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('leadDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, leadBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('leadBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      })), React.createElement(AutoFilter, Object.assign({}, leadAutoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('leadAutoFilter');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"MembranEffectsEffectCover\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lable\",\n        id: \"membraneeffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, membraneeffectDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('membraneeffectDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, membraneeffectBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('membraneeffectBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      })), React.createElement(AutoFilter, Object.assign({}, membraneeffectAutoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('membraneeffectAutoFilter');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"AmbientEffectsCover\",\n        id: \"ambient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lable\",\n        id: \"ambient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, ambientDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, ambientBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, ambientAutoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoPanner');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"MembranEffectCover\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lable\",\n        id: \"membrane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, membraneDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('membraneDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, membraneBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('membraneBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      })), React.createElement(AutoFilter, Object.assign({}, membraneAutoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('membraneAutoFilter');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","parts","synths","seqs","Speed","Volume","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","AutoFilter","Tremolo","PolySynth","TSynth","Synth","props","defaultWetValue","ambientSynth","tSynth","ambientPingPongDelay","pingPongDelay","ambientChebyshev","chebyshev","ambientPhaser","phaser","ambientBitCrusher","bitCrusher","ambientAutoPanner","autoPanner","ambientDistortion","distortion","ambientAutoFilter","autoFilter","ambientTremolo","tremolo","leadSynth","polySynth","leadChebyshev","leadBitCrusher","leadAutoPanner","leadDistortion","leadAutoFilter","amSynth","amPingPongDelay","amChebyshev","amPhaser","amBitCrusher","amAutoPanner","amDistortion","amAutoFilter","amTremolo","metalSynth","noiseSynth","membraneSynth","membranePingPongDelay","membraneChebyshev","membranePhaser","membraneBitCrusher","membraneAutoPanner","membraneDistortion","membraneAutoFilter","membraneTremolo","membraneSynthEffects","membraneeffectPingPongDelay","membraneeffectChebyshev","membraneeffectPhaser","membraneeffectBitCrusher","membraneeffectAutoPanner","membraneeffectDistortion","membraneeffectAutoFilter","membraneeffectTremolo","membraneSynthEffects2","loop1","Loop","time","note","triggerAttackRelease","loop2","loop3","loop4","chain","Master","state","name","effect","wet","on","loop","part1","part","part2","seq1","seq","seq2","seqdrum","seqdrum2","seqSnare","seqPerc","seqPerc2","seqSnare2","bpm","volume","bindAll","Transport","start","synthName","effectName","value","Math","round","setState","oversample","loopName","stop","partName","mute","at","loopEnd","seqName","synth","envelope","oscillator","effectProperty","toggleEffect","toggleLoop","togglePart","toggleSeq","changeSynthValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","changeBPMValue","changeVolumeValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../components/tunes/effects'\nimport * as parts from '../components/tunes/parts'\nimport * as synths from '../components/tunes/synths'\nimport * as seqs from '../components/tunes/sequences'\n\nimport Speed from '../components/utilities/Speed'\nimport Volume from '../components/utilities/Volume'\n\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport AutoFilter from '../components/effects/AutoFilter'\nimport Tremolo from '../components/effects/Tremolo'\n\nimport PolySynth from '../components/synths/PolySynth'\nimport TSynth from '../components/synths/TSynth'\n// import MetalSynth from '../components/synths/MetalSynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let ambientSynth = synths.tSynth()\n    let ambientPingPongDelay = effects.pingPongDelay()\n    let ambientChebyshev = effects.chebyshev()\n    let ambientPhaser = effects.phaser()\n    let ambientBitCrusher = effects.bitCrusher()\n    let ambientAutoPanner = effects.autoPanner()\n    let ambientDistortion = effects.distortion()\n    let ambientAutoFilter = effects.autoFilter()\n    let ambientTremolo = effects.tremolo()\n\n    let leadSynth = synths.polySynth()\n    let leadChebyshev = effects.chebyshev()\n    let leadBitCrusher = effects.bitCrusher()\n    let leadAutoPanner = effects.autoPanner()\n    let leadDistortion = effects.distortion()\n    let leadAutoFilter = effects.autoFilter()\n\n    let amSynth = synths.amSynth()\n    let amPingPongDelay = effects.pingPongDelay()\n    let amChebyshev = effects.chebyshev()\n    let amPhaser = effects.phaser()\n    let amBitCrusher = effects.bitCrusher()\n    let amAutoPanner = effects.autoPanner()\n    let amDistortion = effects.distortion()\n    let amAutoFilter = effects.autoFilter()\n    let amTremolo = effects.tremolo()\n\n    let metalSynth = synths.metalSynth()\n    let noiseSynth = synths.noiseSynth()\n\n    let membraneSynth = synths.membraneSynth()\n    let membranePingPongDelay = effects.pingPongDelay()\n    let membraneChebyshev = effects.chebyshev()\n    let membranePhaser = effects.phaser()\n    let membraneBitCrusher = effects.bitCrusher()\n    let membraneAutoPanner = effects.autoPanner()\n    let membraneDistortion = effects.distortion()\n    let membraneAutoFilter = effects.autoFilter()\n    let membraneTremolo = effects.tremolo()\n\n    let membraneSynthEffects = synths.membraneSynthEffects()\n    let membraneeffectPingPongDelay = effects.pingPongDelay()\n    let membraneeffectChebyshev = effects.chebyshev()\n    let membraneeffectPhaser = effects.phaser()\n    let membraneeffectBitCrusher = effects.bitCrusher()\n    let membraneeffectAutoPanner = effects.autoPanner()\n    let membraneeffectDistortion = effects.distortion()\n    let membraneeffectAutoFilter = effects.autoFilter()\n    let membraneeffectTremolo = effects.tremolo()\n    let membraneSynthEffects2 = synths.membraneSynthEffects2()\n\n    // let loop1 = new Tone.Pattern(function(time, note) {\n    //   leadSynth.triggerAttackRelease(\n    //     ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n    //     '32n',\n    //     time\n    //   )\n    // }, '16n')\n    let loop1 = new Tone.Loop(function(time, note) {\n      ambientSynth.triggerAttackRelease('A3')\n    }, '16n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      amSynth.triggerAttackRelease('C3', '16n')\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      ambientSynth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      leadSynth.triggerAttackRelease('F3', '4n', time)\n    }, '2n')\n\n    ambientSynth.chain(\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      ambientAutoFilter,\n      ambientTremolo,\n      Tone.Master\n    )\n\n    leadSynth.chain(\n      leadChebyshev,\n\n      leadBitCrusher,\n      leadAutoPanner,\n      leadDistortion,\n      leadAutoFilter,\n\n      Tone.Master\n    )\n\n    amSynth.chain(\n      amPingPongDelay,\n      amChebyshev,\n      amPhaser,\n      amBitCrusher,\n      amAutoPanner,\n      amDistortion,\n      amAutoFilter,\n      amTremolo,\n      Tone.Master\n    )\n    membraneSynth.chain(\n      membranePingPongDelay,\n      membraneChebyshev,\n      membranePhaser,\n      membraneBitCrusher,\n      membraneAutoPanner,\n      membraneDistortion,\n      membraneAutoFilter,\n      membraneTremolo,\n      Tone.Master\n    )\n    metalSynth.chain(Tone.Master)\n    noiseSynth.chain(Tone.Master)\n    membraneSynthEffects.chain(\n      membraneeffectPingPongDelay,\n      membraneeffectChebyshev,\n      membraneeffectPhaser,\n      membraneeffectBitCrusher,\n      membraneeffectAutoPanner,\n      membraneeffectDistortion,\n      membraneeffectAutoFilter,\n      membraneeffectTremolo,\n      Tone.Master\n    )\n    membraneSynthEffects2.chain(Tone.Master)\n\n    // metalSynth.chain(Tone.Master)\n\n    this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoFilter: {\n        name: 'ambientAutoFilter',\n        effect: ambientAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientTremolo: {\n        name: 'ambientTremolo',\n        effect: ambientTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      leadSynth,\n      leadChebyshev: {\n        name: 'leadChebyshev',\n        effect: leadChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      leadBitCrusher: {\n        name: 'leadBitCrusher',\n        effect: leadBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      leadAutoPanner: {\n        name: 'leadAutoPanner',\n        effect: leadAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadAutoFilter: {\n        name: 'leadAutoFilter',\n        effect: leadAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false },\n\n      amSynth,\n      amPingPongDelay: {\n        name: 'amPingPongDelay',\n        effect: amPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      amChebyshev: {\n        name: 'amChebyshev',\n        effect: amChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      amPhaser: {\n        name: 'amPhaser',\n        effect: amPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      amBitCrusher: {\n        name: 'amBitCrusher',\n        effect: amBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      amAutoPanner: {\n        name: 'amAutoPanner',\n        effect: amAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      amDistortion: {\n        name: 'amDistortion',\n        effect: amDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      amAutoFilter: {\n        name: 'amAutoFilter',\n        effect: amAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      amTremolo: {\n        name: 'amTremolo',\n        effect: amTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneSynth,\n      membranePingPongDelay: {\n        name: 'membranePingPongDelay',\n        effect: membranePingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneChebyshev: {\n        name: 'membraneChebyshev',\n        effect: membraneChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membranePhaser: {\n        name: 'membranePhaser',\n        effect: membranePhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneBitCrusher: {\n        name: 'membraneBitCrusher',\n        effect: membraneBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneAutoPanner: {\n        name: 'membraneAutoPanner',\n        effect: membraneAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneDistortion: {\n        name: 'membraneDistortion',\n        effect: membraneDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneAutoFilter: {\n        name: 'membraneAutoFilter',\n        effect: membraneAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneTremolo: {\n        name: 'membraneTremolo',\n        effect: membraneTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      metalSynth,\n      noiseSynth,\n      membraneSynthEffects,\n      membraneeffectPingPongDelay: {\n        name: 'membraneeffectPingPongDelay',\n        effect: membraneeffectPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectChebyshev: {\n        name: 'membraneeffectChebyshev',\n        effect: membraneeffectChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneeffectPhaser: {\n        name: 'membraneeffectPhaser',\n        effect: membraneeffectPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneeffectBitCrusher: {\n        name: 'membraneeffectBitCrusher',\n        effect: membraneeffectBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneeffectAutoPanner: {\n        name: 'membraneeffectAutoPanner',\n        effect: membraneeffectAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneeffectDistortion: {\n        name: 'membraneeffectDistortion',\n        effect: membraneeffectDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectAutoFilter: {\n        name: 'membraneeffectAutoFilter',\n        effect: membraneeffectAutoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      membraneeffectTremolo: {\n        name: 'membraneeffectTremolo',\n        effect: membraneeffectTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      membraneSynthEffects2,\n\n      part1: {\n        part: parts.part1(amSynth),\n        on: false\n      },\n      part2: {\n        part: parts.part2(amSynth),\n        on: false\n      },\n\n      seq1: {\n        seq: seqs.seq1(leadSynth),\n        on: false\n      },\n      seq2: {\n        seq: seqs.seq2(amSynth),\n        on: false\n      },\n      seqdrum: {\n        seq: seqs.seqdrum(membraneSynth),\n        on: false\n      },\n      seqdrum2: {\n        seq: seqs.seqdrum2(membraneSynthEffects),\n        on: false\n      },\n      seqSnare: {\n        seq: seqs.seqSnare(noiseSynth, metalSynth, membraneSynth),\n\n        on: false\n      },\n      seqPerc: {\n        seq: seqs.seqPerc(membraneSynthEffects),\n        on: false\n      },\n      seqPerc2: {\n        seq: seqs.seqPerc2(membraneSynthEffects2),\n        on: false\n      },\n      seqSnare2: {\n        seq: seqs.seqSnare2(noiseSynth, metalSynth, membraneSynth),\n\n        on: false\n      },\n      bpm: 90,\n      volume: 90\n    }\n\n    _.bindAll(\n      this,\n      // 'getRandomArbitrary',\n      // 'generateRandom',\n      'toggleLoop',\n      'togglePart',\n      'toggleSeq',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue',\n      'changeSynthValue',\n      'changeBPMValue',\n      'changeVolumeValue'\n    )\n\n    // Tone.Transport.bpm.value = 180\n    Tone.Transport.start()\n  }\n\n  changeBPMValue(synthName, effectName, value) {\n    Tone.Transport.bpm.value = Math.round(value)\n\n    this.setState({\n      bpm: Math.round(value)\n    })\n  }\n\n  changeVolumeValue(synthName, effectName, value) {\n    Tone.Master.volume.value = Math.round(value)\n\n    this.setState({\n      volume: Math.round(value)\n    })\n  }\n\n  componentDidMount() {\n    //this.generateRandom()\n\n    let { name, effect, wet, on } = this.state.ambientDistortion\n\n    effect.wet.value = on == true ? this.props.wet : 0\n    effect.distortion = this.props.distortion\n    effect.oversample = this.props.oversample\n\n    this.setState({\n      ambientDistortion: {\n        name,\n        effect,\n        wet: this.props.wet,\n        on\n      }\n    })\n  }\n\n  ///RANDOM\n\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 30)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  //ПАРТЫ\n  togglePart(partName) {\n    let { part, on } = this.state[partName]\n\n    if (on == true) {\n      part.mute = true\n    } else {\n      // console.log('yo')\n      part.mute = false\n      part.at('0m')\n      part.start(0)\n      part.loop = true\n      part.loopEnd = '1m'\n    }\n\n    this.setState({\n      [`${partName}`]: {\n        part: part,\n        on: !on\n      }\n    })\n  }\n\n  toggleSeq(seqName) {\n    let { seq, on } = this.state[seqName]\n    // on == true ? seq.stop() : seq.start('0m')\n\n    if (on == true) {\n      seq.mute = true\n    } else {\n      // console.log('yo')\n      seq.mute = false\n      seq.start('0m')\n    }\n\n    this.setState({\n      [`${seqName}`]: {\n        seq: seq,\n        on: !on\n      }\n    })\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    // console.log(synthName, effectName, value)\n    // //ambientSynth attack 0.45555555555555555\n    // console.log(synth)\n    let envelope = synth.envelope\n\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(effectName, effectProperty, value)\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // Специфичность чебушев\n  // changeChebyshevValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.chebyshev\n  //\n  //   effect.order = Math.round(value)\n  //\n  //   this.setState({\n  //     chebyshev: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  render() {\n    let {\n      ambientSynth,\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      ambientAutoFilter,\n      ambientTremolo,\n\n      leadSynth,\n      leadChebyshev,\n\n      leadBitCrusher,\n      leadAutoPanner,\n      leadDistortion,\n      leadAutoFilter,\n\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      part1,\n      part2,\n      seq1,\n      seq2,\n      seqdrum,\n      seqdrum2,\n\n      seqPerc,\n      seqPerc2,\n      seqSnare,\n      seqSnare2,\n\n      amSynth,\n      amPingPongDelay,\n      amChebyshev,\n      amPhaser,\n      amBitCrusher,\n      amAutoPanner,\n      amDistortion,\n      amAutoFilter,\n      amTremolo,\n\n      membraneSynth,\n      membranePingPongDelay,\n      membraneChebyshev,\n      membranePhaser,\n      membraneBitCrusher,\n      membraneAutoPanner,\n      membraneDistortion,\n      membraneAutoFilter,\n      membraneTremolo,\n\n      metalSynth,\n      noiseSynth,\n\n      membraneSynthEffects,\n      membraneeffectPingPongDelay,\n      membraneeffectChebyshev,\n      membraneeffectPhaser,\n      membraneeffectBitCrusher,\n      membraneeffectAutoPanner,\n      membraneeffectDistortion,\n      membraneeffectAutoFilter,\n      membraneeffectTremolo,\n\n      membraneSynthEffects2,\n      bpm,\n      volume\n    } = this.state\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      togglePart,\n      toggleSeq,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue,\n      changeBPMValue,\n      changeVolumeValue\n    } = this\n\n    return (\n      <div>\n        <div className=\"TopArea\">\n          <div className=\"controlsArea\">\n            <div className=\"minusplusCover\">\n              <div className=\"minus\"></div>\n              <div>\n                <Volume volume={volume} changeVolumeValue={changeVolumeValue} />\n              </div>\n              <div className=\"plus\"></div>\n            </div>\n          </div>\n          <div className=\"logoArea\">\n            <div className=\"logo\"></div>\n          </div>\n\n          <div className=\"controlsArea2\">\n            <div className=\"minusplusCover\">\n              <div className=\"minus\"></div>\n              <div>\n                <Speed bpm={bpm} changeBPMValue={changeBPMValue} />\n              </div>\n              <div className=\"plus\"></div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\">\n            <div className=\"ButtonContainerGroup1\">\n              <div className=\"DrumButton\" id=\"drum\">\n                <div className=\"ButtonNameContainer\" id=\"membrane\">\n                  kick DRUM 1\n                  <PlaySwitch\n                    synth=\"membraneSynth\"\n                    instrument={membraneSynth}\n                    name=\"play\"\n                    value={seqdrum.on}\n                    handleToggleClick={() => {\n                      this.toggleSeq('seqdrum')\n                    }}\n                  />\n                  <div className=\"note\" id=\"membrane\"></div>\n                </div>\n              </div>\n\n              <div className=\"DrumButton\" id=\"drum\">\n                <div className=\"ButtonNameContainer\" id=\"membraneeffect\">\n                  kick\n                  <br>DRUM 2</br>\n                  <PlaySwitch\n                    synth=\"membraneSynthEffects\"\n                    instrument={membraneSynthEffects}\n                    name=\"play\"\n                    value={seqdrum2.on}\n                    handleToggleClick={() => {\n                      this.toggleSeq('seqdrum2')\n                    }}\n                  />\n                  <div className=\"note\" id=\"membraneeffect\"></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"ButtonContainerGroup2\">\n              <div className=\"ButtonNameContainer\">\n                *PAD*\n                <div className=\"ButtonExplain\">Part 1</div>\n                <PlaySwitch\n                  synth=\"amSynth\"\n                  instrument={amSynth}\n                  name=\"play\"\n                  value={part1.on}\n                  handleToggleClick={() => {\n                    this.togglePart('part1')\n                  }}\n                />\n                <div className=\"note\" id=\"membrane\"></div>\n              </div>\n              <div className=\"ButtonNameContainer\" id=\"lead\">\n                *PAD*\n                <div className=\"ButtonExplain\">loop 4</div>\n                <PlaySwitch\n                  synth=\"leadSynth\"\n                  instrument={leadSynth}\n                  name=\"play\"\n                  value={loop4.on}\n                  handleToggleClick={() => {\n                    this.toggleLoop('loop4')\n                  }}\n                />\n                <div className=\"note\" id=\"lead\"></div>\n              </div>\n              <div className=\"ButtonNameContainer\" id=\"lead\">\n                *PAD*\n                <div className=\"ButtonExplain\">Seq 1</div>\n                <PlaySwitch\n                  // name={name}\n                  synth=\"leadSynth\"\n                  instrument={leadSynth}\n                  name=\"play\"\n                  value={seq1.on}\n                  handleToggleClick={() => {\n                    this.toggleSeq('seq1')\n                  }}\n                />\n                <div className=\"note\" id=\"lead\"></div>\n              </div>\n              <div className=\"ButtonNameContainer\">\n                *PAD*\n                <div className=\"ButtonExplain\">Seq 2</div>\n                <PlaySwitch\n                  synth=\"amSynth\"\n                  instrument={amSynth}\n                  name=\"play\"\n                  value={seq2.on}\n                  handleToggleClick={() => {\n                    this.toggleSeq('seq2')\n                  }}\n                />\n                <div className=\"note\" id=\"membrane\"></div>\n              </div>\n              <div className=\"ButtonNameContainer\">\n                *PAD*\n                <div className=\"ButtonExplain\">Loop 2</div>\n                <PlaySwitch\n                  synth=\"amSynth\"\n                  instrument={amSynth}\n                  name=\"play\"\n                  value={loop2.on}\n                  handleToggleClick={() => {\n                    this.toggleLoop('loop2')\n                  }}\n                />\n                <div className=\"note\" id=\"membrane\"></div>\n              </div>\n            </div>\n            <div className=\"ButtonContainerGroup3\">\n              <div className=\"DrumButton\" id=\"drum\">\n                <div className=\"ButtonNameContainer\" id=\"membrane\">\n                  SNARE 1 + Hi-hat\n                  <PlaySwitch\n                    synth=\"metalSynth ,  noiseSynth, membraneSynth\"\n                    instrument={(metalSynth, noiseSynth, membraneSynth)}\n                    name=\"play\"\n                    value={seqSnare.on}\n                    handleToggleClick={() => {\n                      this.toggleSeq('seqSnare')\n                    }}\n                  />\n                  <div className=\"note\" id=\"membrane\"></div>\n                </div>\n              </div>\n              <div className=\"DrumButton\" id=\"drum\">\n                <div className=\"ButtonNameContainer\" id=\"membrane\">\n                  SNARE + Hi-hat 2\n                  <PlaySwitch\n                    synth=\"metalSynth ,  noiseSynth, membraneSynth\"\n                    instrument={(metalSynth, noiseSynth, membraneSynth)}\n                    name=\"play\"\n                    value={seqSnare2.on}\n                    handleToggleClick={() => {\n                      this.toggleSeq('seqSnare2')\n                    }}\n                  />\n                  <div className=\"note\" id=\"membrane\"></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"ButtonContainerGroup4\">\n              <div className=\"ButtonNameContainer\" id=\"ambient\">\n                *RERC*\n                <div className=\"ButtonExplain\">Noise</div>\n                <PlaySwitch\n                  synth=\"ambientSynth\"\n                  instrument={ambientSynth}\n                  name=\"play\"\n                  value={loop1.on}\n                  handleToggleClick={() => {\n                    this.toggleLoop('loop1')\n                  }}\n                />\n                <div className=\"note\" id=\"ambient\"></div>\n              </div>\n              <div className=\"ButtonNameContainer\" id=\"membraneeffect\">\n                PERC 1<div className=\"ButtonExplain\">*</div>\n                <PlaySwitch\n                  synth=\"membraneSynthEffects\"\n                  instrument={membraneSynthEffects}\n                  name=\"play\"\n                  value={seqPerc.on}\n                  handleToggleClick={() => {\n                    this.toggleSeq('seqPerc')\n                  }}\n                />\n                <div className=\"note\" id=\"membraneeffect\"></div>\n              </div>\n              <div className=\"ButtonNameContainer\" id=\"membraneeffect\">\n                PERC 2<div className=\"ButtonExplain\">*</div>\n                <PlaySwitch\n                  synth=\"membraneSynthEffects2\"\n                  instrument={membraneSynthEffects2}\n                  name=\"play\"\n                  value={seqPerc2.on}\n                  handleToggleClick={() => {\n                    this.toggleSeq('seqPerc2')\n                  }}\n                />\n                <div className=\"note\" id=\"membraneeffect\"></div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"PannelsCover\">\n            <div className=\"AmEffectsCover\">\n              <div className=\"lable\"></div>\n              <Distortion\n                {...amDistortion}\n                toggleEffect={() => toggleEffect('amDistortion')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <BitCrusher\n                {...amBitCrusher}\n                toggleEffect={() => toggleEffect('amBitCrusher')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <Phaser\n                {...amPhaser}\n                toggleEffect={() => toggleEffect('amPhaser')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n            </div>\n\n            <div className=\"block\"> </div>\n            <div className=\"LeadEffectCover\" id=\"lead\">\n              <div className=\"lable\" id=\"lead\"></div>\n              <Distortion\n                {...leadDistortion}\n                toggleEffect={() => toggleEffect('leadDistortion')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <BitCrusher\n                {...leadBitCrusher}\n                toggleEffect={() => toggleEffect('leadBitCrusher')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <AutoFilter\n                {...leadAutoFilter}\n                toggleEffect={() => toggleEffect('leadAutoFilter')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n            </div>\n\n            <div className=\"MembranEffectsEffectCover\" id=\"membraneeffect\">\n              <div className=\"lable\" id=\"membraneeffect\"></div>\n              <Distortion\n                {...membraneeffectDistortion}\n                toggleEffect={() => toggleEffect('membraneeffectDistortion')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <BitCrusher\n                {...membraneeffectBitCrusher}\n                toggleEffect={() => toggleEffect('membraneeffectBitCrusher')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <AutoFilter\n                {...membraneeffectAutoFilter}\n                toggleEffect={() => toggleEffect('membraneeffectAutoFilter')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n            </div>\n            <div className=\"AmbientEffectsCover\" id=\"ambient\">\n              <div className=\"lable\" id=\"ambient\"></div>\n              <Distortion\n                {...ambientDistortion}\n                toggleEffect={() => toggleEffect('ambientDistortion')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <BitCrusher\n                {...ambientBitCrusher}\n                toggleEffect={() => toggleEffect('ambientBitCrusher')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <AutoPanner\n                {...ambientAutoPanner}\n                toggleEffect={() => toggleEffect('ambientAutoPanner')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n            </div>\n\n            <div className=\"MembranEffectCover\" id=\"membrane\">\n              <div className=\"lable\" id=\"membrane\"></div>\n              <Distortion\n                {...membraneDistortion}\n                toggleEffect={() => toggleEffect('membraneDistortion')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <BitCrusher\n                {...membraneBitCrusher}\n                toggleEffect={() => toggleEffect('membraneBitCrusher')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n              <AutoFilter\n                {...membraneAutoFilter}\n                toggleEffect={() => toggleEffect('membraneAutoFilter')}\n                changeEffectWetValue={changeEffectWetValue}\n                changeEffectValue={changeEffectValue}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}