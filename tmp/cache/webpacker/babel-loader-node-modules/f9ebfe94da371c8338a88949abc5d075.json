{"ast":null,"code":"import Tone from 'tone';\n\nfunction seq1(synth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note); //straight quater notes\n\n    synth.triggerAttackRelease(note, '4t', time);\n  }, ['G3', 'Cb4', 'D4', 'G4', 'D4', 'Cb4', 'G3', 'Cb4'], '32n');\n  return seq;\n}\n\nfunction seq2(synth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note); //straight quater notes\n\n    synth.triggerAttackRelease(note, '16n', time);\n  }, ['D#5', 'G4', 'C5', 'G4', 'D#5', 'G4', 'C5', 'G4', 'C5', 'D#5', 'G4', 'C5', 'D#5', 'G4'], '8n');\n  return seq;\n}\n\nfunction seqdrum(membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    membraneSynth.triggerAttackRelease(note, '10hz', time);\n  }, ['G0', null, null, 'G0', null, null, null, 'G0', null, null, null, null, null, 'G0', 'G0', 'G0'], '16n'); // membraneSynth.connect(convolver)\n\n  return seq; // Tone.Transport.start ();\n}\n\nfunction seqSnare(noiseSynth, metalSynth, membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    metalSynth.frequency.setValueAtTime(note, time);\n    metalSynth.triggerAttack(time, Math.random() * 0.5 + 0.5);\n    noiseSynth.triggerAttackRelease('16n', time, 1);\n    membraneSynth.triggerAttackRelease('E1', '16n', time, 1);\n  }, [null, null, null, null, null, null, 90, null, null, null, null, null, 90, null, 10, null], '16n');\n  return seq;\n  Tone.Master.volume = 10;\n}\n\nfunction seqPerc(membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note);\n    membraneSynth.triggerAttackRelease(note, '10hz', time);\n  }, ['Eb4', 'A4', 'Bb4', 'Eb4', 'A4'], '2n');\n  return seq; // Tone.Transport.start ();\n}\n\nvar convolver = new Tone.Convolver('https://s3-us-west-2.amazonaws.com/s.cdpn.io/132550/factory.hall.wav').toMaster();\n\nfunction seqSnare2(noiseSynth, metalSynth, membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    metalSynth.frequency.setValueAtTime(note, time);\n    metalSynth.triggerAttack(time, Math.random() * 0.5 + 0.5);\n    noiseSynth.triggerAttackRelease('2n', time, 1);\n    membraneSynth.triggerAttackRelease('A5', '4n', time, 1);\n  }, [null, null, null, null, null, null, 10, null, null, null, null, null, 10, null, 70, 70], '16n');\n  return seq;\n\n  volume: 14; // Tone.Master.volume = 10\n\n}\n\nexport { seq1, seq2, seqdrum, seqSnare, seqPerc, seqSnare2 };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/tunes/sequences.js"],"names":["Tone","seq1","synth","seq","Sequence","time","note","console","log","triggerAttackRelease","seq2","seqdrum","membraneSynth","seqSnare","noiseSynth","metalSynth","frequency","setValueAtTime","triggerAttack","Math","random","Master","volume","seqPerc","convolver","Convolver","toMaster","seqSnare2"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n\nfunction seq1(synth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      //straight quater notes\n      synth.triggerAttackRelease(note, '4t', time)\n    },\n    ['G3', 'Cb4', 'D4', 'G4', 'D4', 'Cb4', 'G3', 'Cb4'],\n    '32n'\n  )\n  return seq\n}\n\nfunction seq2(synth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      //straight quater notes\n      synth.triggerAttackRelease(note, '16n', time)\n    },\n    [\n      'D#5',\n      'G4',\n      'C5',\n      'G4',\n      'D#5',\n      'G4',\n      'C5',\n      'G4',\n      'C5',\n      'D#5',\n      'G4',\n      'C5',\n      'D#5',\n      'G4'\n    ],\n    '8n'\n  )\n  return seq\n}\n\nfunction seqdrum(membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      membraneSynth.triggerAttackRelease(note, '10hz', time)\n    },\n    [\n      'G0',\n      null,\n      null,\n      'G0',\n      null,\n      null,\n      null,\n      'G0',\n      null,\n      null,\n      null,\n      null,\n      null,\n      'G0',\n      'G0',\n      'G0'\n    ],\n    '16n'\n  )\n  // membraneSynth.connect(convolver)\n  return seq\n\n  // Tone.Transport.start ();\n}\n\nfunction seqSnare(noiseSynth, metalSynth, membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      metalSynth.frequency.setValueAtTime(note, time)\n      metalSynth.triggerAttack(time, Math.random() * 0.5 + 0.5)\n      noiseSynth.triggerAttackRelease('16n', time, 1)\n      membraneSynth.triggerAttackRelease('E1', '16n', time, 1)\n    },\n    [\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      90,\n      null,\n      null,\n      null,\n      null,\n      null,\n      90,\n      null,\n      10,\n      null\n    ],\n    '16n'\n  )\n  return seq\n\n  Tone.Master.volume = 10\n}\n\nfunction seqPerc(membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      membraneSynth.triggerAttackRelease(note, '10hz', time)\n    },\n    ['Eb4', 'A4', 'Bb4', 'Eb4', 'A4'],\n    '2n'\n  )\n  return seq\n\n  // Tone.Transport.start ();\n}\n\nvar convolver = new Tone.Convolver(\n  'https://s3-us-west-2.amazonaws.com/s.cdpn.io/132550/factory.hall.wav'\n).toMaster()\n\nfunction seqSnare2(noiseSynth, metalSynth, membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      metalSynth.frequency.setValueAtTime(note, time)\n      metalSynth.triggerAttack(time, Math.random() * 0.5 + 0.5)\n      noiseSynth.triggerAttackRelease('2n', time, 1)\n      membraneSynth.triggerAttackRelease('A5', '4n', time, 1)\n    },\n    [\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      10,\n      null,\n      null,\n      null,\n      null,\n      null,\n      10,\n      null,\n      70,\n      70\n    ],\n    '16n'\n  )\n  return seq\n  volume: 14\n  // Tone.Master.volume = 10\n}\n\nexport { seq1, seq2, seqdrum, seqSnare, seqPerc, seqSnare2 }\n"]},"metadata":{},"sourceType":"module"}