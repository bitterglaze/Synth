{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/effects/AutoFilter.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\nimport ButtonSet from '../controls/ButtonSet';\n\nvar AutoFilter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoFilter, _React$Component);\n\n  function AutoFilter(props) {\n    _classCallCheck(this, AutoFilter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AutoFilter).call(this, props));\n  }\n\n  _createClass(AutoFilter, [{\n    key: \"render\",\n    value: function render() {\n      var typeSet = ['sine', 'square', 'triangle', 'sawtooth'];\n      var classes = classnames({\n        sawtooth: typeSet == '.sawtooth',\n        sine: typeSet == '.sine',\n        triangle: typeSet == '.triangle',\n        square: typeSet == '.square'\n      }); // let name = 'bitCrusher'\n\n      var _this$props = this.props,\n          name = _this$props.name,\n          effect = _this$props.effect,\n          wet = _this$props.wet,\n          on = _this$props.on,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeEffectValue = _this$props.changeEffectValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Pannel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controlsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controlRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"AutoFilter\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"EffectCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(\"div\", {\n        className: \"EffectControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SliderStick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: name,\n        property: \"wet\",\n        min: \"0\",\n        max: \"1\",\n        value: wet,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"EffectCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Depth\"), React.createElement(\"div\", {\n        className: \"EffectControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SliderStick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: name,\n        min: \"-3\",\n        max: \"3\",\n        value: effect.depth,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"EffectCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"div\", {\n        className: \"EffectControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ButtonSet, {\n        typeSet: '',\n        className: classes,\n        property: \"type\",\n        set: typeSet,\n        value: effect.type,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return AutoFilter;\n}(React.Component);\n\nexport { AutoFilter as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/effects/AutoFilter.jsx"],"names":["classnames","React","PlaySwitch","ToggleSwitch","Slider","Knob","ButtonSet","AutoFilter","props","typeSet","classes","sawtooth","sine","triangle","square","name","effect","wet","on","toggleEffect","changeEffectWetValue","changeEffectValue","depth","type","Component"],"mappings":"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","sourcesContent":["import classnames from 'classnames'\nimport React from 'react'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\nimport ButtonSet from '../controls/ButtonSet'\n\nexport default class AutoFilter extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const typeSet = ['sine', 'square', 'triangle', 'sawtooth']\n\n    const classes = classnames({\n      sawtooth: typeSet == '.sawtooth',\n      sine: typeSet == '.sine',\n      triangle: typeSet == '.triangle',\n      square: typeSet == '.square'\n    })\n\n    // let name = 'bitCrusher'\n    const {\n      name,\n      effect,\n      wet,\n      on,\n      toggleEffect,\n      changeEffectWetValue,\n      changeEffectValue\n    } = this.props\n\n    return (\n      <div>\n        <div className=\"Pannel\">\n          <div className=\"controlsContainer\">\n            <div className=\"controlRow\">\n              <ToggleSwitch\n                value=\"AutoFilter\"\n                current={on}\n                handleClick={toggleEffect}\n              />\n              <div className=\"EffectCover\">\n                <h2>Wet</h2>\n                <div className=\"EffectControl\">\n                  <div className=\"SliderStick\"></div>\n                  <Slider\n                    name={name}\n                    property=\"wet\"\n                    min=\"0\"\n                    max=\"1\"\n                    value={wet}\n                    handleValueChange={changeEffectWetValue}\n                  />\n                </div>\n              </div>\n              <div className=\"EffectCover\">\n                <h2>Depth</h2>\n                <div className=\"EffectControl\">\n                  <div className=\"SliderStick\"></div>\n                  <Slider\n                    name={name}\n                    min=\"-3\"\n                    max=\"3\"\n                    value={effect.depth}\n                    handleValueChange={changeEffectValue}\n                  />\n                </div>\n              </div>\n              <div className=\"EffectCover\">\n                <h2>Type</h2>\n                <div className=\"EffectControl\">\n                  <ButtonSet\n                    typeSet={''}\n                    className={classes}\n                    property=\"type\"\n                    set={typeSet}\n                    value={effect.type}\n                    handleValueChange={changeEffectValue}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}