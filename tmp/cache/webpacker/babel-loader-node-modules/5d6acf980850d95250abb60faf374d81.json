{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/Button.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport classnames from 'classnames';\nimport React from 'react';\n\nvar Avatar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Avatar, _React$Component);\n\n  function Avatar(props) {\n    var _this;\n\n    _classCallCheck(this, Avatar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Avatar).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Avatar, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.props.handleClick('button');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          property = _this$props.property,\n          option = _this$props.option,\n          current = _this$props.current,\n          handleClick = _this$props.handleClick;\n      var classes = classnames({\n        Button: true,\n        on: option == current\n      });\n      return React.createElement(\"div\", {\n        className: classes,\n        onClick: function onClick() {\n          return handleClick(name, property, option);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, option);\n    }\n  }]);\n\n  return Avatar;\n}(React.Component);\n\nexport { Avatar as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/Button.jsx"],"names":["classnames","React","Avatar","props","handleClick","bind","name","property","option","current","classes","Button","on","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAFiB;AAGlB;;;;kCAEa;AACZ,WAAKF,KAAL,CAAWC,WAAX,CAAuB,QAAvB;AACD;;;6BAEQ;AAAA,wBACkD,KAAKD,KADvD;AAAA,UACCG,IADD,eACCA,IADD;AAAA,UACOC,QADP,eACOA,QADP;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UACyBC,OADzB,eACyBA,OADzB;AAAA,UACkCL,WADlC,eACkCA,WADlC;AAGP,UAAMM,OAAO,GAAGV,UAAU,CAAC;AACzBW,QAAAA,MAAM,EAAE,IADiB;AAEzBC,QAAAA,EAAE,EAAEJ,MAAM,IAAIC;AAFW,OAAD,CAA1B;AAKA,aACE;AACE,QAAA,SAAS,EAAEC,OADb;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMN,WAAW,CAACE,IAAD,EAAOC,QAAP,EAAiBC,MAAjB,CAAjB;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGA,MAJH,CADF;AAQD;;;;EA1BiCP,KAAK,CAACY,S;;SAArBX,M","sourcesContent":["import classnames from 'classnames'\nimport React from 'react'\n\nexport default class Avatar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.props.handleClick('button')\n  }\n\n  render() {\n    const { name, property, option, current, handleClick } = this.props\n\n    const classes = classnames({\n      Button: true,\n      on: option == current\n    })\n\n    return (\n      <div\n        className={classes}\n        onClick={() => handleClick(name, property, option)}\n      >\n        {option}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}