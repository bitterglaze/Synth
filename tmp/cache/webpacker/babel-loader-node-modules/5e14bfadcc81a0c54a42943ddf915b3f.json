{"ast":null,"code":"import Tone from 'tone'; // SYNTH\n\nvar polySynth = new Tone.PolySynth(); // let synth = new Tone.MetalSynth()\n// {\n// //   oscillator: {\n// //     type: 'sine'\n// //   },\n// //   envelope: {\n// //     attack: 0.005,\n// //     decay: 0.5,\n// //     sustain: 0.3,\n// //     release: 1\n// //   }\n// // }\n\nfunction toneSynth() {\n  return new Tone.Synth({\n    oscillator: {\n      type: 'triangle'\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  });\n} //   {\n//   harmonicity: 10,\n//   modulationIndex: 20,\n//   detune: 2,\n//   oscillator: {\n//     type: 'sine'\n//   }\n// }\n\n\nvar synth1 = new Tone.Synth();\nvar synth2 = new Tone.NoiseSynth();\nvar synth3 = new Tone.MetalSynth();\nvar synth4 = new Tone.Synth();\nexport { polySynth, toneSynth, synth1, synth2, synth3, synth4 };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/tunes/synths.js"],"names":["Tone","polySynth","PolySynth","toneSynth","Synth","oscillator","type","envelope","attack","decay","sustain","release","synth1","synth2","NoiseSynth","synth3","MetalSynth","synth4"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CACA;;AACA,IAAIC,SAAS,GAAG,IAAID,IAAI,CAACE,SAAT,EAAhB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAIH,IAAI,CAACI,KAAT,CAAe;AACpBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI,KADQ;AAIpBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,OAAO,EAAE,GAHD;AAIRC,MAAAA,OAAO,EAAE;AAJD;AAJU,GAAf,CAAP;AAWD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,MAAM,GAAG,IAAIZ,IAAI,CAACI,KAAT,EAAb;AACA,IAAIS,MAAM,GAAG,IAAIb,IAAI,CAACc,UAAT,EAAb;AACA,IAAIC,MAAM,GAAG,IAAIf,IAAI,CAACgB,UAAT,EAAb;AACA,IAAIC,MAAM,GAAG,IAAIjB,IAAI,CAACI,KAAT,EAAb;AAEA,SAASH,SAAT,EAAoBE,SAApB,EAA+BS,MAA/B,EAAuCC,MAAvC,EAA+CE,MAA/C,EAAuDE,MAAvD","sourcesContent":["import Tone from 'tone'\n// SYNTH\nlet polySynth = new Tone.PolySynth()\n// let synth = new Tone.MetalSynth()\n\n// {\n// //   oscillator: {\n// //     type: 'sine'\n// //   },\n// //   envelope: {\n// //     attack: 0.005,\n// //     decay: 0.5,\n// //     sustain: 0.3,\n// //     release: 1\n// //   }\n// // }\n\nfunction toneSynth() {\n  return new Tone.Synth({\n    oscillator: {\n      type: 'triangle'\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  })\n}\n//   {\n//   harmonicity: 10,\n//   modulationIndex: 20,\n//   detune: 2,\n//   oscillator: {\n//     type: 'sine'\n//   }\n// }\n\nlet synth1 = new Tone.Synth()\nlet synth2 = new Tone.NoiseSynth()\nlet synth3 = new Tone.MetalSynth()\nlet synth4 = new Tone.Synth()\n\nexport { polySynth, toneSynth, synth1, synth2, synth3, synth4 }\n"]},"metadata":{},"sourceType":"module"}