{"ast":null,"code":"import Tone from 'tone';\n\nfunction seq1(synth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note); //straight quater notes\n\n    synth.triggerAttackRelease(note, '4t', time);\n  }, ['G3', 'Cb4', 'D4', 'G4', 'D4', 'Cb4', 'G3', 'Cb4'], '32n');\n  return seq;\n}\n\nfunction seq2(synth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note); //straight quater notes\n\n    synth.triggerAttackRelease(note, '16n', time);\n  }, ['C4', 'Eb4', 'D4', 'Gb4', 'Bbb4'], '2n');\n  return seq;\n}\n\nfunction seqdrum(membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    membraneSynth.triggerAttackRelease(note, '10hz', time);\n  }, ['C0', null, null, 'C0', null, null, null, 'C0', null, null, null, null, null, 'C0', null, null], '16n');\n  return seq; // Tone.Transport.start ();\n}\n\nfunction seqSnare(noizeSynth, metalSynth, membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    noiseSynth.frequency.setValueAtTime(note, time);\n    noiseSynth.triggerAttack(time, Math.random() * 0.5 + 0.5);\n    metalSynth.triggerAttackRelease('16n', time, 1);\n    membraneSynth.triggerAttackRelease('E1', '16n', time, 1);\n  }, [null, null, null, null, null, null, 51, null, null, null, null, null, 51, null, null, null], '16n');\n  return seq; // Tone.Transport.start ();\n}\n\nfunction seqPerc(membraneSynth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note);\n    membraneSynth.triggerAttackRelease(note, '10hz', time);\n  }, ['G5', [null, 'G5'], null, 'Bb5', 'C4'], '4n');\n  return seq; // Tone.Transport.start ();\n} // console.clear()\n// function seq1(synth) {\n//   var started = false\n//   document.documentElement.addEventListener('mousedown', () => {\n//     if (started) return\n//     started = true\n//\n//     const $inputs = document.querySelectorAll('input'),\n//       chords = ['A0 C1 E1', 'F0 A0 C1', 'G0 B0 D1', 'D0 F0 A0', 'E0 G0 B0'].map(\n//         formatChords\n//       )\n//     console.log(chords)\n//     var chordIdx = 0,\n//       step = 0\n//\n//     Array.from($inputs).forEach($input => {\n//       $input.addEventListener('change', () => {\n//         if ($input.checked) handleChord($input.value)\n//       })\n//     })\n//\n//     function handleChord(valueString) {\n//       chordIdx = parseInt(valueString) - 1\n//     }\n//\n//     Tone.Transport.scheduleRepeat(onRepeat, '16n')\n//\n//     function onRepeat(time) {\n//       let chord = chords[chordIdx],\n//         note = chord[step % chord.length]\n//       synth.triggerAttackRelease(note, '16n', time)\n//       step++\n//     }\n//\n//     // DOWN THE LINE THIS WILL MAKE THINGS EASIER\n//     function formatChords(chordString) {\n//       let chord = chordString.split(' ')\n//       let arr = []\n//       for (let i = 0; i < 2; i++) {\n//         for (let j = 0; j < chord.length; j++) {\n//           let noteOct = chord[j].split(''),\n//             note = noteOct[0]\n//           let oct = noteOct[1] === '0' ? i + 4 : i + 5\n//           note += oct\n//           arr.push(note)\n//         }\n//       }\n//       return arr\n//     }\n//   })\n// }\n\n\nexport { seq1, seq2, seqdrum, seqSnare, seqPerc };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/tunes/sequences.js"],"names":["Tone","seq1","synth","seq","Sequence","time","note","console","log","triggerAttackRelease","seq2","seqdrum","membraneSynth","seqSnare","noizeSynth","metalSynth","noiseSynth","frequency","setValueAtTime","triggerAttack","Math","random","seqPerc"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n\nfunction seq1(synth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      //straight quater notes\n      synth.triggerAttackRelease(note, '4t', time)\n    },\n    ['G3', 'Cb4', 'D4', 'G4', 'D4', 'Cb4', 'G3', 'Cb4'],\n    '32n'\n  )\n  return seq\n}\n\nfunction seq2(synth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      //straight quater notes\n      synth.triggerAttackRelease(note, '16n', time)\n    },\n    ['C4', 'Eb4', 'D4', 'Gb4', 'Bbb4'],\n    '2n'\n  )\n  return seq\n}\n\nfunction seqdrum(membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      membraneSynth.triggerAttackRelease(note, '10hz', time)\n    },\n    [\n      'C0',\n      null,\n      null,\n      'C0',\n      null,\n      null,\n      null,\n      'C0',\n      null,\n      null,\n      null,\n      null,\n      null,\n      'C0',\n      null,\n      null\n    ],\n    '16n'\n  )\n  return seq\n\n  // Tone.Transport.start ();\n}\n\nfunction seqSnare(noizeSynth, metalSynth, membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      noiseSynth.frequency.setValueAtTime(note, time)\n      noiseSynth.triggerAttack(time, Math.random() * 0.5 + 0.5)\n      metalSynth.triggerAttackRelease('16n', time, 1)\n      membraneSynth.triggerAttackRelease('E1', '16n', time, 1)\n    },\n    [\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      51,\n      null,\n      null,\n      null,\n      null,\n      null,\n      51,\n      null,\n      null,\n      null\n    ],\n    '16n'\n  )\n  return seq\n\n  // Tone.Transport.start ();\n}\n\nfunction seqPerc(membraneSynth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      membraneSynth.triggerAttackRelease(note, '10hz', time)\n    },\n    ['G5', [null, 'G5'], null, 'Bb5', 'C4'],\n    '4n'\n  )\n  return seq\n\n  // Tone.Transport.start ();\n}\n\n// console.clear()\n// function seq1(synth) {\n//   var started = false\n//   document.documentElement.addEventListener('mousedown', () => {\n//     if (started) return\n//     started = true\n//\n//     const $inputs = document.querySelectorAll('input'),\n//       chords = ['A0 C1 E1', 'F0 A0 C1', 'G0 B0 D1', 'D0 F0 A0', 'E0 G0 B0'].map(\n//         formatChords\n//       )\n//     console.log(chords)\n//     var chordIdx = 0,\n//       step = 0\n//\n//     Array.from($inputs).forEach($input => {\n//       $input.addEventListener('change', () => {\n//         if ($input.checked) handleChord($input.value)\n//       })\n//     })\n//\n//     function handleChord(valueString) {\n//       chordIdx = parseInt(valueString) - 1\n//     }\n//\n//     Tone.Transport.scheduleRepeat(onRepeat, '16n')\n//\n//     function onRepeat(time) {\n//       let chord = chords[chordIdx],\n//         note = chord[step % chord.length]\n//       synth.triggerAttackRelease(note, '16n', time)\n//       step++\n//     }\n//\n//     // DOWN THE LINE THIS WILL MAKE THINGS EASIER\n//     function formatChords(chordString) {\n//       let chord = chordString.split(' ')\n//       let arr = []\n//       for (let i = 0; i < 2; i++) {\n//         for (let j = 0; j < chord.length; j++) {\n//           let noteOct = chord[j].split(''),\n//             note = noteOct[0]\n//           let oct = noteOct[1] === '0' ? i + 4 : i + 5\n//           note += oct\n//           arr.push(note)\n//         }\n//       }\n//       return arr\n//     }\n//   })\n// }\n\nexport { seq1, seq2, seqdrum, seqSnare, seqPerc }\n"]},"metadata":{},"sourceType":"module"}