{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/effects/BitCrusher.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\n\nvar BitCrusher =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BitCrusher, _React$Component);\n\n  function BitCrusher(props) {\n    _classCallCheck(this, BitCrusher);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BitCrusher).call(this, props));\n  }\n\n  _createClass(BitCrusher, [{\n    key: \"render\",\n    value: function render() {\n      // let name = 'bitCrusher'\n      var _this$props = this.props,\n          name = _this$props.name,\n          effect = _this$props.effect,\n          wet = _this$props.wet,\n          on = _this$props.on,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeEffectValue = _this$props.changeEffectValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Pannel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controlsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"BitCrusher\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"EffectCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(\"div\", {\n        className: \"EffectControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SliderStick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: name,\n        property: \"wet\",\n        min: \"0\",\n        max: \"1\",\n        value: wet,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"EffectCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Bits\"), React.createElement(\"div\", {\n        className: \"EffectControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SliderStick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: name,\n        min: \"-3\",\n        max: \"3\",\n        value: effect.bits,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return BitCrusher;\n}(React.Component);\n\nexport { BitCrusher as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/effects/BitCrusher.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","BitCrusher","props","name","effect","wet","on","toggleEffect","changeEffectWetValue","changeEffectValue","bits","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mFACXA,KADW;AAElB;;;;6BAEQ;AACP;AADO,wBAUH,KAAKA,KAVF;AAAA,UAGLC,IAHK,eAGLA,IAHK;AAAA,UAILC,MAJK,eAILA,MAJK;AAAA,UAKLC,GALK,eAKLA,GALK;AAAA,UAMLC,EANK,eAMLA,EANK;AAAA,UAOLC,YAPK,eAOLA,YAPK;AAAA,UAQLC,oBARK,eAQLA,oBARK;AAAA,UASLC,iBATK,eASLA,iBATK;AAYP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,OAAO,EAAEH,EAFX;AAGE,QAAA,WAAW,EAAEC,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEJ,IADR;AAEE,QAAA,QAAQ,EAAC,KAFX;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,GAAG,EAAC,GAJN;AAKE,QAAA,KAAK,EAAEE,GALT;AAME,QAAA,iBAAiB,EAAEG,oBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CANF,EAoBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,GAAG,EAAC,IAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACM,IAJhB;AAKE,QAAA,iBAAiB,EAAED,iBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CApBF,CADF,CADF,CADF;AAwCD;;;;EAzDqCb,KAAK,CAACe,S;;SAAzBV,U","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\n\nexport default class BitCrusher extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    // let name = 'bitCrusher'\n    const {\n      name,\n      effect,\n      wet,\n      on,\n      toggleEffect,\n      changeEffectWetValue,\n      changeEffectValue\n    } = this.props\n\n    return (\n      <div>\n        <div className=\"Pannel\">\n          <div className=\"controlsContainer\">\n            <ToggleSwitch\n              value=\"BitCrusher\"\n              current={on}\n              handleClick={toggleEffect}\n            />\n            <div className=\"EffectCover\">\n              <h5>Wet</h5>\n              <div className=\"EffectControl\">\n                <div className=\"SliderStick\"></div>\n                <Slider\n                  name={name}\n                  property=\"wet\"\n                  min=\"0\"\n                  max=\"1\"\n                  value={wet}\n                  handleValueChange={changeEffectWetValue}\n                />\n              </div>\n            </div>\n            <div className=\"EffectCover\">\n              <h5>Bits</h5>\n              <div className=\"EffectControl\">\n                <div className=\"SliderStick\"></div>\n                <Slider\n                  name={name}\n                  min=\"-3\"\n                  max=\"3\"\n                  value={effect.bits}\n                  handleValueChange={changeEffectValue}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}