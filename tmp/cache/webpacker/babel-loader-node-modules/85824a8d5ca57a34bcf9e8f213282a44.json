{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Thereminvox.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\n\nvar Thereminvox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thereminvox, _React$Component);\n\n  function Thereminvox(props) {\n    var _this;\n\n    _classCallCheck(this, Thereminvox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Thereminvox).call(this, props));\n    var audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    var oscillator = audioContext.createOscillator();\n    _this.state = {\n      audioContext: audioContext,\n      oscillator: oscillator,\n      playing: false,\n      x: 0,\n      y: 0\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_assertThisInitialized(_this));\n    _this.handleStart = _this.handleStart.bind(_assertThisInitialized(_this));\n    _this.handleStop = _this.handleStop.bind(_assertThisInitialized(_this));\n    _this.handleStartOrStopClick = _this.handleStartOrStopClick.bind(_assertThisInitialized(_this));\n    _this.changeFrequency = _this.changeFrequency.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Thereminvox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('mousemove', this.handleMouseMove);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(e) {\n      this.setState({\n        x: e.clientX,\n        y: e.clientY\n      });\n      this.changeFrequency();\n    }\n  }, {\n    key: \"handleStartOrStopClick\",\n    value: function handleStartOrStopClick() {\n      var playing = this.state.playing;\n\n      if (playing) {\n        this.handleStop();\n      } else {\n        this.handleStart();\n      }\n    }\n  }, {\n    key: \"handleStart\",\n    value: function handleStart() {\n      var _this$state = this.state,\n          audioContext = _this$state.audioContext,\n          oscillator = _this$state.oscillator,\n          x = _this$state.x,\n          y = _this$state.y;\n      oscillator = audioContext.createOscillator();\n      oscillator.type = 'square';\n      oscillator.frequency.setValueAtTime(x, audioContext.currentTime);\n      oscillator.connect(audioContext.destination);\n      oscillator.start();\n      this.setState({\n        oscillator: oscillator,\n        playing: true\n      });\n    }\n  }, {\n    key: \"handleStop\",\n    value: function handleStop() {\n      var oscillator = this.state.oscillator;\n      oscillator.stop();\n      this.setState({\n        oscillator: oscillator,\n        playing: false\n      });\n    }\n  }, {\n    key: \"changeFrequency\",\n    value: function changeFrequency() {\n      var _this$state2 = this.state,\n          audioContext = _this$state2.audioContext,\n          oscillator = _this$state2.oscillator,\n          x = _this$state2.x,\n          y = _this$state2.y;\n      oscillator.frequency.setValueAtTime(x, audioContext.currentTime);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playing = this.state.playing;\n      var button = 'Start';\n\n      if (playing) {\n        button = 'Stop';\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleStartOrStopClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, button));\n    }\n  }]);\n\n  return Thereminvox;\n}(React.Component);\n\nexport { Thereminvox as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Thereminvox.jsx"],"names":["React","Thereminvox","props","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","state","playing","x","y","handleMouseMove","bind","handleStart","handleStop","handleStartOrStopClick","changeFrequency","document","addEventListener","e","setState","clientX","clientY","type","frequency","setValueAtTime","currentTime","connect","destination","start","stop","button","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nexport default class Thereminvox extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const audioContext = new (window.AudioContext ||\n      window.webkitAudioContext)()\n    let oscillator = audioContext.createOscillator()\n\n    this.state = {\n      audioContext: audioContext,\n      oscillator: oscillator,\n      playing: false,\n      x: 0,\n      y: 0\n    }\n\n    this.handleMouseMove = this.handleMouseMove.bind(this)\n    this.handleStart = this.handleStart.bind(this)\n    this.handleStop = this.handleStop.bind(this)\n    this.handleStartOrStopClick = this.handleStartOrStopClick.bind(this)\n    this.changeFrequency = this.changeFrequency.bind(this)\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleMouseMove)\n  }\n\n  handleMouseMove(e) {\n    this.setState({\n      x: e.clientX,\n      y: e.clientY\n    })\n\n    this.changeFrequency()\n  }\n\n  handleStartOrStopClick() {\n    let { playing } = this.state\n\n    if (playing) {\n      this.handleStop()\n    } else {\n      this.handleStart()\n    }\n  }\n\n  handleStart() {\n    let { audioContext, oscillator, x, y } = this.state\n\n    oscillator = audioContext.createOscillator()\n    oscillator.type = 'square'\n    oscillator.frequency.setValueAtTime(x, audioContext.currentTime)\n    oscillator.connect(audioContext.destination)\n    oscillator.start()\n\n    this.setState({\n      oscillator: oscillator,\n      playing: true\n    })\n  }\n\n  handleStop() {\n    let { oscillator } = this.state\n    oscillator.stop()\n\n    this.setState({\n      oscillator: oscillator,\n      playing: false\n    })\n  }\n\n  changeFrequency() {\n    let { audioContext, oscillator, x, y } = this.state\n    oscillator.frequency.setValueAtTime(x, audioContext.currentTime)\n  }\n\n  render() {\n    const { playing } = this.state\n    let button = 'Start'\n\n    if (playing) {\n      button = 'Stop'\n    }\n\n    return (\n      <div>\n        <div onClick={this.handleStartOrStopClick}>{button}</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}