{"ast":null,"code":"import Tone from 'tone';\n\nfunction seq1(synth) {\n  var seq = new Tone.Sequence(function (time, note) {\n    console.log(time, note); //straight quater notes\n\n    synth.triggerAttackRelease(note, '10hz', time);\n  }, ['A5 C5 E5', 'F5 A5 C5', 'G5 B5 D5', 'D5 F5 A5', 'E5 G5 B5']);\n  return seq;\n} // function seq2(synth) {\n//   let seq = new Tone.Sequence(\n//     function(time, note) {\n//       console.log(time, note)\n//       //straight quater notes\n//       synth.triggerAttackRelease(note, '10hz', time)\n//     },\n//     ['A0 C1 E1', 'F0 A0 C1', 'G0 B0 D1', 'D0 F0 A0', 'E0 G0 B0']\n//   )\n//   return seq\n// }\n// console.clear()\n//\n// // UPDATE: there is a problem in chrome with starting audio context\n// //  before a user gesture. This fixes it.\n//\n//   var started = false\n//   document.documentElement.addEventListener('mousedown', () => {\n//     if (started) return\n//     started = true\n//\n//     const $inputs = document.querySelectorAll('input'),\n//       chords = ['A0 C1 E1', 'F0 A0 C1', 'G0 B0 D1', 'D0 F0 A0', 'E0 G0 B0'].map(\n//         formatChords\n//       )\n//     console.log(chords)\n//     var chordIdx = 0,\n//       step = 0\n//\n//     const synth = new Tone.Synth()\n//     const gain = new Tone.Gain(0.7)\n//     synth.oscillator.type = 'sine'\n//     gain.toMaster()\n//     synth.connect(gain)\n//\n//     Array.from($inputs).forEach($input => {\n//       $input.addEventListener('change', () => {\n//         if ($input.checked) handleChord($input.value)\n//       })\n//     })\n//\n//     function handleChord(valueString) {\n//       chordIdx = parseInt(valueString) - 1\n//     }\n//\n//     Tone.Transport.scheduleRepeat(onRepeat, '16n')\n//     Tone.Transport.start()\n//     Tone.Transport.bpm.value = 90\n//\n//     function onRepeat(time) {\n//       let chord = chords[chordIdx],\n//         note = chord[step % chord.length]\n//       synth.triggerAttackRelease(note, '16n', time)\n//       step++\n//     }\n//\n//     // DOWN THE LINE THIS WILL MAKE THINGS EASIER\n//     function formatChords(chordString) {\n//       let chord = chordString.split(' ')\n//       let arr = []\n//       for (let i = 0; i < 2; i++) {\n//         for (let j = 0; j < chord.length; j++) {\n//           let noteOct = chord[j].split(''),\n//             note = noteOct[0]\n//           let oct = noteOct[1] === '0' ? i + 4 : i + 5\n//           note += oct\n//           arr.push(note)\n//         }\n//       }\n//       return arr\n//     }\n//   })\n\n\nexport { seq1 };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/tunes/sequences.js"],"names":["Tone","seq1","synth","seq","Sequence","time","note","console","log","triggerAttackRelease"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAIC,GAAG,GAAG,IAAIH,IAAI,CAACI,QAAT,CACR,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,IAAlB,EADmB,CAEnB;;AACAJ,IAAAA,KAAK,CAACO,oBAAN,CAA2BH,IAA3B,EAAiC,MAAjC,EAAyCD,IAAzC;AACD,GALO,EAMR,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,CANQ,CAAV;AAQA,SAAOF,GAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASF,IAAT","sourcesContent":["import Tone from 'tone'\n\nfunction seq1(synth) {\n  let seq = new Tone.Sequence(\n    function(time, note) {\n      console.log(time, note)\n      //straight quater notes\n      synth.triggerAttackRelease(note, '10hz', time)\n    },\n    ['A5 C5 E5', 'F5 A5 C5', 'G5 B5 D5', 'D5 F5 A5', 'E5 G5 B5']\n  )\n  return seq\n}\n\n// function seq2(synth) {\n//   let seq = new Tone.Sequence(\n//     function(time, note) {\n//       console.log(time, note)\n//       //straight quater notes\n//       synth.triggerAttackRelease(note, '10hz', time)\n//     },\n//     ['A0 C1 E1', 'F0 A0 C1', 'G0 B0 D1', 'D0 F0 A0', 'E0 G0 B0']\n//   )\n//   return seq\n// }\n\n// console.clear()\n//\n// // UPDATE: there is a problem in chrome with starting audio context\n// //  before a user gesture. This fixes it.\n//\n//   var started = false\n//   document.documentElement.addEventListener('mousedown', () => {\n//     if (started) return\n//     started = true\n//\n//     const $inputs = document.querySelectorAll('input'),\n//       chords = ['A0 C1 E1', 'F0 A0 C1', 'G0 B0 D1', 'D0 F0 A0', 'E0 G0 B0'].map(\n//         formatChords\n//       )\n//     console.log(chords)\n//     var chordIdx = 0,\n//       step = 0\n//\n//     const synth = new Tone.Synth()\n//     const gain = new Tone.Gain(0.7)\n//     synth.oscillator.type = 'sine'\n//     gain.toMaster()\n//     synth.connect(gain)\n//\n//     Array.from($inputs).forEach($input => {\n//       $input.addEventListener('change', () => {\n//         if ($input.checked) handleChord($input.value)\n//       })\n//     })\n//\n//     function handleChord(valueString) {\n//       chordIdx = parseInt(valueString) - 1\n//     }\n//\n//     Tone.Transport.scheduleRepeat(onRepeat, '16n')\n//     Tone.Transport.start()\n//     Tone.Transport.bpm.value = 90\n//\n//     function onRepeat(time) {\n//       let chord = chords[chordIdx],\n//         note = chord[step % chord.length]\n//       synth.triggerAttackRelease(note, '16n', time)\n//       step++\n//     }\n//\n//     // DOWN THE LINE THIS WILL MAKE THINGS EASIER\n//     function formatChords(chordString) {\n//       let chord = chordString.split(' ')\n//       let arr = []\n//       for (let i = 0; i < 2; i++) {\n//         for (let j = 0; j < chord.length; j++) {\n//           let noteOct = chord[j].split(''),\n//             note = noteOct[0]\n//           let oct = noteOct[1] === '0' ? i + 4 : i + 5\n//           note += oct\n//           arr.push(note)\n//         }\n//       }\n//       return arr\n//     }\n//   })\n\nexport { seq1 }\n"]},"metadata":{},"sourceType":"module"}