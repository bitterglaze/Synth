{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../tunes/effects';\nimport * as synths from '../tunes/synths';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion'; // import FeedbackDelay from '../components/effects/FeedbackDelay'\n\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport ButtonSet from '../components/controls/ButtonSet';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    fmsynth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master); // Loops\n    // let loop1 = new Tone.Loop(function(time) {\n    //   synth.triggerAttackRelease('C6', '32n', time)\n    // }, '8n')\n\n    var loop1 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease(['C6', 'C3', 'F4', 'A2', 'C1', 'F1'], '4n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      fmsynth.triggerAttackRelease('E1', '4n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('F1', '16n', time);\n    }, '16n'); //\n    //play the loop between 0-2m on the transport\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      } //\n      // synth2: { synth2: synth2, on: false }\n\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'getRandomArbitrary', 'generateRandom', 'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeDistortionValue', // 'changeFeedbackDelayValue',\n    'changeChebyshevValue', 'changePhaserValue', 'changePhaserSecValue', // 'changePingPongDelayValue',\n    'changeBitCrusherValue', 'changeAutoPannerValue', 'changePingPongDelayValue', 'handleValueChange');\n\n    Tone.Transport.bpm.value = 100;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"handleValueChange\",\n    value: function handleValueChange(name, property, value) {\n      var changeSynthValue = this.props.changeSynthValue;\n      changeSynthValue(name, property, value);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      console.log(this.state.autoPanner);\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    } // changeFeedbackDelayValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.feedbackDelay\n    //\n    //   effect.maxDelay = value\n    //\n    //   this.setState({\n    //     feedbackDelay: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"changeChebyshevValue\",\n    value: function changeChebyshevValue(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.order = Math.round(value);\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserValue\",\n    value: function changePhaserValue(effectName, value) {\n      var _this$state$phaser = this.state.phaser,\n          effect = _this$state$phaser.effect,\n          wet = _this$state$phaser.wet,\n          on = _this$state$phaser.on;\n      effect.octaves = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserSecValue\",\n    value: function changePhaserSecValue(effectName, value) {\n      var _this$state$phaser2 = this.state.phaser,\n          effect = _this$state$phaser2.effect,\n          wet = _this$state$phaser2.wet,\n          on = _this$state$phaser2.on;\n      effect.frequency.value = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePingPongDelayValue\",\n    value: function changePingPongDelayValue(effectName, value) {\n      var _this$state$pingPongD = this.state.pingPongDelay,\n          effect = _this$state$pingPongD.effect,\n          wet = _this$state$pingPongD.wet,\n          on = _this$state$pingPongD.on;\n      effect.delayTime.value = value;\n      this.setState({\n        pingPongDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerValue\",\n    value: function changeAutoPannerValue(effectName, value) {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.frequency.value = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          fmSynth = _this$state2.fmSynth,\n          feedbackDelay = _this$state2.feedbackDelay,\n          chebyshev = _this$state2.chebyshev,\n          phaser = _this$state2.phaser,\n          autoPanner = _this$state2.autoPanner,\n          bitCrusher = _this$state2.bitCrusher,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"A\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, this.state.pingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('pingPongDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePingPongDelayValue: this.changePingPongDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chebyshev');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, this.state.phaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('phaser');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePhaserValue: this.changePhaserValue,\n        changePhaserSecValue: this.changePhaserSecValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, this.state.autoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('autoPanner');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerValue: this.changeAutoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","synths","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","ButtonSet","Synth","props","synth","chain","autoFilter","autoPanner","autoWah","bitCrusher","chebyshev","chorus","convolver","distortion","feedbackDelay","feedbackEffect","freeverb","jcReverb","phaser","pingPongDelay","pitchShift","reverb","stereoWidener","tremolo","vibrato","Master","fmsynth","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","state","lastChange","Date","now","timeout","effect","wet","on","instrument","loop","bindAll","Transport","bpm","value","start","name","property","changeSynthValue","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","setTimeout","loopName","stop","effectName","console","log","order","round","octaves","frequency","delayTime","bits","fmSynth","toggleEffect","toggleLoop","changeEffectWetValue","changePingPongDelayValue","changeChebyshevValue","changePhaserValue","changePhaserSecValue","changeBitCrusherValue","changeAutoPannerValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../tunes/effects'\nimport * as synths from '../tunes/synths'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\n// import FeedbackDelay from '../components/effects/FeedbackDelay'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport ButtonSet from '../components/controls/ButtonSet'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    fmsynth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n    // Loops\n    // let loop1 = new Tone.Loop(function(time) {\n    //   synth.triggerAttackRelease('C6', '32n', time)\n    // }, '8n')\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(\n        ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '4n',\n        time\n      )\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      fmsynth.triggerAttackRelease('E1', '4n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('F1', '16n', time)\n    }, '16n')\n    //\n\n    //play the loop between 0-2m on the transport\n\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false }\n      //\n      // synth2: { synth2: synth2, on: false }\n    }\n\n    _.bindAll(\n      this,\n      'getRandomArbitrary',\n      'generateRandom',\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      // 'changeFeedbackDelayValue',\n      'changeChebyshevValue',\n      'changePhaserValue',\n      'changePhaserSecValue',\n      // 'changePingPongDelayValue',\n      'changeBitCrusherValue',\n      'changeAutoPannerValue',\n      'changePingPongDelayValue',\n      'handleValueChange'\n    )\n\n    Tone.Transport.bpm.value = 100\n    Tone.Transport.start()\n  }\n\n  handleValueChange(name, property, value) {\n    const { changeSynthValue } = this.props\n    changeSynthValue(name, property, value)\n  }\n\n  componentDidMount() {\n    this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n    console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // changeFeedbackDelayValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.feedbackDelay\n  //\n  //   effect.maxDelay = value\n  //\n  //   this.setState({\n  //     feedbackDelay: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  changeChebyshevValue(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev\n\n    effect.order = Math.round(value)\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    effect.octaves = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserSecValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    effect.frequency.value = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePingPongDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.pingPongDelay\n\n    effect.delayTime.value = value\n\n    this.setState({\n      pingPongDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = value\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.frequency.value = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      fmSynth,\n      feedbackDelay,\n      chebyshev,\n      phaser,\n      autoPanner,\n      bitCrusher,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { toggleEffect } = this\n\n    return (\n      <div>\n        <h2>PLAY</h2>\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\" id=\"loop1\">\n            A\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop2\">\n            ToggleLoop2\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop2')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop3\">\n            ToggleLoop3\n            <PlaySwitch\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop3')\n              }}\n            />\n          </div>\n\n          <div className=\"PlaySwitchContainer\" id=\"loop4\">\n            ToggleLoop4\n            <PlaySwitch\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...this.state.distortion}\n            toggleEffect={() => toggleEffect('distortion')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <PingPongDelay\n            {...this.state.pingPongDelay}\n            toggleEffect={() => toggleEffect('pingPongDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePingPongDelayValue={this.changePingPongDelayValue}\n          />\n          <Chebyshev\n            {...this.state.chebyshev}\n            toggleEffect={() => toggleEffect('chebyshev')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevValue={this.changeChebyshevValue}\n          />\n          <Phaser\n            {...this.state.phaser}\n            toggleEffect={() => toggleEffect('phaser')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePhaserValue={this.changePhaserValue}\n            changePhaserSecValue={this.changePhaserSecValue}\n          />\n\n          <BitCrusher\n            {...this.state.bitCrusher}\n            toggleEffect={() => toggleEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n          <AutoPanner\n            {...this.state.autoPanner}\n            toggleEffect={() => toggleEffect('autoPanner')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoPannerValue={this.changeAutoPannerValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}