{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../components/tunes/effects';\nimport * as synths from '../components/tunes/synths';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion'; // import FeedbackDelay from '../components/effects/FeedbackDelay'\n\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport ButtonSet from '../components/controls/ButtonSet';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion1 = effects.distortion();\n    var distortion2 = effects.distortion();\n    synths.synth.chain(effects.autoFilter, effects.autoPanner, effects.autoWah, effects.bitCrusher, effects.chebyshev, effects.chorus, effects.convolver, distortion1, effects.feedbackDelay, effects.feedbackEffect, effects.freeverb, effects.jcReverb, effects.phaser, effects.pingPongDelay, effects.pitchShift, effects.reverb, effects.stereoWidener, effects.tremolo, effects.vibrato, Tone.Master);\n    synths.fmsynth.chain(effects.autoFilter, effects.autoPanner, effects.autoWah, effects.bitCrusher, effects.chebyshev, effects.chorus, effects.convolver, distortion2, effects.feedbackDelay, effects.feedbackEffect, effects.freeverb, effects.jcReverb, effects.phaser, effects.pingPongDelay, effects.pitchShift, effects.reverb, effects.stereoWidener, effects.tremolo, effects.vibrato, Tone.Master); // Loops\n    // let loop1 = new Tone.Loop(function(time) {\n    //   synth.triggerAttackRelease('C6', '32n', time)\n    // }, '8n')\n\n    var loop1 = new Tone.Pattern(function (time, note) {\n      synths.synth.triggerAttackRelease(['C6', 'C3', 'F4', 'A2', 'C1', 'F1'], '4n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synths.fmsynth.triggerAttackRelease('E1', '4n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      synths.synth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      synths.synth.triggerAttackRelease('F1', '16n', time);\n    }, '16n'); //\n    //play the loop between 0-2m on the transport\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n      autoFilter: {\n        effect: effects.autoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      autoPanner: {\n        effect: effects.autoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      autoWah: {\n        effect: effects.autoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      bitCrusher: {\n        effect: effects.bitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      chebyshev: {\n        effect: effects.chebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      chorus: {\n        effect: effects.chorus,\n        wet: defaultWetValue,\n        on: false\n      },\n      convolver: {\n        effect: effects.convolver,\n        wet: defaultWetValue,\n        on: false\n      },\n      distortion1: {\n        effect: distortion1,\n        wet: defaultWetValue,\n        on: false\n      },\n      distortion2: {\n        effect: distortion2,\n        wet: defaultWetValue,\n        on: false\n      },\n      feedbackDelay: {\n        effect: effects.feedbackDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      feedbackEffect: {\n        effect: effects.feedbackEffect,\n        wet: defaultWetValue,\n        on: false\n      },\n      freeverb: {\n        effect: effects.freeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      jcReverb: {\n        effect: effects.jcReverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      phaser: {\n        effect: effects.phaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      pingPongDelay: {\n        effect: effects.pingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      pitchShift: {\n        effect: effects.pitchShift,\n        wet: defaultWetValue,\n        on: false\n      },\n      reverb: {\n        effect: effects.reverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      stereoWidener: {\n        effect: effects.stereoWidener,\n        wet: defaultWetValue,\n        on: false\n      },\n      tremolo: {\n        effect: effects.tremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      vibrato: {\n        effect: effects.vibrato,\n        wet: defaultWetValue,\n        on: false\n      },\n      synth: {\n        instrument: synths.synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      } // part1: {\n      //   part: parts.part(FMSynth),\n      //   on: false\n      // }\n\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'getRandomArbitrary', 'generateRandom', 'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeDistortionValue', // 'changeFeedbackDelayValue',\n    'changeChebyshevValue', 'changePhaserValue', 'changePhaserSecValue', // 'changePingPongDelayValue',\n    'changeBitCrusherValue', 'changeAutoPannerValue', 'changePingPongDelayValue', 'changeEffectValue');\n\n    Tone.Transport.bpm.value = 100;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"handleValueChange\",\n    value: function handleValueChange(name, property, value) {\n      var changeSynthValue = this.props.changeSynthValue;\n      changeSynthValue(name, property, value);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      console.log(this.state.autoPanner);\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      console.log(effectName, effectProperty, value);\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on; // if (effectProperty == 'order') {\n      //   value = Math.round(value)\n      // }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    } // changeFeedbackDelayValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.feedbackDelay\n    //\n    //   effect.maxDelay = value\n    //\n    //   this.setState({\n    //     feedbackDelay: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"changeChebyshevValue\",\n    value: function changeChebyshevValue(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.order = Math.round(value);\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserValue\",\n    value: function changePhaserValue(effectName, value) {\n      var _this$state$phaser = this.state.phaser,\n          effect = _this$state$phaser.effect,\n          wet = _this$state$phaser.wet,\n          on = _this$state$phaser.on;\n      effect.octaves = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserSecValue\",\n    value: function changePhaserSecValue(effectName, value) {\n      var _this$state$phaser2 = this.state.phaser,\n          effect = _this$state$phaser2.effect,\n          wet = _this$state$phaser2.wet,\n          on = _this$state$phaser2.on;\n      effect.frequency.value = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePingPongDelayValue\",\n    value: function changePingPongDelayValue(effectName, value) {\n      var _this$state$pingPongD = this.state.pingPongDelay,\n          effect = _this$state$pingPongD.effect,\n          wet = _this$state$pingPongD.wet,\n          on = _this$state$pingPongD.on;\n      effect.delayTime.value = value;\n      this.setState({\n        pingPongDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerValue\",\n    value: function changeAutoPannerValue(effectName, value) {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.frequency.value = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          feedbackDelay = _this$state2.feedbackDelay,\n          chebyshev = _this$state2.chebyshev,\n          phaser = _this$state2.phaser,\n          autoPanner = _this$state2.autoPanner,\n          bitCrusher = _this$state2.bitCrusher,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"A\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion1, {\n        name: \"distortion1\",\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion1');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        changeEffectValue: this.changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      })), React.createElement(Distortion, Object.assign({}, this.state.distortion2, {\n        name: \"distortion2\",\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion2');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        changeEffectValue: this.changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, this.state.pingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('pingPongDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePingPongDelayValue: this.changePingPongDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chebyshev');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, this.state.phaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('phaser');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePhaserValue: this.changePhaserValue,\n        changePhaserSecValue: this.changePhaserSecValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, this.state.autoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('autoPanner');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerValue: this.changeAutoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","synths","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","ButtonSet","Synth","props","distortion1","distortion","distortion2","synth","chain","autoFilter","autoPanner","autoWah","bitCrusher","chebyshev","chorus","convolver","feedbackDelay","feedbackEffect","freeverb","jcReverb","phaser","pingPongDelay","pitchShift","reverb","stereoWidener","tremolo","vibrato","Master","fmsynth","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","state","lastChange","Date","now","timeout","effect","wet","defaultWetValue","on","instrument","loop","bindAll","Transport","bpm","value","start","name","property","changeSynthValue","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","setTimeout","loopName","stop","effectName","console","log","effectProperty","order","round","octaves","frequency","delayTime","bits","toggleEffect","toggleLoop","changeEffectWetValue","changeEffectValue","changePingPongDelayValue","changeChebyshevValue","changePhaserValue","changePhaserSecValue","changeBitCrusherValue","changeAutoPannerValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../components/tunes/effects'\nimport * as synths from '../components/tunes/synths'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\n// import FeedbackDelay from '../components/effects/FeedbackDelay'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport ButtonSet from '../components/controls/ButtonSet'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion1 = effects.distortion()\n    let distortion2 = effects.distortion()\n\n    synths.synth.chain(\n      effects.autoFilter,\n      effects.autoPanner,\n      effects.autoWah,\n      effects.bitCrusher,\n      effects.chebyshev,\n      effects.chorus,\n      effects.convolver,\n      distortion1,\n      effects.feedbackDelay,\n      effects.feedbackEffect,\n      effects.freeverb,\n      effects.jcReverb,\n      effects.phaser,\n      effects.pingPongDelay,\n      effects.pitchShift,\n      effects.reverb,\n      effects.stereoWidener,\n      effects.tremolo,\n      effects.vibrato,\n      Tone.Master\n    )\n\n    synths.fmsynth.chain(\n      effects.autoFilter,\n      effects.autoPanner,\n      effects.autoWah,\n      effects.bitCrusher,\n      effects.chebyshev,\n      effects.chorus,\n      effects.convolver,\n      distortion2,\n      effects.feedbackDelay,\n      effects.feedbackEffect,\n      effects.freeverb,\n      effects.jcReverb,\n      effects.phaser,\n      effects.pingPongDelay,\n      effects.pitchShift,\n      effects.reverb,\n      effects.stereoWidener,\n      effects.tremolo,\n      effects.vibrato,\n      Tone.Master\n    )\n\n    // Loops\n    // let loop1 = new Tone.Loop(function(time) {\n    //   synth.triggerAttackRelease('C6', '32n', time)\n    // }, '8n')\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      synths.synth.triggerAttackRelease(\n        ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '4n',\n        time\n      )\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synths.fmsynth.triggerAttackRelease('E1', '4n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synths.synth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synths.synth.triggerAttackRelease('F1', '16n', time)\n    }, '16n')\n    //\n\n    //play the loop between 0-2m on the transport\n\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n\n      autoFilter: {\n        effect: effects.autoFilter,\n        wet: defaultWetValue,\n        on: false\n      },\n      autoPanner: {\n        effect: effects.autoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      autoWah: {\n        effect: effects.autoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      bitCrusher: {\n        effect: effects.bitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      chebyshev: {\n        effect: effects.chebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      chorus: {\n        effect: effects.chorus,\n        wet: defaultWetValue,\n        on: false\n      },\n      convolver: {\n        effect: effects.convolver,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      distortion1: {\n        effect: distortion1,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      distortion2: {\n        effect: distortion2,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      feedbackDelay: {\n        effect: effects.feedbackDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      feedbackEffect: {\n        effect: effects.feedbackEffect,\n        wet: defaultWetValue,\n        on: false\n      },\n      freeverb: {\n        effect: effects.freeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      jcReverb: {\n        effect: effects.jcReverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      phaser: {\n        effect: effects.phaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      pingPongDelay: {\n        effect: effects.pingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      pitchShift: {\n        effect: effects.pitchShift,\n        wet: defaultWetValue,\n        on: false\n      },\n      reverb: {\n        effect: effects.reverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      stereoWidener: {\n        effect: effects.stereoWidener,\n        wet: defaultWetValue,\n        on: false\n      },\n      tremolo: {\n        effect: effects.tremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      vibrato: {\n        effect: effects.vibrato,\n        wet: defaultWetValue,\n        on: false\n      },\n      synth: {\n        instrument: synths.synth,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false }\n\n      // part1: {\n      //   part: parts.part(FMSynth),\n      //   on: false\n      // }\n    }\n\n    _.bindAll(\n      this,\n      'getRandomArbitrary',\n      'generateRandom',\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      // 'changeFeedbackDelayValue',\n      'changeChebyshevValue',\n      'changePhaserValue',\n      'changePhaserSecValue',\n      // 'changePingPongDelayValue',\n      'changeBitCrusherValue',\n      'changeAutoPannerValue',\n      'changePingPongDelayValue',\n      'changeEffectValue'\n    )\n\n    Tone.Transport.bpm.value = 100\n    Tone.Transport.start()\n  }\n\n  handleValueChange(name, property, value) {\n    const { changeSynthValue } = this.props\n    changeSynthValue(name, property, value)\n  }\n\n  componentDidMount() {\n    this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n    console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    console.log(effectName, effectProperty, value)\n    let { name, effect, wet, on } = this.state[effectName]\n\n    // if (effectProperty == 'order') {\n    //   value = Math.round(value)\n    // }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // changeFeedbackDelayValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.feedbackDelay\n  //\n  //   effect.maxDelay = value\n  //\n  //   this.setState({\n  //     feedbackDelay: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  changeChebyshevValue(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev\n\n    effect.order = Math.round(value)\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    effect.octaves = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserSecValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    effect.frequency.value = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePingPongDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.pingPongDelay\n\n    effect.delayTime.value = value\n\n    this.setState({\n      pingPongDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = value\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.frequency.value = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      feedbackDelay,\n      chebyshev,\n      phaser,\n      autoPanner,\n      bitCrusher,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { toggleEffect } = this\n\n    return (\n      <div>\n        <h2>PLAY</h2>\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\" id=\"loop1\">\n            A\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop2\">\n            ToggleLoop2\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop2')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop3\">\n            ToggleLoop3\n            <PlaySwitch\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop3')\n              }}\n            />\n          </div>\n\n          <div className=\"PlaySwitchContainer\" id=\"loop4\">\n            ToggleLoop4\n            <PlaySwitch\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...this.state.distortion1}\n            name=\"distortion1\"\n            toggleEffect={() => toggleEffect('distortion1')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n            changeEffectValue={this.changeEffectValue}\n          />\n          <Distortion\n            {...this.state.distortion2}\n            name=\"distortion2\"\n            toggleEffect={() => toggleEffect('distortion2')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n            changeEffectValue={this.changeEffectValue}\n          />\n          <PingPongDelay\n            {...this.state.pingPongDelay}\n            toggleEffect={() => toggleEffect('pingPongDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePingPongDelayValue={this.changePingPongDelayValue}\n          />\n          <Chebyshev\n            {...this.state.chebyshev}\n            toggleEffect={() => toggleEffect('chebyshev')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevValue={this.changeChebyshevValue}\n          />\n          <Phaser\n            {...this.state.phaser}\n            toggleEffect={() => toggleEffect('phaser')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePhaserValue={this.changePhaserValue}\n            changePhaserSecValue={this.changePhaserSecValue}\n          />\n\n          <BitCrusher\n            {...this.state.bitCrusher}\n            toggleEffect={() => toggleEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n          <AutoPanner\n            {...this.state.autoPanner}\n            toggleEffect={() => toggleEffect('autoPanner')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoPannerValue={this.changeAutoPannerValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}