{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // })\n\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0,\n      octaves: 1,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0; // SYNTH\n\n    var synth = new Tone.PolySynth();\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.Synth();\n    var synth3 = new Tone.Synth();\n    var synth4 = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master); // Loops\n\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('C2', '8n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '32n', time);\n    }, '32n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('A2', '1n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('D2', '4n', time);\n    }, '16n');\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'getRandomArbitrary', 'generateRandom', 'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeDistortionValue', 'changeFeedbackDelayValue', 'changeChebyshevValue', 'changePhaserValue', 'changePingPongDelayValue');\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChebyshevValue\",\n    value: function changeChebyshevValue(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.order = value;\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserValue\",\n    value: function changePhaserValue(effectName, value) {\n      var _this$state$phaser = this.state.phaser,\n          effect = _this$state$phaser.effect,\n          wet = _this$state$phaser.wet,\n          on = _this$state$phaser.on;\n      effect.order = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePingPongDelayValue\",\n    value: function changePingPongDelayValue(effectName, value) {\n      var _this$state$pingPongD = this.state.pingPongDelay,\n          effect = _this$state$pingPongD.effect,\n          wet = _this$state$pingPongD.wet,\n          on = _this$state$pingPongD.on;\n      effect.order = value;\n      this.setState({\n        pingPongDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth,\n          bitCrusher = _this$state2.bitCrusher,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: ('ToggleLoop1', loop1.on),\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }), \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }), \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }), \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chebyshev');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, this.state.phaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('phaser');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePhaserValue: this.changePhaserValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, this.state.pingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('pingPongDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePingPongDelayValue: this.changePingPongDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","Chebyshev","Phaser","PingPongDelay","Synth","props","distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","feedbackDelay","delayTime","maxDelay","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","stages","pingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","wet","value","synth","PolySynth","synth1","synth2","synth3","synth4","chain","Master","loop1","Loop","time","triggerAttackRelease","loop2","loop3","loop4","state","lastChange","Date","now","timeout","effect","on","instrument","loop","bindAll","Transport","bpm","start","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","setTimeout","loopName","stop","effectName","toggleEffect","toggleLoop","changeEffectWetValue","changeFeedbackDelayValue","changeChebyshevValue","changePhaserValue","changePingPongDelayValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    })\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0,\n      octaves: 1,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    // SYNTH\n    let synth = new Tone.PolySynth()\n\n    let synth1 = new Tone.Synth()\n    let synth2 = new Tone.Synth()\n    let synth3 = new Tone.Synth()\n    let synth4 = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    // Loops\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '32n', time)\n    }, '32n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('A2', '1n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('D2', '4n', time)\n    }, '16n')\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 100,\n\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false }\n    }\n\n    _.bindAll(\n      this,\n      'getRandomArbitrary',\n      'generateRandom',\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'changeFeedbackDelayValue',\n      'changeChebyshevValue',\n      'changePhaserValue',\n      'changePingPongDelayValue'\n    )\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  componentDidMount() {\n    this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChebyshevValue(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev\n\n    effect.order = value\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    effect.order = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePingPongDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.pingPongDelay\n\n    effect.order = value\n\n    this.setState({\n      pingPongDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      bitCrusher,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { toggleEffect } = this\n\n    return (\n      <div>\n        <div className=\"PlaysSwitchCover\">\n          <h2>PLAY</h2>\n          <PlaySwitch\n            name=\"play\"\n            value={('ToggleLoop1', loop1.on)}\n            handleToggleClick={() => {\n              this.toggleLoop('loop1')\n            }}\n          />\n          ToggleLoop2\n          <PlaySwitch\n            name=\"play\"\n            value={loop2.on}\n            handleToggleClick={() => {\n              this.toggleLoop('loop2')\n            }}\n          />\n          ToggleLoop3\n          <PlaySwitch\n            name=\"play\"\n            value={loop3.on}\n            handleToggleClick={() => {\n              this.toggleLoop('loop3')\n            }}\n          />\n          ToggleLoop4\n          <PlaySwitch\n            name=\"play\"\n            value={loop4.on}\n            handleToggleClick={() => {\n              this.toggleLoop('loop4')\n            }}\n          />\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...this.state.distortion}\n            toggleEffect={() => toggleEffect('distortion')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <FeedbackDelay\n            {...this.state.feedbackDelay}\n            toggleEffect={() => toggleEffect('feedbackDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n          />\n          <Chebyshev\n            {...this.state.chebyshev}\n            toggleEffect={() => toggleEffect('chebyshev')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevValue={this.changeChebyshevValue}\n          />\n          <Phaser\n            {...this.state.phaser}\n            toggleEffect={() => toggleEffect('phaser')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePhaserValue={this.changePhaserValue}\n          />\n          <PingPongDelay\n            {...this.state.pingPongDelay}\n            toggleEffect={() => toggleEffect('pingPongDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePingPongDelayValue={this.changePingPongDelayValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}