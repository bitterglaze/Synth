{"ast":null,"code":"import Tone from 'tone'; // SYNTH\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    // envelope: {\n    //   attack: 0.01,\n    //   attackCurve: 'linear',\n    //   decay: 0.1,\n    //   decayCurve: 'exponential',\n    //   sustain: 0.3,\n    //   release: 1,\n    //   releaseCurve: 'exponential'\n    // },\n    // oscillator: {\n    //   type: 'triangle'\n    //   // spread: 30,\n    //   // count: 3\n    // }\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  });\n}\n\nfunction tSynth() {\n  return new Tone.Synth({\n    portamento: 0.2,\n    envelope: {\n      attack: 0.1,\n      attackCurve: 'linear',\n      decay: 1.2,\n      decayCurve: 'exponential',\n      sustain: 0,\n      release: 1.2,\n      releaseCurve: 'exponential'\n    },\n    oscillator: {\n      type: 'sine',\n      partialCount: 1\n    }\n  });\n}\n\nfunction amSynth() {\n  return new Tone.AMSynth({\n    portamento: 0,\n    harmonicity: 2.4,\n    carrierEnvelope: {\n      attack: 0.2,\n      attackCurve: 'linear',\n      decay: 0.11,\n      decayCurve: 'exponental',\n      sustain: 0.3,\n      release: 2.84,\n      releaseCurve: 'exponental'\n    },\n    carrierOscillator: {\n      type: 'sawtooth'\n    },\n    modulationEnvelop: {\n      attack: 0.1,\n      attackCurve: 'linear',\n      decay: 1.17,\n      decayCurve: 'exponental',\n      sustain: 1,\n      release: 2.15,\n      releaseCurve: 'exponental'\n    },\n    modulationOscillator: {\n      type: 'triangle'\n    }\n  });\n}\n\nfunction metalSynth() {\n  return new Tone.MetalSynth({\n    harmonicity: 12,\n    modulationIndex: 21,\n    resonance: 106,\n    octaves: 4,\n    envelope: {\n      attack: 0.01,\n      attackCurve: 'linear',\n      decay: 0.04,\n      decayCurve: 'linear',\n      sustain: 0,\n      release: 0.49,\n      releaseCurve: 'exponental'\n    }\n  });\n}\n\nfunction drumSynth() {\n  return new Tone.MembraneSynth({\n    pitchDecay: 0.05,\n    octaves: 10,\n    oscillator: {\n      type: 'sine'\n    },\n    envelope: {\n      attack: 0.001,\n      decay: 0.4,\n      sustain: 0.01,\n      release: 1.4,\n      attackCurve: 'exponential'\n    }\n  });\n}\n\nexport { polySynth, tSynth, amSynth, metalSynth, drumSynth };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/tunes/synths.js"],"names":["Tone","polySynth","PolySynth","Synth","oscillator","type","count","spread","phase","fadeIn","envelope","attack","decay","sustain","release","attackCurve","tSynth","portamento","decayCurve","releaseCurve","partialCount","amSynth","AMSynth","harmonicity","carrierEnvelope","carrierOscillator","modulationEnvelop","modulationOscillator","metalSynth","MetalSynth","modulationIndex","resonance","octaves","drumSynth","MembraneSynth","pitchDecay"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n// SYNTH\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    // envelope: {\n    //   attack: 0.01,\n    //   attackCurve: 'linear',\n    //   decay: 0.1,\n    //   decayCurve: 'exponential',\n    //   sustain: 0.3,\n    //   release: 1,\n    //   releaseCurve: 'exponential'\n    // },\n    // oscillator: {\n    //   type: 'triangle'\n    //   // spread: 30,\n    //   // count: 3\n    // }\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\nfunction tSynth() {\n  return new Tone.Synth({\n    portamento: 0.2,\n    envelope: {\n      attack: 0.1,\n      attackCurve: 'linear',\n      decay: 1.2,\n      decayCurve: 'exponential',\n      sustain: 0,\n      release: 1.2,\n      releaseCurve: 'exponential'\n    },\n    oscillator: {\n      type: 'sine',\n      partialCount: 1\n    }\n  })\n}\n\nfunction amSynth() {\n  return new Tone.AMSynth({\n    portamento: 0,\n    harmonicity: 2.4,\n    carrierEnvelope: {\n      attack: 0.2,\n      attackCurve: 'linear',\n      decay: 0.11,\n      decayCurve: 'exponental',\n      sustain: 0.3,\n      release: 2.84,\n      releaseCurve: 'exponental'\n    },\n    carrierOscillator: {\n      type: 'sawtooth'\n    },\n    modulationEnvelop: {\n      attack: 0.1,\n      attackCurve: 'linear',\n      decay: 1.17,\n      decayCurve: 'exponental',\n      sustain: 1,\n      release: 2.15,\n      releaseCurve: 'exponental'\n    },\n    modulationOscillator: {\n      type: 'triangle'\n    }\n  })\n}\n\nfunction metalSynth() {\n  return new Tone.MetalSynth({\n    harmonicity: 12,\n    modulationIndex: 21,\n    resonance: 106,\n    octaves: 4,\n\n    envelope: {\n      attack: 0.01,\n      attackCurve: 'linear',\n      decay: 0.04,\n      decayCurve: 'linear',\n      sustain: 0,\n      release: 0.49,\n      releaseCurve: 'exponental'\n    }\n  })\n}\n\nfunction drumSynth() {\n  return new Tone.MembraneSynth({\n    pitchDecay: 0.05,\n    octaves: 10,\n    oscillator: {\n      type: 'sine'\n    },\n    envelope: {\n      attack: 0.001,\n      decay: 0.4,\n      sustain: 0.01,\n      release: 1.4,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\nexport { polySynth, tSynth, amSynth, metalSynth, drumSynth }\n"]},"metadata":{},"sourceType":"module"}