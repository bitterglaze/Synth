{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n////список все эффектов\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport Slider from '../components/Slider';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0; // SYNTH\n\n    var synth = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master); // Loops\n\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('C2', '8n', time);\n    }, '4n');\n    _this.state = {\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop: loop\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleSynth', 'toggleDistortion', 'changeDistortionWetValue' //'changeDistortionValue'\n    );\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleSynth\",\n    value: function toggleSynth() {\n      var _this$state = this.state,\n          synth = _this$state.synth,\n          loop = _this$state.loop;\n      var instrument = synth.instrument,\n          on = synth.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState({\n        synth: {\n          instrument: instrument,\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    } // changeDistortionWetValue(value) {\n    //   let { effect, wet, on } = this.state.distortion\n    //\n    //   effect.wet.value = on == true ? value : 0\n    //   wet = value\n    //\n    //   this.setState({\n    //     distortion: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        name: \"play\",\n        value: synth.on,\n        handleToggleClick: this.toggleSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \"Wet\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeDistortionWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"toggle Distortion\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","ToggleSwitch","Slider","Synth","props","distortion","Distortion","oversample","autoFilter","wet","value","autoPanner","autoWah","bitCrusher","chebyshev","chorus","convolver","feedbackDelay","feedbackEffect","freeverb","jcReverb","phaser","pingPongDelay","pitchShift","reverb","stereoWidener","tremolo","vibrato","synth","chain","Master","loop","Loop","time","triggerAttackRelease","state","effect","on","instrument","bindAll","stop","start","setState","Transport","bpm","toggleSynth","changeDistortionWetValue","toggleDistortion","Component"],"mappings":"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","sourcesContent":["////список все эффектов\n\nimport _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport ToggleSwitch from '../components/ToggleSwitch'\nimport Slider from '../components/Slider'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    // SYNTH\n    let synth = new Tone.Synth()\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    // Loops\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    this.state = {\n      autoFilter: { effect: autoFilter, wet: 0, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chebyshev: { effect: chebyshev, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false },\n      convolver: { effect: convolver, wet: 0, on: false },\n      distortion: { effect: distortion, wet: 0, on: false },\n      feedbackDelay: { effect: feedbackDelay, wet: 0, on: false },\n      feedbackEffect: { effect: feedbackEffect, wet: 0, on: false },\n      freeverb: { effect: freeverb, wet: 0, on: false },\n      jcReverb: { effect: jcReverb, wet: 0, on: false },\n      phaser: { effect: phaser, wet: 0, on: false },\n      pingPongDelay: { effect: pingPongDelay, wet: 0, on: false },\n      pitchShift: { effect: pitchShift, wet: 0, on: false },\n      reverb: { effect: reverb, wet: 0, on: false },\n      stereoWidener: { effect: stereoWidener, wet: 0, on: false },\n      tremolo: { effect: tremolo, wet: 0, on: false },\n      vibrato: { effect: vibrato, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      loop\n    }\n\n    _.bindAll(\n      this,\n      'toggleSynth',\n      'toggleDistortion',\n      'changeDistortionWetValue'\n      //'changeDistortionValue'\n    )\n  }\n\n  toggleSynth() {\n    let { synth, loop } = this.state\n    let { instrument, on } = synth\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      synth: {\n        instrument: instrument,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleDistortion() {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // changeDistortionWetValue(value) {\n  //   let { effect, wet, on } = this.state.distortion\n  //\n  //   effect.wet.value = on == true ? value : 0\n  //   wet = value\n  //\n  //   this.setState({\n  //     distortion: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  changeDistortionValue(value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let { distortion, synth } = this.state\n\n    return (\n      <div>\n        <ToggleSwitch\n          name=\"play\"\n          value={synth.on}\n          handleToggleClick={this.toggleSynth}\n        />\n        Wet\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={distortion.effect.wet.value}\n          handleValueChange={this.changeDistortionWetValue}\n        />\n        <div onClick={this.toggleDistortion}>toggle Distortion</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}