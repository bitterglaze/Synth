{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../components/tunes/effects';\nimport * as synths from '../components/tunes/synths';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport ButtonSet from '../components/controls/ButtonSet';\nimport PolySynth from '../components/synths/PolySynth';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var ambientSynth = synths.fmsynth();\n    var ambientPingPongDelay = effects.pingPongDelay();\n    var ambientChebyshev = effects.chebyshev();\n    var ambientPhaser = effects.phaser();\n    var ambientBitCrusher = effects.bitCrusher();\n    var ambientAutoPanner = effects.autoPanner();\n    var ambientDistortion = effects.distortion();\n    var leadSynth = synths.polySynth();\n    var leadDistortion = effects.distortion(); // Loops\n    //\n    //play the loop between 0-2m on the transport\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    var loop1 = new Tone.Pattern(function (time, note) {\n      leadSynth.synth.triggerAttackRelease(['C6', 'C3', 'F4', 'A2', 'C1', 'F1'], '4n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      ambientSynth.synth.triggerAttackRelease('E1', '4n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      leadSynth.synth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      leadSynth.synth.triggerAttackRelease('F1', '16n', time);\n    }, '16n');\n    ambientSynth.chain(ambientPingPongDelay, ambientChebyshev, ambientPhaser, ambientBitCrusher, ambientAutoPanner, ambientDistortion, Tone.Master);\n    leadSynth.synth.chain(leadDistortion, Tone.Master);\n    var ambientMachine = {\n      synth: synths.fmsynth,\n      pingPongDelay: {\n        effect: effects.pingPongDelay(),\n        wet: defaultWetValue,\n        on: false\n      },\n      chebyshev: {\n        effect: effects.chebyshev(),\n        wet: defaultWetValue,\n        on: false\n      },\n      phaser: {\n        effect: effects.phaser(),\n        wet: defaultWetValue,\n        on: false\n      },\n      bitCrusher: {\n        effect: effects.bitCrusher(),\n        wet: defaultWetValue,\n        on: false\n      },\n      autoPanner: {\n        effect: effects.autoPanner(),\n        wet: defaultWetValue,\n        on: false\n      },\n      distortion: {\n        effect: effects.distortion(),\n        wet: defaultWetValue,\n        on: false\n      }\n    };\n    var leadMachine = {\n      synth: synths.synth,\n      distortion: {\n        effect: effects.distortion(),\n        wet: defaultWetValue,\n        on: false\n      }\n    };\n    _this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth: ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadSynth: leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'getRandomArbitrary',\n    // 'generateRandom',\n    'toggleLoop', // 'togglePart',\n    'changeSynthValue', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue');\n\n    Tone.Transport.bpm.value = 100;\n    Tone.Transport.start();\n    return _this;\n  } // handleValueChange(name, property, value) {\n  //   const { changeSynthValue } = this.props\n  //   changeSynthValue(name, property, value)\n  // }\n  //\n  // componentDidMount() {\n  //   //this.generateRandom()\n  //\n  //   let { effect, wet, on } = this.state.ambientMachine.distortion\n  //\n  //   effect.wet.value = on == true ? this.props.wet : 0\n  //   effect.distortion = this.props.distortion\n  //   effect.oversample = this.props.oversample\n  //\n  //   this.setState({\n  //     ambientMachine: {\n  //       name,\n  //       effect,\n  //       wet: this.props.wet,\n  //       on\n  //     }\n  //   })\n  // }\n  ///RANDOM\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 30)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  // }\n\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    } //ПАРТЫ\n    //   togglePart(partName) {\n    //   let { part, on } = this.state[partName]\n    //\n    //   if (on == true) {\n    //     part.stop()\n    //   } else {\n    //     console.log('yo')\n    //     part.at('1m')\n    //     part.start(0)\n    //     part.loop = true\n    //     part.loopEnd = '8m'\n    //   }\n    //\n    //   this.setState({\n    //     [`${partName}`]: {\n    //       part: part,\n    //       on: !on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName];\n      var envelope = synth.instrument.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.instrument.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on; // console.log(this.state.autoPanner)\n\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      console.log(effectName, effectProperty, value);\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    } // Специфичность чебушев\n    // changeChebyshevValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.chebyshev\n    //\n    //   effect.order = Math.round(value)\n    //\n    //   this.setState({\n    //     chebyshev: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          ambientSynth = _this$state.ambientSynth,\n          ambientPingPongDelay = _this$state.ambientPingPongDelay,\n          ambientChebyshev = _this$state.ambientChebyshev,\n          ambientPhaser = _this$state.ambientPhaser,\n          ambientBitCrusher = _this$state.ambientBitCrusher,\n          ambientAutoPanner = _this$state.ambientAutoPanner,\n          ambientDistortion = _this$state.ambientDistortion,\n          leadSynth = _this$state.leadSynth,\n          leadDistortion = _this$state.leadDistortion,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4;\n      var _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          changeSynthValue = this.changeSynthValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"A\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, ambientDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      })), React.createElement(Distortion, Object.assign({}, leadDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('leadDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, ambientPingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPingPongDelay');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changePingPongDelayValue: changePingPongDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, ambientChebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientChebyshev');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, ambientPhaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPhaser');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePhaserSecValue: this.changePhaserSecValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, ambientBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientBitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, ambientAutoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoPanner');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerValue: this.changeAutoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","synths","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","ButtonSet","PolySynth","Synth","props","defaultWetValue","ambientSynth","fmsynth","ambientPingPongDelay","pingPongDelay","ambientChebyshev","chebyshev","ambientPhaser","phaser","ambientBitCrusher","bitCrusher","ambientAutoPanner","autoPanner","ambientDistortion","distortion","leadSynth","polySynth","leadDistortion","loop1","Pattern","time","note","synth","triggerAttackRelease","loop2","Loop","loop3","loop4","chain","Master","ambientMachine","effect","wet","on","leadMachine","state","name","loop","bindAll","Transport","bpm","value","start","loopName","stop","setState","synthName","effectName","envelope","instrument","oscillator","effectProperty","console","log","Math","round","toggleEffect","toggleLoop","changeSynthValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","changePingPongDelayValue","changeChebyshevValue","changePhaserSecValue","changeBitCrusherValue","changeAutoPannerValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../components/tunes/effects'\nimport * as synths from '../components/tunes/synths'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport ButtonSet from '../components/controls/ButtonSet'\n\nimport PolySynth from '../components/synths/PolySynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let ambientSynth = synths.fmsynth()\n    let ambientPingPongDelay = effects.pingPongDelay()\n    let ambientChebyshev = effects.chebyshev()\n    let ambientPhaser = effects.phaser()\n    let ambientBitCrusher = effects.bitCrusher()\n    let ambientAutoPanner = effects.autoPanner()\n    let ambientDistortion = effects.distortion()\n\n    let leadSynth = synths.polySynth()\n    let leadDistortion = effects.distortion()\n\n    // Loops\n\n    //\n\n    //play the loop between 0-2m on the transport\n\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      leadSynth.synth.triggerAttackRelease(\n        ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '4n',\n        time\n      )\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      ambientSynth.synth.triggerAttackRelease('E1', '4n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      leadSynth.synth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      leadSynth.synth.triggerAttackRelease('F1', '16n', time)\n    }, '16n')\n\n    ambientSynth.chain(\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      Tone.Master\n    )\n\n    leadSynth.synth.chain(leadDistortion, Tone.Master)\n\n    let ambientMachine = {\n      synth: synths.fmsynth,\n      pingPongDelay: {\n        effect: effects.pingPongDelay(),\n        wet: defaultWetValue,\n        on: false\n      },\n      chebyshev: {\n        effect: effects.chebyshev(),\n        wet: defaultWetValue,\n        on: false\n      },\n      phaser: {\n        effect: effects.phaser(),\n        wet: defaultWetValue,\n        on: false\n      },\n      bitCrusher: {\n        effect: effects.bitCrusher(),\n        wet: defaultWetValue,\n        on: false\n      },\n      autoPanner: {\n        effect: effects.autoPanner(),\n        wet: defaultWetValue,\n        on: false\n      },\n      distortion: {\n        effect: effects.distortion(),\n        wet: defaultWetValue,\n        on: false\n      }\n    }\n\n    let leadMachine = {\n      synth: synths.synth,\n      distortion: {\n        effect: effects.distortion(),\n        wet: defaultWetValue,\n        on: false\n      }\n    }\n\n    this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false }\n    }\n\n    _.bindAll(\n      this,\n      // 'getRandomArbitrary',\n      // 'generateRandom',\n      'toggleLoop',\n      // 'togglePart',\n      'changeSynthValue',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue'\n    )\n\n    Tone.Transport.bpm.value = 100\n    Tone.Transport.start()\n  }\n\n  // handleValueChange(name, property, value) {\n  //   const { changeSynthValue } = this.props\n  //   changeSynthValue(name, property, value)\n  // }\n\n  //\n  // componentDidMount() {\n  //   //this.generateRandom()\n  //\n  //   let { effect, wet, on } = this.state.ambientMachine.distortion\n  //\n  //   effect.wet.value = on == true ? this.props.wet : 0\n  //   effect.distortion = this.props.distortion\n  //   effect.oversample = this.props.oversample\n  //\n  //   this.setState({\n  //     ambientMachine: {\n  //       name,\n  //       effect,\n  //       wet: this.props.wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  ///RANDOM\n\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 30)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  //ПАРТЫ\n  //   togglePart(partName) {\n  //   let { part, on } = this.state[partName]\n  //\n  //   if (on == true) {\n  //     part.stop()\n  //   } else {\n  //     console.log('yo')\n  //     part.at('1m')\n  //     part.start(0)\n  //     part.loop = true\n  //     part.loopEnd = '8m'\n  //   }\n  //\n  //   this.setState({\n  //     [`${partName}`]: {\n  //       part: part,\n  //       on: !on\n  //     }\n  //   })\n  // }\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    let envelope = synth.instrument.envelope\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.instrument.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    console.log(effectName, effectProperty, value)\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // Специфичность чебушев\n  // changeChebyshevValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.chebyshev\n  //\n  //   effect.order = Math.round(value)\n  //\n  //   this.setState({\n  //     chebyshev: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  render() {\n    let {\n      ambientSynth,\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      leadSynth,\n      leadDistortion,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      // togglePart,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue\n    } = this\n\n    return (\n      <div>\n        <h2>PLAY</h2>\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\" id=\"loop1\">\n            A\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop2\">\n            ToggleLoop2\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop2')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop3\">\n            ToggleLoop3\n            <PlaySwitch\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop3')\n              }}\n            />\n          </div>\n\n          <div className=\"PlaySwitchContainer\" id=\"loop4\">\n            ToggleLoop4\n            <PlaySwitch\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...ambientDistortion}\n            toggleEffect={() => toggleEffect('ambientDistortion')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Distortion\n            {...leadDistortion}\n            toggleEffect={() => toggleEffect('leadDistortion')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <PingPongDelay\n            {...ambientPingPongDelay}\n            toggleEffect={() => toggleEffect('ambientPingPongDelay')}\n            changeEffectWetValue={changeEffectWetValue}\n            changePingPongDelayValue={changePingPongDelayValue}\n          />\n          <Chebyshev\n            {...ambientChebyshev}\n            toggleEffect={() => toggleEffect('ambientChebyshev')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevValue={this.changeChebyshevValue}\n          />\n          <Phaser\n            {...ambientPhaser}\n            toggleEffect={() => toggleEffect('ambientPhaser')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changePhaserSecValue={this.changePhaserSecValue}\n          />\n\n          <BitCrusher\n            {...ambientBitCrusher}\n            toggleEffect={() => toggleEffect('ambientBitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n          <AutoPanner\n            {...ambientAutoPanner}\n            toggleEffect={() => toggleEffect('ambientAutoPanner')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoPannerValue={this.changeAutoPannerValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}