{"ast":null,"code":"import Tone from 'tone';\n\nfunction distortion() {\n  return new Tone.Distortion({\n    distortion: 0,\n    oversample: '4x'\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nvar tremolo = new Tone.Tremolo({\n  frequency: 10,\n  type: 'sine',\n  depth: 100,\n  spread: 180\n});\nvar feedbackDelay = new Tone.FeedbackDelay({\n  delayTime: '8n',\n  maxDelay: 10\n});\nvar autoFilter = new Tone.AutoFilter({\n  frequency: 1,\n  type: 'sine',\n  depth: 1,\n  baseFrequency: 20,\n  octaves: 4.6,\n  filter: {\n    type: 'lowpass',\n    rolloff: -12,\n    Q: 1\n  }\n});\n\nfunction autoPanner() {\n  return new Tone.AutoPanner({\n    frequency: 1,\n    type: 'square',\n    depth: 1\n  });\n}\n\nvar autoWah = new Tone.AutoWah({\n  baseFrequency: 100,\n  octaves: 6,\n  sensitivity: 0,\n  Q: 2,\n  gain: 2,\n  follower: {\n    attack: 0.3,\n    release: 0.5\n  }\n});\n\nfunction bitCrusher() {\n  return new Tone.BitCrusher({\n    bits: 0\n  });\n}\n\nfunction chebyshev() {\n  return new Tone.Chebyshev({\n    order: 1,\n    oversample: 'none'\n  });\n}\n\nvar chorus = new Tone.Chorus({\n  frequency: 1.5,\n  delayTime: 3.5,\n  depth: 0.7,\n  type: 'sine',\n  spread: 180\n});\nvar convolver = new Tone.Convolver({\n  onload: Tone.noOp,\n  normalize: true\n}); // let effect = new Tone.Effect({\n//   wet: 1\n// })\n\nvar feedbackEffect = new Tone.FeedbackEffect({\n  feedback: 0.125\n});\nvar freeverb = new Tone.Freeverb({\n  roomSize: 0.7,\n  dampening: 3000\n});\nvar jcReverb = new Tone.JCReverb({\n  roomSize: 0.5\n});\n\nfunction phaser() {\n  return new Tone.Phaser({\n    frequency: 0,\n    octaves: 1,\n    stages: 10,\n    Q: 10,\n    baseFrequency: 350\n  });\n}\n\nfunction pingPongDelay() {\n  return new Tone.PingPongDelay({\n    delayTime: 0.01,\n    maxDelayTime: 1\n  });\n}\n\nvar pitchShift = new Tone.PitchShift({\n  pitch: 0,\n  windowSize: 0.1,\n  delayTime: 0,\n  feedback: 0\n});\nvar reverb = new Tone.Reverb({\n  decay: 1.5,\n  preDelay: 0.01\n});\nvar stereoWidener = new Tone.StereoWidener({\n  width: 0.5\n});\nvar vibrato = new Tone.Vibrato({\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n});\nautoFilter.wet.value = 0;\nautoWah.wet.value = 0;\nchorus.wet.value = 0;\nconvolver.wet.value = 0;\nfeedbackDelay.wet.value = 0;\nfeedbackEffect.wet.value = 0;\nfreeverb.wet.value = 0;\njcReverb.wet.value = 0;\npitchShift.wet.value = 0;\nreverb.wet.value = 0;\nstereoWidener.wet.value = 0;\ntremolo.wet.value = 0;\nvibrato.wet.value = 0;\nexport { autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/tunes/effects.js"],"names":["Tone","distortion","Distortion","oversample","f","wet","value","tremolo","Tremolo","frequency","type","depth","spread","feedbackDelay","FeedbackDelay","delayTime","maxDelay","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n\nfunction distortion() {\n  return new Tone.Distortion({\n    distortion: 0,\n    oversample: '4x'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nlet tremolo = new Tone.Tremolo({\n  frequency: 10,\n  type: 'sine',\n  depth: 100,\n  spread: 180\n})\n\nlet feedbackDelay = new Tone.FeedbackDelay({\n  delayTime: '8n',\n  maxDelay: 10\n})\n\nlet autoFilter = new Tone.AutoFilter({\n  frequency: 1,\n  type: 'sine',\n  depth: 1,\n  baseFrequency: 20,\n  octaves: 4.6,\n  filter: {\n    type: 'lowpass',\n    rolloff: -12,\n    Q: 1\n  }\n})\n\nfunction autoPanner() {\n  return new Tone.AutoPanner({\n    frequency: 1,\n    type: 'square',\n    depth: 1\n  })\n}\n\nlet autoWah = new Tone.AutoWah({\n  baseFrequency: 100,\n  octaves: 6,\n  sensitivity: 0,\n  Q: 2,\n  gain: 2,\n  follower: {\n    attack: 0.3,\n    release: 0.5\n  }\n})\nfunction bitCrusher() {\n  return new Tone.BitCrusher({\n    bits: 0\n  })\n}\nfunction chebyshev() {\n  return new Tone.Chebyshev({\n    order: 1,\n    oversample: 'none'\n  })\n}\n\nlet chorus = new Tone.Chorus({\n  frequency: 1.5,\n  delayTime: 3.5,\n  depth: 0.7,\n  type: 'sine',\n  spread: 180\n})\n\nlet convolver = new Tone.Convolver({\n  onload: Tone.noOp,\n  normalize: true\n})\n\n// let effect = new Tone.Effect({\n//   wet: 1\n// })\n\nlet feedbackEffect = new Tone.FeedbackEffect({\n  feedback: 0.125\n})\n\nlet freeverb = new Tone.Freeverb({\n  roomSize: 0.7,\n  dampening: 3000\n})\n\nlet jcReverb = new Tone.JCReverb({\n  roomSize: 0.5\n})\n\nfunction phaser() {\n  return new Tone.Phaser({\n    frequency: 0,\n    octaves: 1,\n    stages: 10,\n    Q: 10,\n    baseFrequency: 350\n  })\n}\n\nfunction pingPongDelay() {\n  return new Tone.PingPongDelay({\n    delayTime: 0.01,\n    maxDelayTime: 1\n  })\n}\n\nlet pitchShift = new Tone.PitchShift({\n  pitch: 0,\n  windowSize: 0.1,\n  delayTime: 0,\n  feedback: 0\n})\n\nlet reverb = new Tone.Reverb({\n  decay: 1.5,\n  preDelay: 0.01\n})\n\nlet stereoWidener = new Tone.StereoWidener({\n  width: 0.5\n})\n\nlet vibrato = new Tone.Vibrato({\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n})\n\nautoFilter.wet.value = 0\n\nautoWah.wet.value = 0\n\nchorus.wet.value = 0\nconvolver.wet.value = 0\n\nfeedbackDelay.wet.value = 0\nfeedbackEffect.wet.value = 0\nfreeverb.wet.value = 0\njcReverb.wet.value = 0\n\npitchShift.wet.value = 0\nreverb.wet.value = 0\nstereoWidener.wet.value = 0\ntremolo.wet.value = 0\nvibrato.wet.value = 0\n\nexport {\n  autoFilter,\n  autoPanner,\n  autoWah,\n  bitCrusher,\n  chebyshev,\n  chorus,\n  convolver,\n  distortion,\n  feedbackDelay,\n  feedbackEffect,\n  freeverb,\n  jcReverb,\n  phaser,\n  pingPongDelay,\n  pitchShift,\n  reverb,\n  stereoWidener,\n  tremolo,\n  vibrato\n}\n"]},"metadata":{},"sourceType":"module"}