{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as effects from '../components/tunes/effects';\nimport * as parts from '../components/tunes/parts';\nimport * as synths from '../components/tunes/synths';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport ButtonSet from '../components/controls/ButtonSet';\nimport PolySynth from '../components/synths/PolySynth';\nimport FMSynth from '../components/synths/FMSynth';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var ambientSynth = synths.toneSynth();\n    var ambientPingPongDelay = effects.pingPongDelay();\n    var ambientChebyshev = effects.chebyshev();\n    var ambientPhaser = effects.phaser();\n    var ambientBitCrusher = effects.bitCrusher();\n    var ambientAutoPanner = effects.autoPanner();\n    var ambientDistortion = effects.distortion();\n    var leadSynth = synths.polySynth();\n    var leadDistortion = effects.distortion(); // Loops\n    //\n    //play the loop between 0-2m on the transport\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    var loop1 = new Tone.Pattern(function (time, note) {\n      leadSynth.triggerAttackRelease(['C6', 'C3', 'F4', 'A2', 'C1', 'F1'], '4n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      ambientSynth.triggerAttackRelease('E1', '4n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      leadSynth.triggerAttackRelease('E2', '16n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      leadSynth.triggerAttackRelease('F1', '16n', time);\n    }, '16n');\n    ambientSynth.chain(ambientPingPongDelay, ambientChebyshev, ambientPhaser, ambientBitCrusher, ambientAutoPanner, ambientDistortion, Tone.Master);\n    leadSynth.chain(leadDistortion, Tone.Master);\n    _this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth: ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadSynth: leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      part1: {\n        part: parts.part1(leadSynth),\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'getRandomArbitrary',\n    // 'generateRandom',\n    'toggleLoop', 'togglePart', 'changeSynthValue', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue');\n\n    Tone.Transport.bpm.value = 100;\n    Tone.Transport.start();\n    return _this;\n  } //\n\n\n  _createClass(Synth, [{\n    key: \"handleValueChange\",\n    value: function handleValueChange(name, property, value) {\n      var changeSynthValue = this.props.changeSynthValue;\n      changeSynthValue(name, property, value);\n    } //\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.generateRandom()\n      var _this$state$ambientDi = this.state.ambientDistortion,\n          name = _this$state$ambientDi.name,\n          effect = _this$state$ambientDi.effect,\n          wet = _this$state$ambientDi.wet,\n          on = _this$state$ambientDi.on;\n      effect.wet.value = on == true ? this.props.wet : 0;\n      effect.distortion = this.props.distortion;\n      effect.oversample = this.props.oversample;\n      this.setState({\n        ambientDistortion: {\n          name: name,\n          effect: effect,\n          wet: this.props.wet,\n          on: on\n        }\n      });\n    } ///RANDOM\n    // getRandomArbitrary(min, max) {\n    //   return Math.floor(Math.random() * (max - min)) + min\n    // }\n    //\n    // generateRandom() {\n    //   const { lastChange, timeout } = this.state\n    //\n    //   if (Date.now() - lastChange >= timeout) {\n    //     const random = this.getRandomArbitrary(100, 3000)\n    //     this.setState({\n    //       lastChange: Date.now(),\n    //       timeout: random\n    //     })\n    //\n    //     this.changeDistortionValue('distortion', random / 30)\n    //   }\n    //\n    //   setTimeout(() => this.generateRandom(), timeout)\n    // }\n\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    } //ПАРТЫ\n\n  }, {\n    key: \"togglePart\",\n    value: function togglePart(partName) {\n      var _this$state$partName = this.state[partName],\n          part = _this$state$partName.part,\n          on = _this$state$partName.on;\n\n      if (on == true) {\n        part.stop();\n      } else {\n        console.log('yo');\n        part.at('1m');\n        part.start(0);\n        part.loop = true;\n        part.loopEnd = '8m';\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(partName), {\n        part: part,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName];\n      var envelope = synth.instrument.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.instrument.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on; // console.log(this.state.autoPanner)\n\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      console.log(value);\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      console.log(effectName, effectProperty, value);\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    } // Специфичность чебушев\n    // changeChebyshevValue(effectName, value) {\n    //   let { effect, wet, on } = this.state.chebyshev\n    //\n    //   effect.order = Math.round(value)\n    //\n    //   this.setState({\n    //     chebyshev: {\n    //       effect,\n    //       wet,\n    //       on\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          ambientSynth = _this$state.ambientSynth,\n          ambientPingPongDelay = _this$state.ambientPingPongDelay,\n          ambientChebyshev = _this$state.ambientChebyshev,\n          ambientPhaser = _this$state.ambientPhaser,\n          ambientBitCrusher = _this$state.ambientBitCrusher,\n          ambientAutoPanner = _this$state.ambientAutoPanner,\n          ambientDistortion = _this$state.ambientDistortion,\n          leadSynth = _this$state.leadSynth,\n          leadDistortion = _this$state.leadDistortion,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          part1 = _this$state.part1;\n      var _this$state2 = this.state,\n          _toggleEffect = _this$state2.toggleEffect,\n          toggleLoop = _this$state2.toggleLoop,\n          togglePart = _this$state2.togglePart,\n          changeSynthValue = _this$state2.changeSynthValue,\n          changeEffectWetValue = _this$state2.changeEffectWetValue,\n          changeEffectValue = _this$state2.changeEffectValue,\n          changeEffectFilterValue = _this$state2.changeEffectFilterValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"div\", {\n        className: \"PlaysSwitchCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"PART\", React.createElement(PlaySwitch, {\n        synth: \"polySynth\",\n        instrument: leadSynth,\n        on: part1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.togglePart('part1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), \"A\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"ToggleLoop2\", React.createElement(PlaySwitch, {\n        synth: \"leadSynth\",\n        instrument: leadSynth,\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"ToggleLoop3\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitchContainer\",\n        id: \"loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"ToggleLoop4\", React.createElement(PlaySwitch, {\n        synth: \"ambientSynth\",\n        instrument: ambientSynth,\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PannelsCover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, ambientDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      })), React.createElement(Distortion, Object.assign({}, leadDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('leadDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, ambientPingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPingPongDelay');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, ambientChebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientChebyshev');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      })), React.createElement(Phaser, Object.assign({}, ambientPhaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientPhaser');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, ambientBitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientBitCrusher');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, ambientAutoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('ambientAutoPanner');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","parts","synths","PlaySwitch","Distortion","Chebyshev","Phaser","PingPongDelay","BitCrusher","AutoPanner","ButtonSet","PolySynth","FMSynth","Synth","props","defaultWetValue","ambientSynth","toneSynth","ambientPingPongDelay","pingPongDelay","ambientChebyshev","chebyshev","ambientPhaser","phaser","ambientBitCrusher","bitCrusher","ambientAutoPanner","autoPanner","ambientDistortion","distortion","leadSynth","polySynth","leadDistortion","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","chain","Master","state","name","effect","wet","on","loop","part1","part","bindAll","Transport","bpm","value","start","property","changeSynthValue","oversample","setState","loopName","stop","partName","console","log","at","loopEnd","synthName","effectName","synth","envelope","instrument","oscillator","effectProperty","Math","round","toggleEffect","toggleLoop","togglePart","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as effects from '../components/tunes/effects'\nimport * as parts from '../components/tunes/parts'\nimport * as synths from '../components/tunes/synths'\n\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport ButtonSet from '../components/controls/ButtonSet'\n\nimport PolySynth from '../components/synths/PolySynth'\nimport FMSynth from '../components/synths/FMSynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let ambientSynth = synths.toneSynth()\n    let ambientPingPongDelay = effects.pingPongDelay()\n    let ambientChebyshev = effects.chebyshev()\n    let ambientPhaser = effects.phaser()\n    let ambientBitCrusher = effects.bitCrusher()\n    let ambientAutoPanner = effects.autoPanner()\n    let ambientDistortion = effects.distortion()\n\n    let leadSynth = synths.polySynth()\n    let leadDistortion = effects.distortion()\n\n    // Loops\n\n    //\n\n    //play the loop between 0-2m on the transport\n\n    //\n    // var pattern = new Tone.Pattern(\n    //   function(time, note) {},\n    //   ['C2', 'D4', 'E5', 'A6'],\n    //   'upDown'\n    // )\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      leadSynth.triggerAttackRelease(\n        ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '4n',\n        time\n      )\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      ambientSynth.triggerAttackRelease('E1', '4n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      leadSynth.triggerAttackRelease('E2', '16n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      leadSynth.triggerAttackRelease('F1', '16n', time)\n    }, '16n')\n\n    ambientSynth.chain(\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      Tone.Master\n    )\n\n    leadSynth.chain(leadDistortion, Tone.Master)\n\n    this.state = {\n      // lastChange: Date.now(),\n      // timeout: 100,\n      ambientSynth,\n      ambientPingPongDelay: {\n        name: 'ambientPingPongDelay',\n        effect: ambientPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      ambientChebyshev: {\n        name: 'ambientChebyshev',\n        effect: ambientChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientPhaser: {\n        name: 'ambientPhaser',\n        effect: ambientPhaser,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientBitCrusher: {\n        name: 'ambientBitCrusher',\n        effect: ambientBitCrusher,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientAutoPanner: {\n        name: 'ambientAutoPanner',\n        effect: ambientAutoPanner,\n        wet: defaultWetValue,\n        on: false\n      },\n\n      ambientDistortion: {\n        name: 'ambientDistortion',\n        effect: ambientDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      leadSynth,\n      leadDistortion: {\n        name: 'leadDistortion',\n        effect: leadDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false },\n      part1: {\n        part: parts.part1(leadSynth),\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      // 'getRandomArbitrary',\n      // 'generateRandom',\n      'toggleLoop',\n      'togglePart',\n      'changeSynthValue',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue'\n    )\n\n    Tone.Transport.bpm.value = 100\n    Tone.Transport.start()\n  }\n  //\n  handleValueChange(name, property, value) {\n    const { changeSynthValue } = this.props\n    changeSynthValue(name, property, value)\n  }\n\n  //\n  componentDidMount() {\n    //this.generateRandom()\n\n    let { name, effect, wet, on } = this.state.ambientDistortion\n\n    effect.wet.value = on == true ? this.props.wet : 0\n    effect.distortion = this.props.distortion\n    effect.oversample = this.props.oversample\n\n    this.setState({\n      ambientDistortion: {\n        name,\n        effect,\n        wet: this.props.wet,\n        on\n      }\n    })\n  }\n\n  ///RANDOM\n\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 30)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  //ПАРТЫ\n  togglePart(partName) {\n    let { part, on } = this.state[partName]\n\n    if (on == true) {\n      part.stop()\n    } else {\n      console.log('yo')\n      part.at('1m')\n      part.start(0)\n      part.loop = true\n      part.loopEnd = '8m'\n    }\n\n    this.setState({\n      [`${partName}`]: {\n        part: part,\n        on: !on\n      }\n    })\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    let envelope = synth.instrument.envelope\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.instrument.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n    // console.log(this.state.autoPanner)\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n    console.log(value)\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    console.log(effectName, effectProperty, value)\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  // Специфичность чебушев\n  // changeChebyshevValue(effectName, value) {\n  //   let { effect, wet, on } = this.state.chebyshev\n  //\n  //   effect.order = Math.round(value)\n  //\n  //   this.setState({\n  //     chebyshev: {\n  //       effect,\n  //       wet,\n  //       on\n  //     }\n  //   })\n  // }\n\n  render() {\n    let {\n      ambientSynth,\n      ambientPingPongDelay,\n      ambientChebyshev,\n      ambientPhaser,\n      ambientBitCrusher,\n      ambientAutoPanner,\n      ambientDistortion,\n      leadSynth,\n      leadDistortion,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      part1\n    } = this.state\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      togglePart,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue\n    } = this.state\n\n    return (\n      <div>\n        <h2>PLAY</h2>\n        <div className=\"PlaysSwitchCover\">\n          <div className=\"PlaySwitchContainer\" id=\"loop1\">\n            PART\n            <PlaySwitch\n              synth=\"polySynth\"\n              instrument={leadSynth}\n              on={part1.on}\n              handleToggleClick={() => {\n                this.togglePart('part1')\n              }}\n            />\n            A\n            <PlaySwitch\n              synth=\"ambientSynth\"\n              instrument={ambientSynth}\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop2\">\n            ToggleLoop2\n            <PlaySwitch\n              synth=\"leadSynth\"\n              instrument={leadSynth}\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop2')\n              }}\n            />\n          </div>\n          <div className=\"PlaySwitchContainer\" id=\"loop3\">\n            ToggleLoop3\n            <PlaySwitch\n              synth=\"ambientSynth\"\n              instrument={ambientSynth}\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop3')\n              }}\n            />\n          </div>\n\n          <div className=\"PlaySwitchContainer\" id=\"loop4\">\n            ToggleLoop4\n            <PlaySwitch\n              synth=\"ambientSynth\"\n              instrument={ambientSynth}\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"PannelsCover\">\n          <Distortion\n            {...ambientDistortion}\n            toggleEffect={() => toggleEffect('ambientDistortion')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Distortion\n            {...leadDistortion}\n            toggleEffect={() => toggleEffect('leadDistortion')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <PingPongDelay\n            {...ambientPingPongDelay}\n            toggleEffect={() => toggleEffect('ambientPingPongDelay')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Chebyshev\n            {...ambientChebyshev}\n            toggleEffect={() => toggleEffect('ambientChebyshev')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Phaser\n            {...ambientPhaser}\n            toggleEffect={() => toggleEffect('ambientPhaser')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n\n          <BitCrusher\n            {...ambientBitCrusher}\n            toggleEffect={() => toggleEffect('ambientBitCrusher')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <AutoPanner\n            {...ambientAutoPanner}\n            toggleEffect={() => toggleEffect('ambientAutoPanner')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}