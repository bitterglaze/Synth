{"ast":null,"code":"var _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Tone from 'tone';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 1,\n      oversample: '4x'\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var distortion100 = new Tone.Distortion({\n      distortion: 100,\n      oversample: '4x'\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    _this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      feedbackDelay: feedbackDelay,\n      feedbackDelayIsOn: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      distortion100: distortion100,\n      distortion100IsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      effect: effect,\n      effectIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false,\n      pitchShift: pitchShift,\n      pitchShiftIsOn: false,\n      reverb: reverb,\n      reverbIsOn: false,\n      stereoWidener: stereoWidener,\n      stereoWidenerIsOn: false,\n      vibrato: vibrato,\n      vibratoIsOn: false\n    };\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleFilter = _this.toggleFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion100 = _this.toggleDistortion100.bind(_assertThisInitialized(_this));\n    _this.toggleAutoPanner = _this.toggleAutoPanner.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth();\n      synth.chain(this.state.autoFilter, this.state.feedbackDelay, this.state.tremolo, this.state.distortion, this.state.distortion100, this.state.autoPanner, Tone.Master);\n      this.setState({\n        synth: synth\n      });\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease('C2', '8n', time);\n      }, '4n');\n      loop.start('0m').stop('16m');\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      if (this.state.autoFilterIsOn == true) {\n        this.state.autoFilter.wet.value = 0;\n        this.setState({\n          autoFilterIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.autoFilter, Tone.Master);\n        this.state.autoFilter.wet.value = 1;\n        this.setState({\n          autoFilterIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      // let feedbackDelay1 = new Tone.FeedbackDelay({\n      //   delayTime: '32n',\n      //   maxDelay: 10\n      // })\n      //\n      // let feedbackDelay2 = new Tone.FeedbackDelay({\n      //   delayTime: '8n',\n      //   maxDelay: 10\n      // })\n      //\n      // this.state.synth.connect(feedbackDelay1)\n      // this.state.synth.connect(feedbackDelay2)\n      if (this.state.feedbackDelayIsOn == true) {\n        this.state.feedbackDelay.wet.value = 0;\n        this.setState({\n          feedbackDelayIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.feedbackDelay, Tone.Master);\n        this.state.feedbackDelay.wet.value = 1;\n        this.setState({\n          feedbackDelayIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      if (this.state.tremoloIsOn == true) {\n        this.state.tremolo.wet.value = 0;\n        this.setState({\n          tremoloIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.tremolo, Tone.Master);\n        this.state.tremolo.wet.value = 1;\n        this.setState({\n          tremoloIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      if (this.state.distortionIsOn == true) {\n        // this.state.synth.disconnect()\n        // this.state.synth.chain(Tone.Master) строчка ниже заменяет\n        this.state.distortion.wet.value = 0;\n        this.setState({\n          distortionIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.distortion, Tone.Master);\n        this.state.distortion.wet.value = 1;\n        this.setState({\n          distortionIsOn: true\n        });\n      } //this.state.synth.connect(distortion)\n\n    }\n  }, {\n    key: \"toggleDistortion100\",\n    value: function toggleDistortion100() {\n      // let { distortion } = this.state\n      // distortion.distortion = 100\n      //\n      // this.setState({\n      //   distortion: distortion\n      // })\n      if (this.state.distortion100IsOn == true) {\n        this.state.distortion100.wet.value = 0;\n        this.setState({\n          distortion100IsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.distortion100, Tone.Master);\n        this.state.distortion100.wet.value = 1;\n        this.setState({\n          distortion100IsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      if (this.state.autoPannerIsOn == true) {\n        this.state.autoPanner.wet.value = 0;\n        this.setState({\n          autoPannerIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.autoPanner, Tone.Master);\n        this.state.autoPanner.wet.value = 1;\n        this.setState({\n          autoPannerIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"toggle Filter \", this.state.autoFilterIsOn), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"toggle FeedbackDelay \", this.state.feedbackDelayIsOn), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"toggle Tremolo \", this.state.tremoloIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"toggle Distortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"toggle Distortion100 \", this.state.distortion100IsOn), React.createElement(\"div\", {\n        onClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"toggle AutoPanner \", this.state.autoPannerIsOn));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","distortion","Distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","feedbackDelay","FeedbackDelay","delayTime","maxDelay","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","distortion100","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","state","distortionIsOn","tremoloIsOn","feedbackDelayIsOn","autoFilterIsOn","distortion100IsOn","autoPannerIsOn","autoWahIsOn","bitCrusherIsOn","chebyshevIsOn","chorusIsOn","convolverIsOn","effectIsOn","feedbackEffectIsOn","freeverbIsOn","jcReverbIsOn","phaserIsOn","pingPongDelayIsOn","pitchShiftIsOn","reverbIsOn","stereoWidenerIsOn","vibratoIsOn","startSynth","bind","toggleFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleDistortion100","toggleAutoPanner","synth","chain","Master","setState","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Tone from 'tone'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 1,\n      oversample: '4x'\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 100,\n      spread: 180\n    })\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 20,\n      octaves: 4.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let distortion100 = new Tone.Distortion({\n      distortion: 100,\n      oversample: '4x'\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let effect = new Tone.Effect({\n      wet: 1\n    })\n\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      feedbackDelay: feedbackDelay,\n      feedbackDelayIsOn: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      distortion100: distortion100,\n      distortion100IsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      effect: effect,\n      effectIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false,\n      pitchShift: pitchShift,\n      pitchShiftIsOn: false,\n      reverb: reverb,\n      reverbIsOn: false,\n      stereoWidener: stereoWidener,\n      stereoWidenerIsOn: false,\n      vibrato: vibrato,\n      vibratoIsOn: false\n    }\n\n    this.startSynth = this.startSynth.bind(this)\n    this.toggleFilter = this.toggleFilter.bind(this)\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n    this.toggleTremolo = this.toggleTremolo.bind(this)\n    this.toggleDistortion = this.toggleDistortion.bind(this)\n    this.toggleDistortion100 = this.toggleDistortion100.bind(this)\n    this.toggleAutoPanner = this.toggleAutoPanner.bind(this)\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth()\n    synth.chain(\n      this.state.autoFilter,\n      this.state.feedbackDelay,\n      this.state.tremolo,\n      this.state.distortion,\n      this.state.distortion100,\n\n      this.state.autoPanner,\n\n      Tone.Master\n    )\n\n    this.setState({\n      synth: synth\n    })\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    loop.start('0m').stop('16m')\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleFilter() {\n    if (this.state.autoFilterIsOn == true) {\n      this.state.autoFilter.wet.value = 0\n\n      this.setState({\n        autoFilterIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.autoFilter, Tone.Master)\n      this.state.autoFilter.wet.value = 1\n\n      this.setState({\n        autoFilterIsOn: true\n      })\n    }\n  }\n\n  toggleFeedbackDelay() {\n    // let feedbackDelay1 = new Tone.FeedbackDelay({\n    //   delayTime: '32n',\n    //   maxDelay: 10\n    // })\n    //\n    // let feedbackDelay2 = new Tone.FeedbackDelay({\n    //   delayTime: '8n',\n    //   maxDelay: 10\n    // })\n    //\n    // this.state.synth.connect(feedbackDelay1)\n    // this.state.synth.connect(feedbackDelay2)\n    if (this.state.feedbackDelayIsOn == true) {\n      this.state.feedbackDelay.wet.value = 0\n\n      this.setState({\n        feedbackDelayIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.feedbackDelay, Tone.Master)\n      this.state.feedbackDelay.wet.value = 1\n\n      this.setState({\n        feedbackDelayIsOn: true\n      })\n    }\n  }\n\n  toggleTremolo() {\n    if (this.state.tremoloIsOn == true) {\n      this.state.tremolo.wet.value = 0\n\n      this.setState({\n        tremoloIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.tremolo, Tone.Master)\n      this.state.tremolo.wet.value = 1\n\n      this.setState({\n        tremoloIsOn: true\n      })\n    }\n  }\n\n  toggleDistortion() {\n    if (this.state.distortionIsOn == true) {\n      // this.state.synth.disconnect()\n      // this.state.synth.chain(Tone.Master) строчка ниже заменяет\n\n      this.state.distortion.wet.value = 0\n\n      this.setState({\n        distortionIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.distortion, Tone.Master)\n      this.state.distortion.wet.value = 1\n\n      this.setState({\n        distortionIsOn: true\n      })\n    }\n    //this.state.synth.connect(distortion)\n  }\n\n  toggleDistortion100() {\n    // let { distortion } = this.state\n    // distortion.distortion = 100\n    //\n    // this.setState({\n    //   distortion: distortion\n    // })\n    if (this.state.distortion100IsOn == true) {\n      this.state.distortion100.wet.value = 0\n\n      this.setState({\n        distortion100IsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.distortion100, Tone.Master)\n      this.state.distortion100.wet.value = 1\n\n      this.setState({\n        distortion100IsOn: true\n      })\n    }\n  }\n\n  toggleAutoPanner() {\n    if (this.state.autoPannerIsOn == true) {\n      this.state.autoPanner.wet.value = 0\n\n      this.setState({\n        autoPannerIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.autoPanner, Tone.Master)\n      this.state.autoPanner.wet.value = 1\n\n      this.setState({\n        autoPannerIsOn: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleFilter}>\n          toggle Filter {this.state.autoFilterIsOn}\n        </div>\n        <div onClick={this.toggleFeedbackDelay}>\n          toggle FeedbackDelay {this.state.feedbackDelayIsOn}\n        </div>\n        <div onClick={this.toggleTremolo}>\n          toggle Tremolo {this.state.tremoloIsOn}\n        </div>\n        <div onClick={this.toggleDistortion}>\n          toggle Distortion {this.state.distortionIsOn}\n        </div>\n        <div onClick={this.toggleDistortion100}>\n          toggle Distortion100 {this.state.distortion100IsOn}\n        </div>\n        <div onClick={this.toggleAutoPanner}>\n          toggle AutoPanner {this.state.autoPannerIsOn}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}