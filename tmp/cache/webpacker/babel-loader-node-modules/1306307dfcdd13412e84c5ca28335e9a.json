{"ast":null,"code":"var _envelope,\n    _jsxFileName = \"/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/synths/PolySynth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\nimport ButtonSet from '../controls/ButtonSet';\nexport var instrument = new Tone.PolySynth({\n  polyphony: 4,\n  volume: 0,\n  detune: 0,\n  voice: Tone.Synth,\n  envelope: (_envelope = {\n    attack: 0.01,\n    attackCurve: 'linear',\n    decay: 0.05,\n    sustain: 0.2\n  }, _defineProperty(_envelope, \"sustain\", 0.2), _defineProperty(_envelope, \"release\", 0.4), _defineProperty(_envelope, \"releaseCurve\", 'bounce'), _envelope),\n  oscillator: {\n    width: 0.8\n  }\n});\n\nvar PolySynth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PolySynth, _React$Component);\n\n  function PolySynth(props) {\n    var _this;\n\n    _classCallCheck(this, PolySynth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolySynth).call(this, props));\n\n    _.bindAll(_assertThisInitialized(_this), 'handleValueChange');\n\n    return _this;\n  }\n\n  _createClass(PolySynth, [{\n    key: \"handleValueChange\",\n    value: function handleValueChange(name, property, value) {\n      var changeSynthValue = this.props.changeSynthValue;\n      changeSynthValue(name, property, value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          synth = _this$props.synth,\n          instrument = _this$props.instrument,\n          on = _this$props.on,\n          togglePlay = _this$props.togglePlay; // const { attack, decay, sustain, release } = instrument.envelope\n      // const { type } = instrument.oscillator\n\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"PolySynth\",\n        current: on,\n        handleClick: togglePlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"controlsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controlsRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PolySynth;\n}(React.Component);\n\nexport { PolySynth as default };","map":{"version":3,"sources":["/Users/bitterglaze/Share/hseadc2017_THEREMINVOX/app/javascript/components/synths/PolySynth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","ButtonSet","instrument","PolySynth","polyphony","volume","detune","voice","Synth","envelope","attack","attackCurve","decay","sustain","oscillator","width","props","bindAll","name","property","value","changeSynthValue","synth","on","togglePlay","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAO,IAAIC,UAAU,GAAG,IAAIN,IAAI,CAACO,SAAT,CAAmB;AACzCC,EAAAA,SAAS,EAAE,CAD8B;AAEzCC,EAAAA,MAAM,EAAE,CAFiC;AAGzCC,EAAAA,MAAM,EAAE,CAHiC;AAIzCC,EAAAA,KAAK,EAAEX,IAAI,CAACY,KAJ6B;AAKzCC,EAAAA,QAAQ;AACNC,IAAAA,MAAM,EAAE,IADF;AAENC,IAAAA,WAAW,EAAE,QAFP;AAGNC,IAAAA,KAAK,EAAE,IAHD;AAINC,IAAAA,OAAO,EAAE;AAJH,2CAKG,GALH,yCAMG,GANH,8CAOQ,QAPR,aALiC;AAczCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AAd6B,CAAnB,CAAjB;;IAmBcZ,S;;;;;AACnB,qBAAYa,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AACAtB,IAAAA,CAAC,CAACuB,OAAF,gCAAgB,mBAAhB;;AAFiB;AAGlB;;;;sCAEiBC,I,EAAMC,Q,EAAUC,K,EAAO;AAAA,UAC/BC,gBAD+B,GACV,KAAKL,KADK,CAC/BK,gBAD+B;AAEvCA,MAAAA,gBAAgB,CAACH,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,CAAhB;AACD;;;6BAEQ;AAAA,wBACuC,KAAKJ,KAD5C;AAAA,UACCM,KADD,eACCA,KADD;AAAA,UACQpB,UADR,eACQA,UADR;AAAA,UACoBqB,EADpB,eACoBA,EADpB;AAAA,UACwBC,UADxB,eACwBA,UADxB,EAEP;AACA;;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,WAApB;AAAgC,QAAA,OAAO,EAAED,EAAzC;AAA6C,QAAA,WAAW,EAAEC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CADF;AASD;;;;EAzBoC7B,KAAK,CAAC8B,S;;SAAxBtB,S","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\nimport ButtonSet from '../controls/ButtonSet'\n\nexport let instrument = new Tone.PolySynth({\n  polyphony: 4,\n  volume: 0,\n  detune: 0,\n  voice: Tone.Synth,\n  envelope: {\n    attack: 0.01,\n    attackCurve: 'linear',\n    decay: 0.05,\n    sustain: 0.2,\n    sustain: 0.2,\n    release: 0.4,\n    releaseCurve: 'bounce'\n  },\n  oscillator: {\n    width: 0.8\n  }\n})\n\nexport default class PolySynth extends React.Component {\n  constructor(props) {\n    super(props)\n    _.bindAll(this, 'handleValueChange')\n  }\n\n  handleValueChange(name, property, value) {\n    const { changeSynthValue } = this.props\n    changeSynthValue(name, property, value)\n  }\n\n  render() {\n    const { synth, instrument, on, togglePlay } = this.props\n    // const { attack, decay, sustain, release } = instrument.envelope\n    // const { type } = instrument.oscillator\n\n    return (\n      <div className=\"Effect\">\n        <ToggleSwitch value=\"PolySynth\" current={on} handleClick={togglePlay} />\n\n        <div className=\"controlsContainer\">\n          <div className=\"controlsRow\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}